{"version":3,"file":"static/js/807.72239380.chunk.js","mappings":"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","sources":["components/chart/Activity.tsx","utils/rating.ts","components/scope/EntryCard.tsx","components/scope/RatingView.tsx","components/scope/StatCat.tsx","utils/charts.ts","modules/Entries.tsx","components/scope/CommentCard.tsx","modules/Comments.tsx","contexts/Api.tsx","components/User.tsx","components/scope/Stat/RatingByUser.tsx","components/scope/TotalTable.tsx","hooks/useFetch.ts","modules/Total.tsx","components/atoms/BooleanText.tsx","modules/Overview.tsx","components/scope/parts/Header.tsx","hooks/useScope.ts","pages/Scope.tsx","utils/common.ts"],"sourcesContent":["import { Heading, VStack } from \"@chakra-ui/react\";\nimport { Bar, Line, Radar } from \"react-chartjs-2\";\nimport { ActivityChartData } from \"utils/charts\";\n\ninterface ActivityChartsProps {\n  data: ActivityChartData;\n  options?: Object;\n}\n\nfunction ActivityCharts({\n  data: { years, months, days, hours, ratingByEntity },\n  options,\n}: ActivityChartsProps) {\n  return (\n    <>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По годам</Heading>\n        <Bar data={years} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По месяцам</Heading>\n        <Bar data={months} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По дням</Heading>\n        <Bar data={days} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По часам</Heading>\n        <Radar data={hours} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">Оценки</Heading>\n        <Line data={ratingByEntity} />\n      </VStack>\n    </>\n  );\n}\n\nexport default ActivityCharts;\n","import type { Osnova } from \"types/osnova\";\n\nconst getRating = <T extends Pick<Osnova.Entry.Likes, \"count\" | \"summ\">>({\n  count,\n  summ,\n}: T) => {\n  const plus = Math.abs(count - (count - summ) / 2);\n  const minus = plus + summ * -1;\n\n  return { minus, plus };\n};\n\nconst calcLikers = (source: Osnova.Comment.LikersResponse[]) => {\n  const result: Osnova.Likers.Likers = {};\n  for (const data of source) {\n    for (const [id, val] of Object.entries(data.result)) {\n      if (!Reflect.has(result, id)) {\n        result[id] = {\n          minus: 0,\n          plus: 0,\n          total: 0,\n          avatar_url: \"\",\n          name: \"\",\n          id,\n        };\n      }\n      result[id].minus += Number(val.sign < 0);\n      result[id].plus += Number(val.sign > 0);\n      result[id].total++;\n\n      result[id].avatar_url = val.avatar_url;\n      result[id].name = val.name;\n    }\n  }\n  return result;\n};\n\nexport { getRating, calcLikers };\n","import {\n  Avatar,\n  Box,\n  Heading,\n  HStack,\n  Image,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\nimport { getRating } from \"utils/rating\";\n\ninterface EntryCardProps {\n  entry: Osnova.Entry.Entry;\n}\n\nfunction Tweet({ data: { markdown } }: Osnova.Entry.Block) {\n  return (\n    <Box p=\"3\" rounded=\"lg\" borderColor=\"gray.300\" borderWidth=\"1px\">\n      {markdown}\n    </Box>\n  );\n}\n\nfunction EntryCard({\n  entry: {\n    url,\n    hitsCount,\n    intro,\n    date,\n    likes: { count, summ },\n    cover,\n    subsite: { avatar_url, name },\n    title,\n    blocks,\n    ...entry\n  },\n}: EntryCardProps) {\n  const { minus, plus } = getRating({ count, summ });\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        {title && <Heading size=\"sm\">{title}</Heading>}\n        <Text>{intro}</Text>\n        {cover && (\n          <Image\n            src={cover.thumbnailUrl}\n            alt=\"\"\n            objectFit={\"contain\"}\n            pointerEvents={\"none\"}\n          />\n        )}\n        {blocks && blocks[0] && blocks[0].type === \"tweet\" && (\n          <Tweet {...blocks[0]} />\n        )}\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <Text pl=\"8\" color=\"gray.400\">\n          {hitsCount} просмотров\n        </Text>\n        <HStack>\n          <Text color=\"red.300\">{minus}</Text>\n          <Text color=\"green.300\">{plus}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default EntryCard;\n","import { Stat, StatLabel, StatNumber } from \"@chakra-ui/react\";\nimport { PropsWithChildren } from \"react\";\n\nfunction RatingView({\n  label = \"Рейтинг\",\n  children,\n}: PropsWithChildren<{ label?: string }>) {\n  return (\n    <Stat>\n      <StatLabel>{label}</StatLabel>\n      <StatNumber color=\"gray.500\">{children}</StatNumber>\n    </Stat>\n  );\n}\n\nexport default RatingView;\n","import { VStack, Heading } from \"@chakra-ui/react\";\nimport { PropsWithChildren } from \"react\";\n\nfunction StatCat({ label, children }: PropsWithChildren<{ label: string }>) {\n  return (\n    <VStack align=\"flex-start\" minW=\"100%\">\n      <Heading size=\"md\">{label}</Heading>\n      {children}\n    </VStack>\n  );\n}\n\nexport default StatCat;\n","import type { ChartData } from \"chart.js\";\nimport { Osnova } from \"types/osnova\";\nimport { Common } from \"types/utils\";\nimport { getMonths } from \"./common\";\nimport { getRating } from \"./rating\";\n\ntype ActivityChartData = {\n  years: ChartData<\"bar\", number[], string>;\n  months: ChartData<\"bar\", number[], string>;\n  days: ChartData<\"bar\", number[], string>;\n  hours: ChartData<\"radar\", number[], string>;\n  ratingByEntity: ChartData<\"line\", number[], string>;\n};\n\nfunction getStats<\n  T extends {\n    result?: Array<\n      Common<\n        Osnova.Entry.EntriesResponse[\"result\"][0],\n        Osnova.Comment.CommentsResponse[\"result\"][0]\n      >\n    >;\n  }\n>(target: T, dsOpts = {}) {\n  const d = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0 };\n  const dd = { ...d, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0 };\n  const stats: {\n    years: Record<string, number>;\n    months: Record<string, number>;\n    days: Record<string, number>;\n    hours: Record<string, number>;\n    ratingByEntity: Record<string, { minus: number; plus: number }>;\n  } = {\n    years: {},\n    months: {\n      ...dd,\n    },\n    days: { ...d },\n    hours: {\n      ...d,\n      12: 0,\n      13: 0,\n      14: 0,\n      15: 0,\n      16: 0,\n      17: 0,\n      18: 0,\n      19: 0,\n      20: 0,\n      21: 0,\n      22: 0,\n      23: 0,\n    },\n    ratingByEntity: {},\n  };\n  for (const el of target?.result || []) {\n    const dt = new Date(el.date * 1000);\n    const year = dt.getUTCFullYear();\n    const month = dt.getUTCMonth();\n    const day = dt.getUTCDay();\n    const hour = dt.getUTCHours();\n    stats.years[year] = (stats.years[year] || 0) + 1;\n    stats.months[month] = (stats.months[month] || 0) + 1;\n    stats.days[day] = (stats.days[day] || 0) + 1;\n    stats.hours[hour] = (stats.hours[hour] || 0) + 1;\n    stats.ratingByEntity[el.id] = getRating(el.likes);\n  }\n  const ratingByEntity = [...Object.values(stats.ratingByEntity)];\n  return {\n    years: {\n      datasets: [\n        {\n          data: [...Object.values(stats.years)],\n          ...dsOpts,\n        },\n      ],\n      labels: [...Object.keys(stats.years)],\n    },\n    months: {\n      datasets: [{ data: [...Object.values(stats.months)], ...dsOpts }],\n      labels: [...getMonths()],\n    },\n    days: {\n      datasets: [{ data: [...Object.values(stats.days)], ...dsOpts }],\n      labels: [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\n    },\n    hours: {\n      datasets: [{ data: [...Object.values(stats.hours)], ...dsOpts }],\n      labels: [...Object.keys(stats.hours)],\n    },\n    ratingByEntity: {\n      datasets: [\n        {\n          data: [...ratingByEntity.map(({ minus }) => minus)],\n          label: \"Отрицательные\",\n          backgroundColor: \"rgba(229,62,62, 0.2)\",\n          borderColor: \"rgb(229,62,62)\",\n          borderWidth: 1,\n        },\n        {\n          data: [...ratingByEntity.map(({ plus }) => plus)],\n          label: \"Положительные\",\n          backgroundColor: \"rgba(72,187,120, 0.2)\",\n          borderColor: \"rgb(72,187,120)\",\n          borderWidth: 1,\n        },\n      ],\n      labels: [...Object.keys(stats.ratingByEntity)],\n    },\n  } as ActivityChartData;\n}\n\nexport { getStats, type ActivityChartData };\n","import {\n  SimpleGrid,\n  Stat,\n  StatLabel,\n  StatNumber,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  useConst,\n  VStack,\n} from \"@chakra-ui/react\";\nimport ActivityCharts from \"components/chart/Activity\";\nimport EntryCard from \"components/scope/EntryCard\";\nimport RatingView from \"components/scope/RatingView\";\nimport StatCat from \"components/scope/StatCat\";\nimport { useMemo } from \"react\";\nimport { Osnova } from \"types/osnova\";\nimport { getStats } from \"utils/charts\";\nimport { getRating } from \"utils/rating\";\n\nfunction Entries({ data }: { data: Osnova.Entry.EntriesResponse | undefined }) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingPlus: 0,\n      ratingMinus: 0,\n      comments: 0,\n      reposts: 0,\n      hits: 0,\n      mostHits: (data?.result || [])[0],\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      const { minus, plus } = getRating(entry.likes);\n      result.rating += plus - minus;\n      result.ratingPlus += plus;\n      result.ratingMinus += minus;\n      result.comments += entry.commentsCount;\n      result.reposts += Number(entry.isRepost);\n      result.hits += entry.hitsCount;\n      const { plus: pPlus } = getRating(result.mostLiked.likes);\n      const { minus: pMinus } = getRating(result.mostDisliked.likes);\n      if (entry.hitsCount > result.mostHits.hitsCount) {\n        result.mostHits = entry;\n      }\n      if (plus > pPlus) {\n        result.mostLiked = entry;\n      }\n      if (minus > pMinus) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  const options = useConst({ plugins: { legend: { display: false } } });\n  const entryDatasetOptions = useConst({\n    borderColor: \"rgb(237,137,54)\",\n    backgroundColor: \"rgba(237,137,54,0.4)\",\n    borderWidth: 1,\n  });\n\n  const charts = getStats(data || {}, entryDatasetOptions);\n\n  return (\n    <Tabs variant={\"enclosed\"} isFitted w=\"100%\">\n      <TabList w=\"100%\">\n        <Tab>Статистика</Tab>\n        <Tab>Активность</Tab>\n      </TabList>\n      <TabPanels w=\"100%\">\n        <TabPanel>\n          <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n            <SimpleGrid\n              columns={{ base: 2, md: 3 }}\n              spacing={1}\n              justifyContent=\"space-between\"\n              minW=\"100%\"\n            >\n              <RatingView>{stats.rating}</RatingView>\n              <RatingView label=\"Оценок [+]\">{stats.ratingPlus}</RatingView>\n              <RatingView label=\"Оценки [-]\">{stats.ratingMinus}</RatingView>\n              <Stat>\n                <StatLabel>Комментариев</StatLabel>\n                <StatNumber>{stats.comments}</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Просмотров</StatLabel>\n                <StatNumber>{stats.hits}</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Репостов</StatLabel>\n                <StatNumber>{stats.reposts}</StatNumber>\n              </Stat>\n            </SimpleGrid>\n            {stats.mostHits && (\n              <StatCat label=\"Наиболее просматриваемый\">\n                <EntryCard entry={stats.mostHits} />\n              </StatCat>\n            )}\n\n            {stats.mostLiked && (\n              <StatCat label=\"Наибольшее количество плюсов\">\n                <EntryCard entry={stats.mostLiked} />\n              </StatCat>\n            )}\n\n            {stats.mostDisliked && (\n              <StatCat label=\"Наибольшее количество минусов\">\n                <EntryCard entry={stats.mostDisliked} />\n              </StatCat>\n            )}\n          </VStack>\n        </TabPanel>\n        <TabPanel>\n          <ActivityCharts data={charts} options={options} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nexport default Entries;\n","import { Avatar, Heading, HStack, VStack, Text } from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\nimport { getRating } from \"utils/rating\";\n\ninterface CommentCardProps {\n  comment: Osnova.Comment.Comment;\n}\n\nfunction CommentCard({\n  comment: {\n    author: { avatar_url, name },\n    date,\n    likes: { count, summ },\n    id,\n    entry: { url },\n    html,\n  },\n}: CommentCardProps) {\n  const { minus, plus } = getRating({ count, summ });\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url + `?comment=${id}`}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        <Text dangerouslySetInnerHTML={{ __html: html }} />\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <span />\n        <HStack>\n          <Text color=\"red.300\">{minus}</Text>\n          <Text color=\"green.300\">{plus}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default CommentCard;\n","import {\n  useConst,\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n  VStack,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport ActivityCharts from \"components/chart/Activity\";\nimport CommentCard from \"components/scope/CommentCard\";\nimport RatingView from \"components/scope/RatingView\";\nimport StatCat from \"components/scope/StatCat\";\nimport { useMemo } from \"react\";\nimport { Osnova } from \"types/osnova\";\nimport { getStats } from \"utils/charts\";\nimport { getRating } from \"utils/rating\";\n\nfunction Comments({\n  data,\n}: {\n  data: Osnova.Comment.CommentsResponse | undefined;\n}) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingPlus: 0,\n      ratingMinus: 0,\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      const { plus, minus } = getRating(entry.likes);\n      result.rating += plus - minus;\n      result.ratingPlus += plus;\n      result.ratingMinus += minus;\n      const { plus: pPlus } = getRating(result.mostLiked.likes);\n      const { minus: pMinus } = getRating(result.mostDisliked.likes);\n      if (plus > pPlus) {\n        result.mostLiked = entry;\n      }\n      if (minus > pMinus) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  const options = useConst({ plugins: { legend: { display: false } } });\n  const commentDatasetOptions = useConst({\n    borderColor: \"rgb(49,130,206)\",\n    backgroundColor: \"rgba(49,130,206,0.4)\",\n    borderWidth: 1,\n  });\n\n  const charts = getStats(data || {}, commentDatasetOptions);\n\n  return (\n    <Tabs variant={\"enclosed\"} isFitted w=\"100%\">\n      <TabList>\n        <Tab>Статистика</Tab>\n        <Tab>Активность</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n            <SimpleGrid\n              columns={3}\n              spacing={1}\n              justifyContent=\"space-between\"\n              minW=\"100%\"\n            >\n              <RatingView>{stats.rating}</RatingView>\n              <RatingView label=\"Оценок [+]\">{stats.ratingPlus}</RatingView>\n              <RatingView label=\"Оценки [-]\">{stats.ratingMinus}</RatingView>\n            </SimpleGrid>\n\n            {stats.mostLiked && (\n              <StatCat label=\"Наибольшее количество плюсов\">\n                <CommentCard comment={stats.mostLiked} />\n              </StatCat>\n            )}\n\n            {stats.mostDisliked && (\n              <StatCat label=\"Наибольшее количество минусов\">\n                <CommentCard comment={stats.mostDisliked} />\n              </StatCat>\n            )}\n          </VStack>\n        </TabPanel>\n        <TabPanel>\n          <ActivityCharts data={charts} options={options} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nexport default Comments;\n","import { useContext } from \"react\";\nimport { createContext, PropsWithChildren } from \"react\";\n\nconst api = { host: \"tjournal.ru\", version: \"2.31\" };\nconst ApiContext = createContext(api);\nconst useApiContext = () => useContext(ApiContext);\n\nfunction ApiProvider({ children }: PropsWithChildren) {\n  return <ApiContext.Provider value={api}>{children}</ApiContext.Provider>;\n}\n\nexport { useApiContext };\nexport default ApiProvider;\n","import { HStack, Avatar, Text } from \"@chakra-ui/react\";\nimport { useApiContext } from \"contexts/Api\";\nimport { PropsWithChildren } from \"react\";\n\ninterface UserProps {\n  name: string;\n  avatar_url: string;\n  id: number | string;\n  size?: \"sm\" | \"md\";\n}\n\nfunction User({\n  name,\n  avatar_url,\n  id,\n  children,\n  size = \"md\",\n}: PropsWithChildren<UserProps>) {\n  const { host } = useApiContext();\n  return (\n    <HStack as=\"a\" href={`https://${host}/u/${id}`} target=\"_blank\">\n      <Avatar size={size} name={name} src={avatar_url} />\n      <Text\n        fontSize={size === \"md\" ? \"18px\" : \"14px\"}\n        as=\"b\"\n        maxW={{ base: \"150px\", md: \"180px\", lg: \"200px\" }}\n        textOverflow={\"ellipsis\"}\n        overflow=\"hidden\"\n      >\n        {name}\n      </Text>\n      {children}\n    </HStack>\n  );\n}\n\nexport default User;\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  HStack,\n  Text,\n} from \"@chakra-ui/react\";\nimport User from \"components/User\";\nimport { type ReactNode } from \"react\";\nimport type { Osnova } from \"types/osnova\";\n\ntype Rating = Pick<Osnova.Likers.Liker, \"plus\" | \"minus\">;\n\ninterface ShowRatingProps extends Rating {}\n\nfunction ShowRating({ plus, minus }: ShowRatingProps) {\n  return (\n    <HStack spacing={2}>\n      <Text fontSize=\"16px\" as=\"span\" color=\"green.300\">\n        {plus}\n      </Text>\n      <Text fontSize=\"16px\" as=\"span\" color=\"red.300\">\n        {minus}\n      </Text>\n      <Text fontSize=\"16px\" as=\"span\" color=\"gray.500\">\n        {plus + minus ?? \"N/A\"}\n      </Text>\n    </HStack>\n  );\n}\n\nexport interface RatingByUserProps extends Rating {\n  label: ReactNode;\n  name: string;\n  avatar_url: string;\n  id: string;\n}\n\nfunction RatingByUser({\n  label,\n  name,\n  avatar_url,\n  id,\n  ...rating\n}: RatingByUserProps) {\n  return (\n    <Stat>\n      <StatLabel>{label}</StatLabel>\n      <StatNumber>\n        <User name={name} avatar_url={avatar_url} id={id} />\n      </StatNumber>\n      <StatHelpText pl=\"14\">\n        <ShowRating {...rating} />\n      </StatHelpText>\n    </Stat>\n  );\n}\n\nexport default RatingByUser;\n","import {\n  Table,\n  TableCaption,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  chakra,\n  Flex,\n  Text,\n  IconButton,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Select,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport User from \"components/User\";\nimport type { Osnova } from \"types/osnova\";\nimport { useTable, useSortBy, usePagination, Column } from \"react-table\";\nimport {\n  TriangleDownIcon,\n  TriangleUpIcon,\n  ArrowLeftIcon,\n  ChevronLeftIcon,\n  ArrowRightIcon,\n  ChevronRightIcon,\n} from \"@chakra-ui/icons\";\nimport { useMemo } from \"react\";\n\nconst columns: Column<Osnova.Likers.Liker>[] = [\n  {\n    Header: \"Пользователь\",\n    accessor: (d) => d,\n    Cell: ({\n      value: { name, avatar_url, id },\n    }: {\n      value: Osnova.Likers.Liker;\n    }) => <User name={name} avatar_url={avatar_url} id={id} />,\n  },\n  {\n    Header: \"+\",\n    accessor: \"plus\",\n    isNumeric: true,\n  },\n  {\n    Header: \"-\",\n    accessor: \"minus\",\n    isNumeric: true,\n  },\n  {\n    Header: \"Всего\",\n    accessor: \"total\",\n    isNumeric: true,\n  },\n];\n\nfunction TotalTable({ likers }: { likers: Osnova.Likers.Likers }) {\n  const data = useMemo(() => [...Object.values(likers)], [likers]);\n  // https://codesandbox.io/s/fxx0v?file=/src/App.js:968-998\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable({ columns, data }, useSortBy, usePagination);\n\n  return (\n    <>\n      <Table size=\"sm\" {...getTableProps()}>\n        <TableCaption>Статистика оценок по пользователям</TableCaption>\n        <Thead>\n          {headerGroups.map((headerGroup) => (\n            <Tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <Th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  isNumeric={column.isNumeric}\n                >\n                  {column.render(\"Header\")}\n                  <chakra.span pl=\"4\">\n                    {column.isSorted ? (\n                      column.isSortedDesc ? (\n                        <TriangleDownIcon aria-label=\"sorted descending\" />\n                      ) : (\n                        <TriangleUpIcon aria-label=\"sorted ascending\" />\n                      )\n                    ) : null}\n                  </chakra.span>\n                </Th>\n              ))}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <Tr {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <Td\n                    {...cell.getCellProps()}\n                    isNumeric={cell.column.isNumeric}\n                  >\n                    {cell.render(\"Cell\")}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n\n      <Flex justifyContent=\"space-between\" m={4} alignItems=\"center\" w=\"100%\">\n        <Flex>\n          <Tooltip label=\"First Page\">\n            <IconButton\n              onClick={() => gotoPage(0)}\n              isDisabled={!canPreviousPage}\n              icon={<ArrowLeftIcon h={3} w={3} />}\n              mr={2}\n              aria-label=\"First Page\"\n            />\n          </Tooltip>\n          <Tooltip label=\"Previous Page\">\n            <IconButton\n              onClick={previousPage}\n              isDisabled={!canPreviousPage}\n              icon={<ChevronLeftIcon h={6} w={6} />}\n              aria-label=\"Previous Page\"\n            />\n          </Tooltip>\n        </Flex>\n\n        <Flex alignItems=\"center\">\n          <Text flexShrink=\"0\" mr={2}>\n            <Text fontWeight=\"bold\" as=\"span\">\n              {pageIndex + 1}\n            </Text>{\" \"}\n            of{\" \"}\n            <Text fontWeight=\"bold\" as=\"span\">\n              {pageOptions.length}\n            </Text>\n          </Text>\n          <NumberInput\n            ml={2}\n            mr={2}\n            w={16}\n            min={1}\n            max={pageOptions.length}\n            onChange={(value) => {\n              const page = value ? +value - 1 : 0;\n              gotoPage(page);\n            }}\n            display={{ base: \"none\", md: \"inline-block\" }}\n            defaultValue={pageIndex + 1}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n          <Select\n            w={32}\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </Select>\n        </Flex>\n\n        <Flex>\n          <Tooltip label=\"Next Page\">\n            <IconButton\n              onClick={nextPage}\n              isDisabled={!canNextPage}\n              icon={<ChevronRightIcon h={6} w={6} />}\n              aria-label=\"Next Page\"\n            />\n          </Tooltip>\n          <Tooltip label=\"Last Page\">\n            <IconButton\n              onClick={() => gotoPage(pageCount - 1)}\n              isDisabled={!canNextPage}\n              icon={<ArrowRightIcon h={3} w={3} />}\n              ml={2}\n              aria-label=\"Last page\"\n            />\n          </Tooltip>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n\nexport default TotalTable;\n","import { useApiContext } from \"contexts/Api\";\nimport { useEffect, useReducer, useRef, useState } from \"react\";\n\ninterface State<T> {\n  data?: T;\n  error?: Error;\n}\n\ntype Cache<T> = { [url: string]: T };\n\n// discriminated union type\ntype Action<T> =\n  | { type: \"loading\" }\n  | { type: \"fetched\"; payload: T }\n  | { type: \"error\"; payload: Error };\n\n/**\n * Fetches data by provided url\n *\n * https://usehooks-ts.com/react-hook/use-fetch\n *\n * @param url url to request\n * @param options fetch request init (optional)\n * @returns state of loading with payload\n */\nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({});\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case \"loading\":\n        return { ...initialState };\n      case \"fetched\":\n        return { ...initialState, data: action.payload };\n      case \"error\":\n        return { ...initialState, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url || url.includes(\"undefined\")) return;\n\n    cancelRequest.current = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"loading\" });\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\n        return;\n      }\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const data = (await response.json()) as T;\n        cache.current[url] = data;\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"fetched\", payload: data });\n      } catch (error) {\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"error\", payload: error as Error });\n      }\n    };\n\n    void fetchData();\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nfunction useApi<T = unknown>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"\"\n): State<T> {\n  const { host, version } = useApiContext();\n  return useFetch<T>(\n    url\n      ? `${`https://api.${host}/v${version}`.replace(\n          `${version}`,\n          apiV || version\n        )}${url}`\n      : url,\n    options\n  );\n}\n\nfunction useApiLazy<T extends { result: Array<unknown> }>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"2.31\",\n  inRequest = 50\n): T {\n  const [result, setResult] = useState<T>({ result: [] } as unknown as T);\n  const [offs, setOffs] = useState(0);\n  const { data } = useApi<T>(\n    url + `?count=${inRequest}&offset=${offs}`,\n    options,\n    apiV\n  );\n\n  useEffect(() => {\n    if (!data) return;\n    setResult((prev) => ({\n      ...prev,\n      ...data,\n      result: [...prev.result, ...data.result],\n    }));\n    if (data.result.length >= inRequest) {\n      let timeout = setTimeout(() => setOffs((prev) => prev + inRequest), 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [data, inRequest]);\n\n  return result;\n}\n\nexport { useApi, useApiLazy };\nexport default useFetch;\n","import {\n  VStack,\n  Progress,\n  SimpleGrid,\n  Text,\n  Stat,\n  StatLabel,\n  StatNumber,\n  HStack,\n} from \"@chakra-ui/react\";\nimport RatingByUser from \"components/scope/Stat/RatingByUser\";\nimport TotalTable from \"components/scope/TotalTable\";\nimport { addMilliseconds, formatDistance } from \"date-fns\";\nimport { useApi } from \"hooks/useFetch\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport type { Osnova } from \"types/osnova\";\nimport { calcLikers } from \"utils/rating\";\n\ninterface TotalProps {\n  comments: Osnova.Comment.CommentsResponse;\n}\n\nconst timeoutTime = 400;\n\nfunction Total({ comments }: TotalProps) {\n  const commentsLikersWorker = useMemo(\n    () =>\n      Worker &&\n      new Worker(\n        new URL(\"./workers/commentsLikers.worker.js\", import.meta.url)\n      ),\n    []\n  );\n  const [rawCommentsLikers, setRawCommentsLikers] = useState<\n    Osnova.Comment.LikersResponse[]\n  >([]);\n  const [commentsLikers, setCommentsLikers] = useState<Osnova.Likers.Likers>(\n    {}\n  );\n  const [commentIndex, setCommentIndex] = useState(0);\n\n  const { data } = useApi<Osnova.Comment.LikersResponse>(\n    `/comment/likers/${(comments?.result || [])[commentIndex]?.id}`,\n    undefined,\n    \"1.9\"\n  );\n\n  const commentStats = useMemo(() => {\n    const result = {\n      plus: { ...(commentsLikers[0] || { plus: 0 }), id: \"0\" },\n      minus: { ...(commentsLikers[0] || { minus: 0 }), id: \"0\" },\n      total: { ...(commentsLikers[0] || { plus: 0, minus: 0 }), id: \"0\" },\n    };\n\n    for (const [id, cmt] of Object.entries(commentsLikers)) {\n      if (cmt.minus > result.minus.minus) {\n        result.minus = { ...cmt, id };\n      }\n      if (cmt.plus > result.plus.plus) {\n        result.plus = { ...cmt, id };\n      }\n      if (cmt.plus + cmt.minus > result.total.plus + result.total.minus) {\n        result.total = { ...cmt, id };\n      }\n    }\n    return result;\n  }, [commentsLikers]);\n\n  useEffect(() => {\n    if (!data) return;\n    setRawCommentsLikers((prev) => [...prev, data]);\n    let timeout = setTimeout(\n      () => setCommentIndex((prev) => prev + 1),\n      timeoutTime\n    );\n    return () => clearTimeout(timeout);\n  }, [data]);\n\n  useEffect(() => {\n    if (!commentsLikersWorker) return;\n    commentsLikersWorker.onmessage = (ev) => setCommentsLikers(ev.data);\n  }, [commentsLikersWorker]);\n\n  useEffect(() => {\n    if ((comments?.result || [])[commentIndex]) return;\n    if (commentsLikersWorker) {\n      commentsLikersWorker.postMessage(rawCommentsLikers);\n    } else {\n      setCommentsLikers(calcLikers(rawCommentsLikers));\n    }\n  }, [rawCommentsLikers, commentIndex, comments, commentsLikersWorker]);\n\n  return (\n    <VStack position=\"relative\" w=\"100%\">\n      {comments?.result?.length > commentIndex && (\n        <VStack w=\"100%\" align=\"flex-end\">\n          <Progress\n            size=\"lg\"\n            value={(commentIndex / comments?.result?.length || 1) * 100}\n            w=\"100%\"\n            rounded=\"md\"\n          />\n          <HStack spacing={2}>\n            <Text>Осталось:</Text>\n            <Text>\n              {formatDistance(\n                new Date(),\n                addMilliseconds(\n                  new Date(),\n                  timeoutTime * (comments?.result?.length - commentIndex)\n                ),\n                { includeSeconds: true }\n              )}\n            </Text>\n          </HStack>\n        </VStack>\n      )}\n\n      <SimpleGrid\n        columns={{ md: 2, base: 1 }}\n        spacing={5}\n        justifyContent=\"space-between\"\n        minW=\"100%\"\n      >\n        {!![...Object.entries(commentsLikers)].length && (\n          <Stat>\n            <StatLabel>Уникальных пользователей</StatLabel>\n            <StatNumber>\n              {[...Object.entries(commentsLikers)].length}\n            </StatNumber>\n          </Stat>\n        )}\n        {!!+commentStats.plus.id && (\n          <RatingByUser {...commentStats.plus} label=\"Больше всего плюсов\" />\n        )}\n        {!!+commentStats.minus.id && (\n          <RatingByUser {...commentStats.minus} label=\"Больше всего минусов\" />\n        )}\n        {!!+commentStats.total.id && (\n          <RatingByUser {...commentStats.total} label=\"Больше всего оценок\" />\n        )}\n      </SimpleGrid>\n\n      {comments?.result?.length <= commentIndex && (\n        <TotalTable likers={commentsLikers} />\n      )}\n    </VStack>\n  );\n}\n\nexport default Total;\n","function BooleanText({ value }: { value?: boolean }) {\n  return <>{value ? \"Да\" : \"Нет\"}</>;\n}\n\nexport default BooleanText;\n","import {\n  VStack,\n  StackDivider,\n  SimpleGrid,\n  Stat,\n  StatLabel,\n  StatNumber,\n} from \"@chakra-ui/react\";\nimport BooleanText from \"components/atoms/BooleanText\";\nimport type { Osnova } from \"types/osnova\";\n\nfunction Overview({\n  subsite,\n  entries,\n  comments,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  entries?: number;\n  comments?: number;\n}) {\n  return (\n    <VStack divider={<StackDivider />}>\n      <SimpleGrid\n        columns={{ base: 2, sm: 4 }}\n        spacing={3}\n        justifyContent=\"space-between\"\n        w=\"100%\"\n      >\n        <Stat>\n          <StatLabel>Постов</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.entries ?? entries ?? \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Комментариев</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.comments ?? comments ?? \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписок</StatLabel>\n          <StatNumber>{subsite?.counters?.subscriptions ?? \"N/A\"}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписчиков</StatLabel>\n          <StatNumber>{subsite?.counters?.subscribers ?? \"N/A\"}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n\n      <SimpleGrid\n        columns={2}\n        spacing={3}\n        justifyContent=\"space-between\"\n        w=\"100%\"\n      >\n        <Stat>\n          <StatLabel>Plus</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isPlus} />}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подтвержден</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isVerified} />}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n    </VStack>\n  );\n}\n\nexport default Overview;\n","import {\n  HStack,\n  Avatar,\n  VStack,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n} from \"@chakra-ui/react\";\nimport { isValid, format } from \"date-fns\";\nimport type { Osnova } from \"types/osnova\";\nimport RatingView from \"../RatingView\";\n\nfunction Header({\n  subsite,\n  avatar_url,\n  rating,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  avatar_url?: string;\n  rating?: number;\n}) {\n  return (\n    <HStack\n      spacing={{ base: 5, sm: 8, md: 10 }}\n      position=\"sticky\"\n      top=\"0\"\n      bg=\"white\"\n      zIndex=\"1000\"\n      pt=\"5\"\n      pb=\"2\"\n      px={{ base: 2, sm: 3, md: 4 }}\n      w=\"100%\"\n      justifyContent=\"center\"\n    >\n      <Avatar\n        name={subsite.name}\n        size={{ base: \"xl\", md: \"2xl\" }}\n        src={\n          subsite?.avatar?.data?.uuid\n            ? `https://leonardo.osnova.io/${subsite?.avatar?.data?.uuid}/-/scale_crop/300x300/-/format/webp/`\n            : avatar_url\n        }\n      />\n      <VStack>\n        <Heading size={{ base: \"md\", sm: \"lg\" }}>{subsite.name}</Heading>\n        <HStack justifyContent={\"space-between\"} minW=\"100%\">\n          <RatingView>{subsite.rating ?? rating ?? \"N/A\"}</RatingView>\n          <Stat>\n            <StatLabel>Создан</StatLabel>\n            <StatNumber>\n              {isValid(subsite.created)\n                ? format(subsite.created * 1000, \"dd.LL.yy\")\n                : \"N/A\"}\n            </StatNumber>\n          </Stat>\n        </HStack>\n      </VStack>\n    </HStack>\n  );\n}\n\nexport default Header;\n","import type { Osnova } from \"types/osnova\";\nimport { useApi, useApiLazy } from \"./useFetch\";\n\n/**\n * Fetchs subsite info, entries and comments for form base representation of subsite\n * @param id identifier of subsite needed to load\n * @returns loaded data for provided subsite\n */\nfunction useScope(id: number) {\n  const { data, error: subsiteError } = useApi<Osnova.Subsite.SubsiteResponse>(\n    `/subsite?id=${id}`\n  );\n  const entries = useApiLazy<Osnova.Entry.EntriesResponse>(\n    `/user/${id}/entries`,\n    undefined,\n    \"1.9\"\n  );\n  const comments = useApiLazy<Osnova.Comment.CommentsResponse>(\n    `/user/${id}/comments`,\n    undefined,\n    \"1.9\"\n  );\n\n  const {\n    result: { subsite },\n  } = data || {\n    result: {\n      subsite: {\n        name:\n          comments?.result?.at(0)?.author?.name ||\n          entries?.result?.at(0)?.author?.name,\n      } as any,\n    },\n  };\n\n  return {\n    subsite: subsite as Osnova.Subsite.SubsiteResponse[\"result\"][\"subsite\"],\n    subsiteError,\n    entries,\n    comments,\n  };\n}\n\nexport default useScope;\n","import {\n  Heading,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getTargetId } from \"utils/common\";\nimport Entries from \"modules/Entries\";\nimport Comments from \"modules/Comments\";\nimport Total from \"modules/Total\";\nimport Overview from \"modules/Overview\";\nimport Header from \"components/scope/parts/Header\";\nimport useScope from \"hooks/useScope\";\n\nfunction Scope() {\n  const [searchParams] = useSearchParams();\n  const id = getTargetId(searchParams.get(\"id\") || \"\");\n\n  const { subsite, subsiteError, entries, comments } = useScope(id);\n\n  const entriesRating = useMemo(\n    () => entries?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [entries]\n  );\n  const commentsRating = useMemo(\n    () => comments?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [comments]\n  );\n\n  return (\n    <VStack>\n      {subsiteError && (\n        <VStack align=\"start\">\n          <Heading>\n            Вероятно профиль закрыт{\" \"}\n            {!(comments?.result?.length || entries?.result?.length) && (\n              <>или не существует</>\n            )}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"gray.500\">\n            Некоторые данные могут быть менее точны и потребуется дополнительное\n            время для подсчета\n          </Text>\n        </VStack>\n      )}\n      <Header\n        subsite={subsite}\n        avatar_url={\n          subsite?.avatar?.data?.url ||\n          comments?.result?.at(0)?.author?.avatar_url ||\n          entries?.result?.at(0)?.author?.avatar_url\n        }\n        rating={entriesRating + commentsRating}\n      />\n\n      <Tabs\n        variant={\"soft-rounded\"}\n        size={{ base: \"sm\", md: \"md\" }}\n        maxW=\"100%\"\n        w=\"100%\"\n      >\n        <TabList\n          minW=\"0\"\n          maxW=\"100%\"\n          overflowX=\"auto\"\n          sx={{\n            scrollbarWidth: \"none\",\n            \"::-webkit-scrollbar\": { display: \"none\" },\n            WebkitOverflowScrolling: \"touch\",\n          }}\n          px=\"1\"\n        >\n          <Tab>Обзор</Tab>\n          <Tab>Посты</Tab>\n          <Tab>Комментарии</Tab>\n          <Tab>Итог</Tab>\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <Overview\n              subsite={subsite}\n              entries={entries?.result?.length}\n              comments={comments?.result?.length}\n            />\n          </TabPanel>\n          <TabPanel>\n            <Entries data={entries} />\n          </TabPanel>\n          <TabPanel>\n            <Comments data={comments} />\n          </TabPanel>\n          <TabPanel>\n            <Total comments={comments} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </VStack>\n  );\n}\n\nexport default Scope;\n","const getTargetId = (target: string) =>\n  +(/(?:u\\/)?(\\d+)/.exec(target || \"\") || [])[1] || 0;\n\nconst getMonths = () => [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport { getTargetId, getMonths };\n"],"names":["data","years","months","days","hours","ratingByEntity","options","w","size","getRating","count","summ","plus","Math","abs","minus","Tweet","markdown","p","rounded","borderColor","borderWidth","entry","url","hitsCount","intro","date","likes","cover","subsite","avatar_url","name","title","blocks","align","as","href","rel","target","shadow","minW","spacing","justifyContent","src","color","format","pl","thumbnailUrl","alt","objectFit","pointerEvents","type","label","children","getStats","dsOpts","d","dd","stats","result","el","dt","Date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDay","hour","getUTCHours","id","Object","values","datasets","labels","keys","getMonths","map","backgroundColor","useMemo","rating","ratingPlus","ratingMinus","comments","reposts","hits","mostHits","mostLiked","mostDisliked","commentsCount","Number","isRepost","pPlus","pMinus","useConst","plugins","legend","display","entryDatasetOptions","charts","variant","isFitted","columns","base","md","Activity","comment","author","html","dangerouslySetInnerHTML","__html","commentDatasetOptions","api","host","version","ApiContext","createContext","useApiContext","useContext","fontSize","maxW","lg","textOverflow","overflow","ShowRating","Header","accessor","Cell","value","isNumeric","likers","useTable","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","headerGroup","Tr","getHeaderGroupProps","headers","column","Th","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","Td","getCellProps","m","alignItems","onClick","isDisabled","icon","h","mr","flexShrink","fontWeight","length","ml","min","max","onChange","defaultValue","e","useFetch","cache","useRef","cancelRequest","initialState","error","undefined","useReducer","action","payload","dispatch","useEffect","includes","current","fetchData","fetch","response","ok","Error","statusText","json","useApi","apiV","replace","useApiLazy","inRequest","useState","setResult","offs","setOffs","prev","timeout","setTimeout","clearTimeout","commentsLikersWorker","Worker","URL","rawCommentsLikers","setRawCommentsLikers","commentsLikers","setCommentsLikers","commentIndex","setCommentIndex","commentStats","total","entries","cmt","onmessage","ev","postMessage","source","val","Reflect","has","sign","calcLikers","position","formatDistance","addMilliseconds","includeSeconds","divider","sm","counters","subscriptions","subscribers","isPlus","isVerified","top","bg","zIndex","pt","pb","px","avatar","uuid","isValid","created","subsiteError","at","useSearchParams","searchParams","getTargetId","get","useScope","entriesRating","reduce","c","commentsRating","overflowX","sx","scrollbarWidth","WebkitOverflowScrolling","exec"],"sourceRoot":""}