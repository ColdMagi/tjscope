{"version":3,"file":"static/js/482.5a5fb8b0.chunk.js","mappings":"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","sources":["components/atoms/BooleanText.tsx","components/scope/CommentCard.tsx","components/scope/EntryCard.tsx","components/scope/RatingView.tsx","contexts/Api.tsx","hooks/useFetch.ts","pages/Scope.tsx","utils/common.ts"],"sourcesContent":["function BooleanText({ value }: { value?: boolean }) {\n  return <>{value ? \"Да\" : \"Нет\"}</>;\n}\n\nexport default BooleanText;\n","import { Avatar, Heading, HStack, VStack, Text } from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\n\ninterface CommentCardProps {\n  comment: Osnova.Comment.Comment;\n}\n\nfunction CommentCard({\n  comment: {\n    author: { avatar_url, name },\n    date,\n    likes: { count, summ },\n    id,\n    entry: { url },\n    html,\n  },\n}: CommentCardProps) {\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url + `?comment=${id}`}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        <Text dangerouslySetInnerHTML={{ __html: html }} />\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <span />\n        <HStack>\n          <Text color=\"red.300\">{count - summ}</Text>\n          <Text color=\"green.300\">{summ}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default CommentCard;\n","import { Avatar, Heading, HStack, Image, Text, VStack } from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\n\ninterface EntryCardProps {\n  entry: Osnova.Entry.Entry;\n}\n\nfunction EntryCard({\n  entry: {\n    url,\n    hitsCount,\n    intro,\n    date,\n    likes: { count, summ },\n    cover,\n    subsite: { avatar_url, name },\n  },\n}: EntryCardProps) {\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        <Text>{intro}</Text>\n        {cover && (\n          <Image\n            src={cover.thumbnailUrl}\n            alt=\"\"\n            objectFit={\"contain\"}\n            pointerEvents={\"none\"}\n          />\n        )}\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <Text pl=\"8\" color=\"gray.400\">\n          {hitsCount} просмотров\n        </Text>\n        <HStack>\n          <Text color=\"red.300\">{count - summ}</Text>\n          <Text color=\"green.300\">{summ}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default EntryCard;\n","import { Stat, StatLabel, StatNumber } from \"@chakra-ui/react\";\nimport { PropsWithChildren } from \"react\";\n\nfunction RatingView({\n  label = \"Рейтинг\",\n  children,\n}: PropsWithChildren<{ label?: string }>) {\n  return (\n    <Stat>\n      <StatLabel>{label}</StatLabel>\n      <StatNumber color=\"gray.500\">{children}</StatNumber>\n    </Stat>\n  );\n}\n\nexport default RatingView;\n","import { useContext } from \"react\";\nimport { createContext, PropsWithChildren } from \"react\";\n\nconst api = \"https://api.tjournal.ru/v2.31\";\nconst ApiContext = createContext(api);\nconst useApiContext = () => useContext(ApiContext);\n\nfunction ApiProvider({ children }: PropsWithChildren) {\n  return <ApiContext.Provider value={api}>{children}</ApiContext.Provider>;\n}\n\nexport { useApiContext };\nexport default ApiProvider;\n","import { useApiContext } from \"contexts/Api\";\nimport { useEffect, useReducer, useRef, useState } from \"react\";\n\ninterface State<T> {\n  data?: T;\n  error?: Error;\n}\n\ntype Cache<T> = { [url: string]: T };\n\n// discriminated union type\ntype Action<T> =\n  | { type: \"loading\" }\n  | { type: \"fetched\"; payload: T }\n  | { type: \"error\"; payload: Error };\n\n/**\n * Fetches data by provided url\n *\n * https://usehooks-ts.com/react-hook/use-fetch\n *\n * @param url url to request\n * @param options fetch request init (optional)\n * @returns state of loading with payload\n */\nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({});\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case \"loading\":\n        return { ...initialState };\n      case \"fetched\":\n        return { ...initialState, data: action.payload };\n      case \"error\":\n        return { ...initialState, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) return;\n\n    cancelRequest.current = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"loading\" });\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\n        return;\n      }\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const data = (await response.json()) as T;\n        cache.current[url] = data;\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"fetched\", payload: data });\n      } catch (error) {\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"error\", payload: error as Error });\n      }\n    };\n\n    void fetchData();\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nfunction useApi<T = unknown>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"2.31\"\n): State<T> {\n  const api = useApiContext();\n  return useFetch<T>(url ? `${api.replace(\"2.31\", apiV)}${url}` : url, options);\n}\n\nfunction useApiLazy<T extends { result: Array<unknown> }>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"2.31\",\n  inRequest = 50\n): T {\n  const [result, setResult] = useState<T>({ result: [] } as unknown as T);\n  const [offs, setOffs] = useState(0);\n  const { data } = useApi<T>(\n    url + `?count=${inRequest}&offset=${offs}`,\n    options,\n    apiV\n  );\n\n  useEffect(() => {\n    if (!data) return;\n    setResult((prev) => ({\n      ...prev,\n      ...data,\n      result: [...prev.result, ...data.result],\n    }));\n    if (data.result.length >= inRequest) {\n      let timeout = setTimeout(() => setOffs((prev) => prev + inRequest), 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [data, inRequest]);\n\n  return result;\n}\n\nexport { useApi, useApiLazy };\nexport default useFetch;\n","import {\n  Avatar,\n  Heading,\n  HStack,\n  Progress,\n  SimpleGrid,\n  StackDivider,\n  Stat,\n  StatLabel,\n  StatNumber,\n  Tab,\n  Table,\n  TableCaption,\n  TableContainer,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  VStack,\n} from \"@chakra-ui/react\";\nimport BooleanText from \"components/atoms/BooleanText\";\nimport CommentCard from \"components/scope/CommentCard\";\nimport EntryCard from \"components/scope/EntryCard\";\nimport RatingView from \"components/scope/RatingView\";\nimport { format, isValid } from \"date-fns\";\nimport { useApi, useApiLazy } from \"hooks/useFetch\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { PropsWithChildren, useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Osnova } from \"types/osnova\";\nimport { getTargetId } from \"utils/common\";\n\nfunction Overview({\n  subsite,\n  entries,\n  comments,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  entries?: number;\n  comments?: number;\n}) {\n  return (\n    <VStack divider={<StackDivider />}>\n      <SimpleGrid columns={4} spacing={3}>\n        <Stat>\n          <StatLabel>Постов</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.entries || entries || \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Комментариев</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.comments || comments || \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписок</StatLabel>\n          <StatNumber>{subsite?.counters?.subscriptions || \"N/A\"}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписчиков</StatLabel>\n          <StatNumber>{subsite?.counters?.subscribers || \"N/A\"}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n\n      <SimpleGrid\n        columns={2}\n        spacing={3}\n        justifyContent=\"space-between\"\n        minW=\"100%\"\n      >\n        <Stat>\n          <StatLabel>Plus</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isPlus} />}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подтвержден</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isVerified} />}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n    </VStack>\n  );\n}\n\nfunction StatCat({ label, children }: PropsWithChildren<{ label: string }>) {\n  return (\n    <VStack align=\"flex-start\" minW=\"100%\">\n      <Heading size=\"md\">{label}</Heading>\n      {children}\n    </VStack>\n  );\n}\n\nfunction Entries({ data }: { data: Osnova.Entry.EntriesResponse | undefined }) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingCount: 0,\n      comments: 0,\n      reposts: 0,\n      hits: 0,\n      mostHits: (data?.result || [])[0],\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      result.rating += entry.likes.summ;\n      result.ratingCount += entry.likes.count;\n      result.comments += entry.commentsCount;\n      result.reposts += Number(entry.isRepost);\n      result.hits += entry.hitsCount;\n      if (entry.hitsCount > result.mostHits.hitsCount) {\n        result.mostHits = entry;\n      }\n      if (entry.likes.summ > result.mostLiked.likes.summ) {\n        result.mostLiked = entry;\n      }\n      if (\n        entry.likes.count - entry.likes.summ >\n        result.mostDisliked.likes.count - result.mostDisliked.likes.summ\n      ) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  return (\n    <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n      <SimpleGrid\n        columns={3}\n        spacing={1}\n        justifyContent=\"space-between\"\n        minW=\"100%\"\n      >\n        <RatingView>{stats.rating}</RatingView>\n        <RatingView label=\"Оценок\">{stats.ratingCount}</RatingView>\n        <RatingView label=\"Оценки [минус]\">\n          {stats.ratingCount - stats.rating}\n        </RatingView>\n        <Stat>\n          <StatLabel>Комментариев</StatLabel>\n          <StatNumber>{stats.comments}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Просмотров</StatLabel>\n          <StatNumber>{stats.hits}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Репостов</StatLabel>\n          <StatNumber>{stats.reposts}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n\n      {stats.mostHits && (\n        <StatCat label=\"Наиболее просматриваемый\">\n          <EntryCard entry={stats.mostHits} />\n        </StatCat>\n      )}\n\n      {stats.mostLiked && (\n        <StatCat label=\"Наибольшее количество плюсов\">\n          <EntryCard entry={stats.mostLiked} />\n        </StatCat>\n      )}\n\n      {stats.mostDisliked && (\n        <StatCat label=\"Наибольшее количество минусов\">\n          <EntryCard entry={stats.mostDisliked} />\n        </StatCat>\n      )}\n    </VStack>\n  );\n}\n\nfunction Comments({\n  data,\n}: {\n  data: Osnova.Comment.CommentsResponse | undefined;\n}) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingCount: 0,\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      result.rating += entry.likes.summ;\n      result.ratingCount += entry.likes.count;\n      if (entry.likes.summ > result.mostLiked.likes.summ) {\n        result.mostLiked = entry;\n      }\n      if (\n        entry.likes.count - entry.likes.summ >\n        result.mostDisliked.likes.count - result.mostDisliked.likes.summ\n      ) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  return (\n    <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n      <SimpleGrid\n        columns={3}\n        spacing={1}\n        justifyContent=\"space-between\"\n        minW=\"100%\"\n      >\n        <RatingView>{stats.rating}</RatingView>\n        <RatingView label=\"Оценок\">{stats.ratingCount}</RatingView>\n        <RatingView label=\"Оценки [минус]\">\n          {stats.ratingCount - stats.rating}\n        </RatingView>\n      </SimpleGrid>\n\n      {stats.mostLiked && (\n        <StatCat label=\"Наибольшее количество плюсов\">\n          <CommentCard comment={stats.mostLiked} />\n        </StatCat>\n      )}\n\n      {stats.mostDisliked && (\n        <StatCat label=\"Наибольшее количество минусов\">\n          <CommentCard comment={stats.mostDisliked} />\n        </StatCat>\n      )}\n    </VStack>\n  );\n}\n\ninterface TotalProps {\n  comments: Osnova.Comment.CommentsResponse;\n}\n\nfunction Total({ comments }: TotalProps) {\n  const [commentsLikers, setCommentsLikers] = useState<\n    Record<\n      string,\n      {\n        total: number;\n        minus: number;\n        plus: number;\n        name: string;\n        avatar_url: string;\n      }\n    >\n  >({});\n  const [commentIndex, setCommentIndex] = useState(0);\n  const { data } = useApi<Osnova.Comment.LikersResponse>(\n    `/comment/likers/${(comments?.result || [])[commentIndex]?.id}`,\n    undefined,\n    \"1.9\"\n  );\n\n  useEffect(() => {\n    if (!data) return;\n    setCommentsLikers((prev) => {\n      const result = { ...prev };\n      for (const [id, val] of Object.entries(data.result)) {\n        if (!Reflect.has(result, id)) {\n          result[id] = {\n            total: 0,\n            minus: 0,\n            plus: 0,\n            avatar_url: \"\",\n            name: \"\",\n          };\n        }\n        result[id].total += Math.abs(val.sign);\n        result[id].minus += Number(val.sign < 0);\n        result[id].plus += Number(val.sign > 0);\n\n        result[id].avatar_url = val.avatar_url;\n        result[id].name = val.name;\n      }\n      return result;\n    });\n    let timeout = setTimeout(() => setCommentIndex((prev) => prev + 1), 2000);\n    return () => clearTimeout(timeout);\n  }, [data]);\n\n  return (\n    <VStack position=\"relative\">\n      {comments?.result?.length > commentIndex && (\n        <Progress size=\"xs\" isIndeterminate w=\"100%\" />\n      )}\n      <TableContainer>\n        <Table variant=\"simple\">\n          <TableCaption>Статистика оценок по пользователям</TableCaption>\n          <Thead>\n            <Tr>\n              <Th>Пользователь</Th>\n              <Th isNumeric>Плюс</Th>\n              <Th isNumeric>Минус</Th>\n              <Th isNumeric>Всего</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {[...Object.entries(commentsLikers)].map(\n              ([id, { name, avatar_url, minus, plus, total }]) => (\n                <Tr key={id}>\n                  <Td>\n                    <HStack\n                      as=\"a\"\n                      href={`https://tjournal.ru/u/${id}`}\n                      target=\"_blank\"\n                    >\n                      <Avatar name={name} src={avatar_url} />\n                      <Text\n                        as=\"b\"\n                        maxW=\"200px\"\n                        textOverflow={\"ellipsis\"}\n                        overflow=\"hidden\"\n                      >\n                        {name}\n                      </Text>\n                    </HStack>\n                  </Td>\n                  <Td>{total}</Td>\n                  <Td>{minus}</Td>\n                  <Td>{plus}</Td>\n                </Tr>\n              )\n            )}\n          </Tbody>\n        </Table>\n      </TableContainer>\n    </VStack>\n  );\n}\n\nfunction Header({\n  subsite,\n  avatar_url,\n  rating,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  avatar_url?: string;\n  rating?: number;\n}) {\n  return (\n    <HStack\n      spacing={10}\n      position=\"sticky\"\n      top=\"0\"\n      bg=\"white\"\n      zIndex=\"1000\"\n      pt=\"5\"\n      pb=\"2\"\n      px=\"4\"\n    >\n      <Avatar\n        name={subsite.name}\n        size=\"2xl\"\n        src={\n          subsite?.avatar?.data?.uuid\n            ? `https://leonardo.osnova.io/${subsite?.avatar?.data?.uuid}/-/scale_crop/300x300/-/format/webp/`\n            : avatar_url\n        }\n      />\n      <VStack>\n        <Heading size=\"lg\">{subsite.name}</Heading>\n        <HStack justifyContent={\"space-between\"} minW=\"100%\">\n          <RatingView>{subsite.rating || rating || \"N/A\"}</RatingView>\n          <Stat>\n            <StatLabel>Создан</StatLabel>\n            <StatNumber>\n              {isValid(subsite.created)\n                ? format(subsite.created * 1000, \"dd.LL.yy\")\n                : \"N/A\"}\n            </StatNumber>\n          </Stat>\n        </HStack>\n      </VStack>\n    </HStack>\n  );\n}\n\nfunction Scope() {\n  const [searchParams] = useSearchParams();\n  const id = getTargetId(searchParams.get(\"id\") || \"\");\n\n  const { data, error } = useApi<Osnova.Subsite.SubsiteResponse>(\n    `/subsite?id=${id}`\n  );\n  const entries = useApiLazy<Osnova.Entry.EntriesResponse>(\n    `/user/${id}/entries`,\n    undefined,\n    \"1.9\"\n  );\n  const comments = useApiLazy<Osnova.Comment.CommentsResponse>(\n    `/user/${id}/comments`,\n    undefined,\n    \"1.9\"\n  );\n\n  const entriesRating = useMemo(\n    () => entries?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [entries]\n  );\n  const commentsRating = useMemo(\n    () => comments?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [comments]\n  );\n\n  const {\n    result: { subsite },\n  } = data || {\n    result: {\n      subsite: {\n        name:\n          comments?.result?.at(0)?.author?.name ||\n          entries?.result?.at(0)?.author?.name,\n      } as any,\n    },\n  };\n\n  return (\n    <VStack align=\"start\">\n      {error && (\n        <VStack align=\"start\">\n          <Heading>Вероятно профиль закрыт или не существует</Heading>\n          <Text fontSize=\"12px\" color=\"gray.500\">\n            Некоторые данные могут быть менее точны и потребуется дополнительное\n            время для подсчета\n          </Text>\n        </VStack>\n      )}\n      <Header\n        subsite={subsite}\n        avatar_url={\n          comments?.result?.at(0)?.author?.avatar_url ||\n          entries?.result?.at(0)?.author?.avatar_url\n        }\n        rating={entriesRating + commentsRating}\n      />\n\n      <Tabs variant={\"enclosed\"}>\n        <TabList>\n          <Tab>Обзор</Tab>\n          <Tab>Посты</Tab>\n          <Tab>Комментарии</Tab>\n          <Tab>Итог</Tab>\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <Overview\n              subsite={subsite}\n              entries={entries?.result?.length}\n              comments={comments?.result?.length}\n            />\n          </TabPanel>\n          <TabPanel>\n            <VStack\n              align=\"flex-start\"\n              divider={<StackDivider />}\n              w=\"100%\"\n              maxW=\"438px\"\n            >\n              <Entries data={entries} />\n            </VStack>\n          </TabPanel>\n          <TabPanel>\n            <VStack\n              align=\"flex-start\"\n              divider={<StackDivider />}\n              w=\"100%\"\n              maxW=\"438px\"\n            >\n              <Comments data={comments} />\n            </VStack>\n          </TabPanel>\n          <TabPanel>\n            <Total comments={comments} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </VStack>\n  );\n}\n\nexport default Scope;\n","const getTargetId = (target: string) =>\n  +(/(?:u\\/)?(\\d+)/.exec(target || \"\") || [])[1] || 0;\n\nexport { getTargetId };\n"],"names":["value","comment","author","avatar_url","name","date","likes","count","summ","id","url","entry","html","align","as","href","rel","target","p","shadow","borderWidth","rounded","minW","spacing","justifyContent","size","src","color","format","pl","dangerouslySetInnerHTML","__html","hitsCount","intro","cover","subsite","thumbnailUrl","alt","objectFit","pointerEvents","label","children","api","ApiContext","createContext","useApiContext","useContext","useFetch","options","cache","useRef","cancelRequest","initialState","error","undefined","data","useReducer","state","action","type","payload","dispatch","useEffect","current","fetchData","fetch","response","ok","Error","statusText","json","useApi","apiV","replace","useApiLazy","inRequest","useState","result","setResult","offs","setOffs","prev","length","timeout","setTimeout","clearTimeout","Overview","entries","comments","divider","columns","counters","subscriptions","subscribers","isPlus","isVerified","StatCat","Entries","stats","useMemo","rating","ratingCount","reposts","hits","mostHits","mostLiked","mostDisliked","commentsCount","Number","isRepost","w","Comments","Total","commentsLikers","setCommentsLikers","commentIndex","setCommentIndex","Object","val","Reflect","has","total","minus","plus","Math","abs","sign","position","isIndeterminate","variant","Tr","Th","isNumeric","map","Td","maxW","textOverflow","overflow","Header","top","bg","zIndex","pt","pb","px","avatar","uuid","isValid","created","useSearchParams","searchParams","getTargetId","get","entriesRating","reduce","c","commentsRating","at","fontSize","exec"],"sourceRoot":""}