{"version":3,"file":"static/js/874.4d74a383.chunk.js","mappings":"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","sources":["components/atoms/BooleanText.tsx","utils/rating.ts","components/scope/CommentCard.tsx","components/scope/EntryCard.tsx","components/scope/RatingView.tsx","contexts/Api.tsx","hooks/useFetch.ts","utils/charts.ts","pages/Scope.tsx","utils/common.ts"],"sourcesContent":["function BooleanText({ value }: { value?: boolean }) {\n  return <>{value ? \"Да\" : \"Нет\"}</>;\n}\n\nexport default BooleanText;\n","import { Osnova } from \"types/osnova\";\n\nconst getRating = <T extends Pick<Osnova.Entry.Likes, \"count\" | \"summ\">>({\n  count,\n  summ,\n}: T) => {\n  let plus = summ;\n  let minus = count - plus;\n\n  if (summ < 0) {\n    plus = Math.abs(count - (count - summ) / 2);\n    minus = plus + summ * -1;\n  }\n\n  return { minus, plus };\n};\n\nexport { getRating };\n","import { Avatar, Heading, HStack, VStack, Text } from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\nimport { getRating } from \"utils/rating\";\n\ninterface CommentCardProps {\n  comment: Osnova.Comment.Comment;\n}\n\nfunction CommentCard({\n  comment: {\n    author: { avatar_url, name },\n    date,\n    likes: { count, summ },\n    id,\n    entry: { url },\n    html,\n  },\n}: CommentCardProps) {\n  const { minus, plus } = getRating({ count, summ });\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url + `?comment=${id}`}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        <Text dangerouslySetInnerHTML={{ __html: html }} />\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <span />\n        <HStack>\n          <Text color=\"red.300\">{minus}</Text>\n          <Text color=\"green.300\">{plus}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default CommentCard;\n","import { Avatar, Heading, HStack, Image, Text, VStack } from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\nimport { getRating } from \"utils/rating\";\n\ninterface EntryCardProps {\n  entry: Osnova.Entry.Entry;\n}\n\nfunction EntryCard({\n  entry: {\n    url,\n    hitsCount,\n    intro,\n    date,\n    likes: { count, summ },\n    cover,\n    subsite: { avatar_url, name },\n  },\n}: EntryCardProps) {\n  const { minus, plus } = getRating({ count, summ });\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        <Text>{intro}</Text>\n        {cover && (\n          <Image\n            src={cover.thumbnailUrl}\n            alt=\"\"\n            objectFit={\"contain\"}\n            pointerEvents={\"none\"}\n          />\n        )}\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <Text pl=\"8\" color=\"gray.400\">\n          {hitsCount} просмотров\n        </Text>\n        <HStack>\n          <Text color=\"red.300\">{minus}</Text>\n          <Text color=\"green.300\">{plus}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default EntryCard;\n","import { Stat, StatLabel, StatNumber } from \"@chakra-ui/react\";\nimport { PropsWithChildren } from \"react\";\n\nfunction RatingView({\n  label = \"Рейтинг\",\n  children,\n}: PropsWithChildren<{ label?: string }>) {\n  return (\n    <Stat>\n      <StatLabel>{label}</StatLabel>\n      <StatNumber color=\"gray.500\">{children}</StatNumber>\n    </Stat>\n  );\n}\n\nexport default RatingView;\n","import { useContext } from \"react\";\nimport { createContext, PropsWithChildren } from \"react\";\n\nconst api = \"https://api.tjournal.ru/v2.31\";\nconst ApiContext = createContext(api);\nconst useApiContext = () => useContext(ApiContext);\n\nfunction ApiProvider({ children }: PropsWithChildren) {\n  return <ApiContext.Provider value={api}>{children}</ApiContext.Provider>;\n}\n\nexport { useApiContext };\nexport default ApiProvider;\n","import { useApiContext } from \"contexts/Api\";\nimport { useEffect, useReducer, useRef, useState } from \"react\";\n\ninterface State<T> {\n  data?: T;\n  error?: Error;\n}\n\ntype Cache<T> = { [url: string]: T };\n\n// discriminated union type\ntype Action<T> =\n  | { type: \"loading\" }\n  | { type: \"fetched\"; payload: T }\n  | { type: \"error\"; payload: Error };\n\n/**\n * Fetches data by provided url\n *\n * https://usehooks-ts.com/react-hook/use-fetch\n *\n * @param url url to request\n * @param options fetch request init (optional)\n * @returns state of loading with payload\n */\nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({});\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case \"loading\":\n        return { ...initialState };\n      case \"fetched\":\n        return { ...initialState, data: action.payload };\n      case \"error\":\n        return { ...initialState, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url || url.includes(\"undefined\")) return;\n\n    cancelRequest.current = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"loading\" });\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\n        return;\n      }\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const data = (await response.json()) as T;\n        cache.current[url] = data;\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"fetched\", payload: data });\n      } catch (error) {\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"error\", payload: error as Error });\n      }\n    };\n\n    void fetchData();\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nfunction useApi<T = unknown>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"2.31\"\n): State<T> {\n  const api = useApiContext();\n  return useFetch<T>(url ? `${api.replace(\"2.31\", apiV)}${url}` : url, options);\n}\n\nfunction useApiLazy<T extends { result: Array<unknown> }>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"2.31\",\n  inRequest = 50\n): T {\n  const [result, setResult] = useState<T>({ result: [] } as unknown as T);\n  const [offs, setOffs] = useState(0);\n  const { data } = useApi<T>(\n    url + `?count=${inRequest}&offset=${offs}`,\n    options,\n    apiV\n  );\n\n  useEffect(() => {\n    if (!data) return;\n    setResult((prev) => ({\n      ...prev,\n      ...data,\n      result: [...prev.result, ...data.result],\n    }));\n    if (data.result.length >= inRequest) {\n      let timeout = setTimeout(() => setOffs((prev) => prev + inRequest), 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [data, inRequest]);\n\n  return result;\n}\n\nexport { useApi, useApiLazy };\nexport default useFetch;\n","import type { ChartData } from \"chart.js\";\nimport { Osnova } from \"types/osnova\";\nimport { Common } from \"types/utils\";\nimport { getMonths } from \"./common\";\nimport { getRating } from \"./rating\";\n\ntype ActivityChartData = {\n  years: ChartData<\"bar\", number[], string>;\n  months: ChartData<\"bar\", number[], string>;\n  days: ChartData<\"bar\", number[], string>;\n  hours: ChartData<\"radar\", number[], string>;\n  ratingByEntity: ChartData<\"line\", number[], string>;\n};\n\nfunction getStats<\n  T extends {\n    result?: Array<\n      Common<\n        Osnova.Entry.EntriesResponse[\"result\"][0],\n        Osnova.Comment.CommentsResponse[\"result\"][0]\n      >\n    >;\n  }\n>(target: T, dsOpts = {}) {\n  const d = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0 };\n  const dd = { ...d, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0 };\n  const stats: {\n    years: Record<string, number>;\n    months: Record<string, number>;\n    days: Record<string, number>;\n    hours: Record<string, number>;\n    ratingByEntity: Record<string, { minus: number; plus: number }>;\n  } = {\n    years: {},\n    months: {\n      ...dd,\n    },\n    days: { ...d },\n    hours: {\n      ...d,\n      12: 0,\n      13: 0,\n      14: 0,\n      15: 0,\n      16: 0,\n      17: 0,\n      18: 0,\n      19: 0,\n      20: 0,\n      21: 0,\n      22: 0,\n      23: 0,\n    },\n    ratingByEntity: {},\n  };\n  for (const el of target?.result || []) {\n    const dt = new Date(el.date * 1000);\n    const year = dt.getUTCFullYear();\n    const month = dt.getUTCMonth();\n    const day = dt.getUTCDay();\n    const hour = dt.getUTCHours();\n    stats.years[year] = (stats.years[year] || 0) + 1;\n    stats.months[month] = (stats.months[month] || 0) + 1;\n    stats.days[day] = (stats.days[day] || 0) + 1;\n    stats.hours[hour] = (stats.hours[hour] || 0) + 1;\n    stats.ratingByEntity[el.id] = getRating(el.likes);\n  }\n  const ratingByEntity = [...Object.values(stats.ratingByEntity)];\n  return {\n    years: {\n      datasets: [\n        {\n          data: [...Object.values(stats.years)],\n          ...dsOpts,\n        },\n      ],\n      labels: [...Object.keys(stats.years)],\n    },\n    months: {\n      datasets: [{ data: [...Object.values(stats.months)], ...dsOpts }],\n      labels: [...getMonths()],\n    },\n    days: {\n      datasets: [{ data: [...Object.values(stats.days)], ...dsOpts }],\n      labels: [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\n    },\n    hours: {\n      datasets: [{ data: [...Object.values(stats.hours)], ...dsOpts }],\n      labels: [...Object.keys(stats.hours)],\n    },\n    ratingByEntity: {\n      datasets: [\n        {\n          data: [...ratingByEntity.map(({ minus }) => minus)],\n          label: \"Отрицательные\",\n          backgroundColor: \"rgba(229,62,62, 0.2)\",\n          borderColor: \"rgb(229,62,62)\",\n          borderWidth: 1,\n        },\n        {\n          data: [...ratingByEntity.map(({ plus }) => plus)],\n          label: \"Положительные\",\n          backgroundColor: \"rgba(72,187,120, 0.2)\",\n          borderColor: \"rgb(72,187,120)\",\n          borderWidth: 1,\n        },\n      ],\n      labels: [...Object.keys(stats.ratingByEntity)],\n    },\n  } as ActivityChartData;\n}\n\nexport { getStats, type ActivityChartData };\n","import {\n  Avatar,\n  Heading,\n  HStack,\n  Progress,\n  SimpleGrid,\n  StackDivider,\n  Stat,\n  StatHelpText,\n  StatLabel,\n  StatNumber,\n  Tab,\n  Table,\n  TableCaption,\n  TableContainer,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useConst,\n  VStack,\n} from \"@chakra-ui/react\";\nimport BooleanText from \"components/atoms/BooleanText\";\nimport CommentCard from \"components/scope/CommentCard\";\nimport EntryCard from \"components/scope/EntryCard\";\nimport RatingView from \"components/scope/RatingView\";\nimport { format, isValid } from \"date-fns\";\nimport { useApi, useApiLazy } from \"hooks/useFetch\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { PropsWithChildren, useMemo } from \"react\";\nimport { Bar, Line, Radar } from \"react-chartjs-2\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Osnova } from \"types/osnova\";\nimport { getTargetId } from \"utils/common\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  BarElement,\n  LineElement,\n  Filler,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { ActivityChartData, getStats } from \"utils/charts\";\nimport { getRating } from \"utils/rating\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Filler,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction Overview({\n  subsite,\n  entries,\n  comments,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  entries?: number;\n  comments?: number;\n}) {\n  return (\n    <VStack divider={<StackDivider />}>\n      <SimpleGrid\n        columns={{ base: 2, sm: 4 }}\n        spacing={3}\n        justifyContent=\"space-between\"\n        w=\"100%\"\n      >\n        <Stat>\n          <StatLabel>Постов</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.entries ?? entries ?? \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Комментариев</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.comments ?? comments ?? \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписок</StatLabel>\n          <StatNumber>{subsite?.counters?.subscriptions ?? \"N/A\"}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписчиков</StatLabel>\n          <StatNumber>{subsite?.counters?.subscribers ?? \"N/A\"}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n\n      <SimpleGrid\n        columns={2}\n        spacing={3}\n        justifyContent=\"space-between\"\n        w=\"100%\"\n      >\n        <Stat>\n          <StatLabel>Plus</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isPlus} />}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подтвержден</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isVerified} />}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n    </VStack>\n  );\n}\n\nfunction StatCat({ label, children }: PropsWithChildren<{ label: string }>) {\n  return (\n    <VStack align=\"flex-start\" minW=\"100%\">\n      <Heading size=\"md\">{label}</Heading>\n      {children}\n    </VStack>\n  );\n}\n\nfunction Entries({ data }: { data: Osnova.Entry.EntriesResponse | undefined }) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingPlus: 0,\n      ratingMinus: 0,\n      comments: 0,\n      reposts: 0,\n      hits: 0,\n      mostHits: (data?.result || [])[0],\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      const { minus, plus } = getRating(entry.likes);\n      result.rating += plus - minus;\n      result.ratingPlus += plus;\n      result.ratingMinus += minus;\n      result.comments += entry.commentsCount;\n      result.reposts += Number(entry.isRepost);\n      result.hits += entry.hitsCount;\n      const { plus: pPlus } = getRating(result.mostLiked.likes);\n      const { minus: pMinus } = getRating(result.mostDisliked.likes);\n      if (entry.hitsCount > result.mostHits.hitsCount) {\n        result.mostHits = entry;\n      }\n      if (plus > pPlus) {\n        result.mostLiked = entry;\n      }\n      if (minus > pMinus) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  const options = useConst({ plugins: { legend: { display: false } } });\n  const entryDatasetOptions = useConst({\n    borderColor: \"rgb(237,137,54)\",\n    backgroundColor: \"rgba(237,137,54,0.4)\",\n    borderWidth: 1,\n  });\n\n  const charts = getStats(data || {}, entryDatasetOptions);\n\n  return (\n    <Tabs variant={\"enclosed\"} isFitted w=\"100%\">\n      <TabList w=\"100%\">\n        <Tab>Статистика</Tab>\n        <Tab>Активность</Tab>\n      </TabList>\n      <TabPanels w=\"100%\">\n        <TabPanel>\n          <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n            <SimpleGrid\n              columns={{ base: 2, md: 3 }}\n              spacing={1}\n              justifyContent=\"space-between\"\n              minW=\"100%\"\n            >\n              <RatingView>{stats.rating}</RatingView>\n              <RatingView label=\"Оценок [+]\">{stats.ratingPlus}</RatingView>\n              <RatingView label=\"Оценки [-]\">{stats.ratingMinus}</RatingView>\n              <Stat>\n                <StatLabel>Комментариев</StatLabel>\n                <StatNumber>{stats.comments}</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Просмотров</StatLabel>\n                <StatNumber>{stats.hits}</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Репостов</StatLabel>\n                <StatNumber>{stats.reposts}</StatNumber>\n              </Stat>\n            </SimpleGrid>\n            {stats.mostHits && (\n              <StatCat label=\"Наиболее просматриваемый\">\n                <EntryCard entry={stats.mostHits} />\n              </StatCat>\n            )}\n\n            {stats.mostLiked && (\n              <StatCat label=\"Наибольшее количество плюсов\">\n                <EntryCard entry={stats.mostLiked} />\n              </StatCat>\n            )}\n\n            {stats.mostDisliked && (\n              <StatCat label=\"Наибольшее количество минусов\">\n                <EntryCard entry={stats.mostDisliked} />\n              </StatCat>\n            )}\n          </VStack>\n        </TabPanel>\n        <TabPanel>\n          <ActivityCharts data={charts} options={options} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nfunction Comments({\n  data,\n}: {\n  data: Osnova.Comment.CommentsResponse | undefined;\n}) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingPlus: 0,\n      ratingMinus: 0,\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      const { plus, minus } = getRating(entry.likes);\n      result.rating += plus - minus;\n      result.ratingPlus += plus;\n      result.ratingMinus += minus;\n      const { plus: pPlus } = getRating(result.mostLiked.likes);\n      const { minus: pMinus } = getRating(result.mostDisliked.likes);\n      if (plus > pPlus) {\n        result.mostLiked = entry;\n      }\n      if (minus > pMinus) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  const options = useConst({ plugins: { legend: { display: false } } });\n  const commentDatasetOptions = useConst({\n    borderColor: \"rgb(49,130,206)\",\n    backgroundColor: \"rgba(49,130,206,0.4)\",\n    borderWidth: 1,\n  });\n\n  const charts = getStats(data || {}, commentDatasetOptions);\n\n  return (\n    <Tabs variant={\"enclosed\"} isFitted w=\"100%\">\n      <TabList>\n        <Tab>Статистика</Tab>\n        <Tab>Активность</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n            <SimpleGrid\n              columns={3}\n              spacing={1}\n              justifyContent=\"space-between\"\n              minW=\"100%\"\n            >\n              <RatingView>{stats.rating}</RatingView>\n              <RatingView label=\"Оценок [+]\">{stats.ratingPlus}</RatingView>\n              <RatingView label=\"Оценки [-]\">{stats.ratingMinus}</RatingView>\n            </SimpleGrid>\n\n            {stats.mostLiked && (\n              <StatCat label=\"Наибольшее количество плюсов\">\n                <CommentCard comment={stats.mostLiked} />\n              </StatCat>\n            )}\n\n            {stats.mostDisliked && (\n              <StatCat label=\"Наибольшее количество минусов\">\n                <CommentCard comment={stats.mostDisliked} />\n              </StatCat>\n            )}\n          </VStack>\n        </TabPanel>\n        <TabPanel>\n          <ActivityCharts data={charts} options={options} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\n//#region Activity\n\ninterface ActivityChartsProps {\n  data: ActivityChartData;\n  options?: Object;\n}\n\nfunction ActivityCharts({\n  data: { years, months, days, hours, ratingByEntity },\n  options,\n}: ActivityChartsProps) {\n  return (\n    <>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По годам</Heading>\n        <Bar data={years} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По месяцам</Heading>\n        <Bar data={months} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По дням</Heading>\n        <Bar data={days} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По часам</Heading>\n        <Radar data={hours} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">Оценки</Heading>\n        <Line data={ratingByEntity} />\n      </VStack>\n    </>\n  );\n}\n\n//#endregion\n\n//#region Total\n\ninterface TotalProps {\n  comments: Osnova.Comment.CommentsResponse;\n}\n\nfunction ShowRatingPlusMinus({\n  source: { plus, minus },\n}: {\n  source: { plus: number; minus: number };\n}) {\n  return (\n    <HStack spacing={2}>\n      <Text fontSize=\"16px\" as=\"span\" color=\"green.300\">\n        {plus}\n      </Text>\n      <Text fontSize=\"16px\" as=\"span\" color=\"red.300\">\n        {minus}\n      </Text>\n      <Text fontSize=\"16px\" as=\"span\" color=\"gray.500\">\n        {plus + minus ?? \"N/A\"}\n      </Text>\n    </HStack>\n  );\n}\n\ninterface UserProps {\n  name: string;\n  avatar_url: string;\n  id: number | string;\n  size?: \"sm\" | \"md\";\n}\n\nfunction User({\n  name,\n  avatar_url,\n  id,\n  children,\n  size = \"md\",\n}: PropsWithChildren<UserProps>) {\n  return (\n    <HStack as=\"a\" href={`https://tjournal.ru/u/${id}`} target=\"_blank\">\n      <Avatar size={size} name={name} src={avatar_url} />\n      <Text\n        fontSize={size === \"md\" ? \"18px\" : \"14px\"}\n        as=\"b\"\n        maxW={{ base: \"150px\", md: \"180px\", lg: \"200px\" }}\n        textOverflow={\"ellipsis\"}\n        overflow=\"hidden\"\n      >\n        {name}\n      </Text>\n      {children}\n    </HStack>\n  );\n}\n\ntype Liker = { minus: number; plus: number; name: string; avatar_url: string };\ntype Likers = Record<string, Liker>;\n\nfunction TotalTable({ likers }: { likers: Likers }) {\n  return (\n    <TableContainer>\n      <Table variant=\"simple\" size={{ base: \"sm\", md: \"md\", lg: \"lg\" }}>\n        <TableCaption>Статистика оценок по пользователям</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Пользователь</Th>\n            <Th isNumeric color=\"green.300\">\n              +\n            </Th>\n            <Th isNumeric color=\"red.300\">\n              -\n            </Th>\n            <Th isNumeric>Всего</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {[...Object.entries(likers)]\n            .sort(([_, a], [_0, b]) => b.plus + b.minus - (a.plus + a.minus))\n            .map(([id, { name, avatar_url, minus, plus }]) => (\n              <Tr key={id}>\n                <Td>\n                  <User name={name} avatar_url={avatar_url} id={id} />\n                </Td>\n                <Td>{plus}</Td>\n                <Td>{minus}</Td>\n                <Td>{minus + plus}</Td>\n              </Tr>\n            ))}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction Total({ comments }: TotalProps) {\n  const [commentsLikers, setCommentsLikers] = useState<Likers>({});\n  const [commentIndex, setCommentIndex] = useState(0);\n  const { data } = useApi<Osnova.Comment.LikersResponse>(\n    `/comment/likers/${(comments?.result || [])[commentIndex]?.id}`,\n    undefined,\n    \"1.9\"\n  );\n\n  const commentStats = useMemo(() => {\n    const result = {\n      plus: { ...(commentsLikers[0] || { plus: 0 }), id: \"0\" },\n      minus: { ...(commentsLikers[0] || { minus: 0 }), id: \"0\" },\n      total: { ...(commentsLikers[0] || { plus: 0, minus: 0 }), id: \"0\" },\n    };\n\n    for (const [id, cmt] of Object.entries(commentsLikers)) {\n      if (cmt.minus > result.minus.minus) {\n        result.minus = { ...cmt, id };\n      }\n      if (cmt.plus > result.plus.plus) {\n        result.plus = { ...cmt, id };\n      }\n      if (cmt.plus + cmt.minus > result.total.plus + result.total.minus) {\n        result.total = { ...cmt, id };\n      }\n    }\n    return result;\n  }, [commentsLikers]);\n\n  useEffect(() => {\n    if (!data) return;\n    setCommentsLikers((prev) => {\n      const result = { ...prev };\n      for (const [id, val] of Object.entries(data.result)) {\n        if (!Reflect.has(result, id)) {\n          result[id] = {\n            minus: 0,\n            plus: 0,\n            avatar_url: \"\",\n            name: \"\",\n          };\n        }\n        result[id].minus += Number(val.sign < 0);\n        result[id].plus += Number(val.sign > 0);\n\n        result[id].avatar_url = val.avatar_url;\n        result[id].name = val.name;\n      }\n      return result;\n    });\n    let timeout = setTimeout(() => setCommentIndex((prev) => prev + 1), 2000);\n    return () => clearTimeout(timeout);\n  }, [data]);\n\n  return (\n    <VStack position=\"relative\">\n      {comments?.result?.length > commentIndex && (\n        <Progress size=\"xs\" isIndeterminate w=\"100%\" />\n      )}\n\n      <SimpleGrid\n        columns={{ md: 2, base: 1 }}\n        spacing={5}\n        justifyContent=\"space-between\"\n        minW=\"100%\"\n      >\n        {!!+commentStats.plus.id && (\n          <Stat>\n            <StatLabel>Больше всего плюсов</StatLabel>\n            <StatNumber>\n              <User\n                name={commentStats.plus.name}\n                avatar_url={commentStats.plus.avatar_url}\n                id={commentStats.plus.id}\n              />\n            </StatNumber>\n            <StatHelpText pl=\"14\">\n              <ShowRatingPlusMinus source={commentStats.plus} />\n            </StatHelpText>\n          </Stat>\n        )}\n        {!!+commentStats.minus.id && (\n          <Stat>\n            <StatLabel>Больше всего минусов</StatLabel>\n            <StatNumber>\n              <User\n                name={commentStats.minus.name}\n                avatar_url={commentStats.minus.avatar_url}\n                id={commentStats.minus.id}\n              />\n            </StatNumber>\n            <StatHelpText pl=\"14\">\n              <ShowRatingPlusMinus source={commentStats.minus} />\n            </StatHelpText>\n          </Stat>\n        )}\n        {!!+commentStats.total.id && (\n          <Stat>\n            <StatLabel>Больше всего оценок</StatLabel>\n            <StatNumber>\n              <User\n                name={commentStats.total.name}\n                avatar_url={commentStats.total.avatar_url}\n                id={commentStats.total.id}\n              />\n            </StatNumber>\n            <StatHelpText pl=\"14\">\n              <ShowRatingPlusMinus source={commentStats.total} />\n            </StatHelpText>\n          </Stat>\n        )}\n      </SimpleGrid>\n\n      {comments?.result?.length <= commentIndex && (\n        <TotalTable likers={commentsLikers} />\n      )}\n    </VStack>\n  );\n}\n\n//#endregion\n\nfunction Header({\n  subsite,\n  avatar_url,\n  rating,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  avatar_url?: string;\n  rating?: number;\n}) {\n  return (\n    <HStack\n      spacing={{ base: 5, sm: 8, md: 10 }}\n      position=\"sticky\"\n      top=\"0\"\n      bg=\"white\"\n      zIndex=\"1000\"\n      pt=\"5\"\n      pb=\"2\"\n      px={{ base: 2, sm: 3, md: 4 }}\n      w=\"100%\"\n      justifyContent=\"center\"\n    >\n      <Avatar\n        name={subsite.name}\n        size={{ base: \"xl\", md: \"2xl\" }}\n        src={\n          subsite?.avatar?.data?.uuid\n            ? `https://leonardo.osnova.io/${subsite?.avatar?.data?.uuid}/-/scale_crop/300x300/-/format/webp/`\n            : avatar_url\n        }\n      />\n      <VStack>\n        <Heading size={{ base: \"md\", sm: \"lg\" }}>{subsite.name}</Heading>\n        <HStack justifyContent={\"space-between\"} minW=\"100%\">\n          <RatingView>{subsite.rating ?? rating ?? \"N/A\"}</RatingView>\n          <Stat>\n            <StatLabel>Создан</StatLabel>\n            <StatNumber>\n              {isValid(subsite.created)\n                ? format(subsite.created * 1000, \"dd.LL.yy\")\n                : \"N/A\"}\n            </StatNumber>\n          </Stat>\n        </HStack>\n      </VStack>\n    </HStack>\n  );\n}\n\nfunction Scope() {\n  const [searchParams] = useSearchParams();\n  const id = getTargetId(searchParams.get(\"id\") || \"\");\n\n  const { data, error } = useApi<Osnova.Subsite.SubsiteResponse>(\n    `/subsite?id=${id}`\n  );\n  const entries = useApiLazy<Osnova.Entry.EntriesResponse>(\n    `/user/${id}/entries`,\n    undefined,\n    \"1.9\"\n  );\n  const comments = useApiLazy<Osnova.Comment.CommentsResponse>(\n    `/user/${id}/comments`,\n    undefined,\n    \"1.9\"\n  );\n\n  const entriesRating = useMemo(\n    () => entries?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [entries]\n  );\n  const commentsRating = useMemo(\n    () => comments?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [comments]\n  );\n\n  const {\n    result: { subsite },\n  } = data || {\n    result: {\n      subsite: {\n        name:\n          comments?.result?.at(0)?.author?.name ||\n          entries?.result?.at(0)?.author?.name,\n      } as any,\n    },\n  };\n\n  return (\n    <VStack>\n      {error && (\n        <VStack align=\"start\">\n          <Heading>\n            Вероятно профиль закрыт{\" \"}\n            {!(comments?.result?.length || entries?.result?.length) && (\n              <>или не существует</>\n            )}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"gray.500\">\n            Некоторые данные могут быть менее точны и потребуется дополнительное\n            время для подсчета\n          </Text>\n        </VStack>\n      )}\n      <Header\n        subsite={subsite}\n        avatar_url={\n          comments?.result?.at(0)?.author?.avatar_url ||\n          entries?.result?.at(0)?.author?.avatar_url\n        }\n        rating={entriesRating + commentsRating}\n      />\n\n      <Tabs\n        variant={\"soft-rounded\"}\n        size={{ base: \"sm\", md: \"md\" }}\n        maxW=\"100%\"\n        w=\"100%\"\n      >\n        <TabList\n          minW=\"0\"\n          maxW=\"100%\"\n          overflowX=\"auto\"\n          sx={{\n            scrollbarWidth: \"none\",\n            \"::-webkit-scrollbar\": { display: \"none\" },\n            WebkitOverflowScrolling: \"touch\",\n          }}\n          px=\"1\"\n        >\n          <Tab>Обзор</Tab>\n          <Tab>Посты</Tab>\n          <Tab>Комментарии</Tab>\n          <Tab>Итог</Tab>\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <Overview\n              subsite={subsite}\n              entries={entries?.result?.length}\n              comments={comments?.result?.length}\n            />\n          </TabPanel>\n          <TabPanel>\n            <VStack align=\"flex-start\" divider={<StackDivider />}>\n              <Entries data={entries} />\n            </VStack>\n          </TabPanel>\n          <TabPanel>\n            <VStack align=\"flex-start\" divider={<StackDivider />}>\n              <Comments data={comments} />\n            </VStack>\n          </TabPanel>\n          <TabPanel>\n            <Total comments={comments} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </VStack>\n  );\n}\n\nexport default Scope;\n","const getTargetId = (target: string) =>\n  +(/(?:u\\/)?(\\d+)/.exec(target || \"\") || [])[1] || 0;\n\nconst getMonths = () => [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport { getTargetId, getMonths };\n"],"names":["value","getRating","count","summ","plus","minus","Math","abs","comment","author","avatar_url","name","date","likes","id","url","entry","html","align","as","href","rel","target","p","shadow","borderWidth","rounded","minW","spacing","justifyContent","size","src","color","format","pl","dangerouslySetInnerHTML","__html","hitsCount","intro","cover","subsite","thumbnailUrl","alt","objectFit","pointerEvents","label","children","api","ApiContext","createContext","useApiContext","useContext","useFetch","options","cache","useRef","cancelRequest","initialState","error","undefined","data","useReducer","state","action","type","payload","dispatch","useEffect","includes","current","fetchData","fetch","response","ok","Error","statusText","json","useApi","apiV","replace","useApiLazy","inRequest","useState","result","setResult","offs","setOffs","prev","length","timeout","setTimeout","clearTimeout","getStats","dsOpts","d","dd","stats","years","months","days","hours","ratingByEntity","el","dt","Date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDay","hour","getUTCHours","Object","values","datasets","labels","keys","getMonths","map","backgroundColor","borderColor","Overview","entries","comments","divider","columns","base","sm","w","counters","subscriptions","subscribers","isPlus","isVerified","StatCat","Entries","useMemo","rating","ratingPlus","ratingMinus","reposts","hits","mostHits","mostLiked","mostDisliked","commentsCount","Number","isRepost","pPlus","pMinus","useConst","plugins","legend","display","entryDatasetOptions","charts","variant","isFitted","md","ActivityCharts","Comments","commentDatasetOptions","ShowRatingPlusMinus","source","fontSize","User","maxW","lg","textOverflow","overflow","TotalTable","likers","Tr","Th","isNumeric","sort","a","b","Td","Total","commentsLikers","setCommentsLikers","commentIndex","setCommentIndex","commentStats","total","cmt","val","Reflect","has","sign","position","isIndeterminate","Header","top","bg","zIndex","pt","pb","px","avatar","uuid","isValid","created","ChartJS","CategoryScale","LinearScale","RadialLinearScale","BarElement","PointElement","LineElement","Filler","Title","Tooltip","Legend","useSearchParams","searchParams","getTargetId","get","entriesRating","reduce","c","commentsRating","at","overflowX","sx","scrollbarWidth","WebkitOverflowScrolling","exec"],"sourceRoot":""}