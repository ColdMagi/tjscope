{"version":3,"file":"static/js/533.74b7765c.chunk.js","mappings":"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","sources":["components/chart/Activity.tsx","utils/rating.ts","components/scope/EntryCard.tsx","components/scope/RatingView.tsx","components/scope/StatCat.tsx","contexts/Api.tsx","hooks/useFetch.ts","hooks/useLikers.ts","utils/charts.ts","components/User.tsx","components/scope/Stat/RatingByUser.tsx","components/scope/likers/Table.tsx","components/scope/likers/Grid.tsx","components/scope/likers/Likers.tsx","modules/Rating.tsx","modules/Entries.tsx","components/scope/CommentCard.tsx","modules/Comments.tsx","components/atoms/BooleanText.tsx","modules/Overview.tsx","components/scope/parts/Header.tsx","hooks/useScope.ts","pages/Scope.tsx","utils/common.ts"],"sourcesContent":["import { Heading, VStack } from \"@chakra-ui/react\";\nimport { Bar, Line, Radar } from \"react-chartjs-2\";\nimport { ActivityChartData } from \"utils/charts\";\n\ninterface ActivityChartsProps {\n  data: ActivityChartData;\n  options?: Object;\n}\n\nfunction ActivityCharts({\n  data: { years, months, days, hours, ratingByEntity },\n  options,\n}: ActivityChartsProps) {\n  return (\n    <>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По годам</Heading>\n        <Bar data={years} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По месяцам</Heading>\n        <Bar data={months} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По дням</Heading>\n        <Bar data={days} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По часам</Heading>\n        <Radar data={hours} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">Оценки</Heading>\n        <Line data={ratingByEntity} />\n      </VStack>\n    </>\n  );\n}\n\nexport default ActivityCharts;\n","import type { Osnova } from \"types/osnova\";\n\nconst getRating = <T extends Pick<Osnova.Entry.Likes, \"count\" | \"summ\">>({\n  count,\n  summ,\n}: T) => {\n  const plus = Math.abs(count - (count - summ) / 2);\n  const minus = plus + summ * -1;\n\n  return { minus, plus };\n};\n\nconst calcLikers = (source: Osnova.Comment.LikersResponse[]) => {\n  const result: Osnova.Likers.Likers = {};\n  for (const data of source) {\n    for (const [id, val] of Object.entries(data.result)) {\n      if (!Reflect.has(result, id)) {\n        result[id] = {\n          minus: 0,\n          plus: 0,\n          total: 0,\n          avatar_url: \"\",\n          name: \"\",\n          id,\n        };\n      }\n      result[id].minus += Number(val.sign < 0);\n      result[id].plus += Number(val.sign > 0);\n      result[id].total++;\n\n      result[id].avatar_url = val.avatar_url;\n      result[id].name = val.name;\n    }\n  }\n  return result;\n};\n\nexport { getRating, calcLikers };\n","import {\n  Avatar,\n  Box,\n  Heading,\n  HStack,\n  Image,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\nimport { getRating } from \"utils/rating\";\n\ninterface EntryCardProps {\n  entry: Osnova.Entry.Entry;\n}\n\nfunction Tweet({ data: { markdown } }: Osnova.Entry.Block) {\n  return (\n    <Box p=\"3\" rounded=\"lg\" borderColor=\"gray.300\" borderWidth=\"1px\">\n      {markdown}\n    </Box>\n  );\n}\n\nfunction EntryCard({\n  entry: {\n    url,\n    hitsCount,\n    intro,\n    date,\n    likes: { count, summ },\n    cover,\n    subsite: { avatar_url, name },\n    title,\n    blocks,\n    ...entry\n  },\n}: EntryCardProps) {\n  const { minus, plus } = getRating({ count, summ });\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        {title && <Heading size=\"sm\">{title}</Heading>}\n        <Text>{intro}</Text>\n        {cover && (\n          <Image\n            src={cover.thumbnailUrl}\n            alt=\"\"\n            objectFit={\"contain\"}\n            pointerEvents={\"none\"}\n          />\n        )}\n        {blocks && blocks[0] && blocks[0].type === \"tweet\" && (\n          <Tweet {...blocks[0]} />\n        )}\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <Text pl=\"8\" color=\"gray.400\">\n          {hitsCount} просмотров\n        </Text>\n        <HStack>\n          <Text color=\"red.300\">{minus}</Text>\n          <Text color=\"green.300\">{plus}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default EntryCard;\n","import { Stat, StatLabel, StatNumber } from \"@chakra-ui/react\";\nimport { PropsWithChildren } from \"react\";\n\nfunction RatingView({\n  label = \"Рейтинг\",\n  children,\n}: PropsWithChildren<{ label?: string }>) {\n  return (\n    <Stat>\n      <StatLabel>{label}</StatLabel>\n      <StatNumber color=\"gray.500\">{children}</StatNumber>\n    </Stat>\n  );\n}\n\nexport default RatingView;\n","import { VStack, Heading } from \"@chakra-ui/react\";\nimport { PropsWithChildren } from \"react\";\n\nfunction StatCat({ label, children }: PropsWithChildren<{ label: string }>) {\n  return (\n    <VStack align=\"flex-start\" minW=\"100%\">\n      <Heading size=\"md\">{label}</Heading>\n      {children}\n    </VStack>\n  );\n}\n\nexport default StatCat;\n","import { useContext } from \"react\";\nimport { createContext, PropsWithChildren } from \"react\";\n\nconst api = {\n  host: \"tjournal.ru\",\n  version: \"2.31\",\n  proxy:\n    \"https://guileless-malasada-7737f0.netlify.app/.netlify/functions/server\",\n};\nconst ApiContext = createContext(api);\nconst useApiContext = () => useContext(ApiContext);\n\nfunction ApiProvider({ children }: PropsWithChildren) {\n  return <ApiContext.Provider value={api}>{children}</ApiContext.Provider>;\n}\n\nexport { useApiContext };\nexport default ApiProvider;\n","import { useApiContext } from \"contexts/Api\";\nimport { useEffect, useReducer, useRef, useState } from \"react\";\n\ninterface State<T> {\n  data?: T;\n  error?: Error;\n}\n\ntype Cache<T> = { [url: string]: T };\n\n// discriminated union type\ntype Action<T> =\n  | { type: \"loading\" }\n  | { type: \"fetched\"; payload: T }\n  | { type: \"error\"; payload: Error };\n\n/**\n * Fetches data by provided url\n *\n * https://usehooks-ts.com/react-hook/use-fetch\n *\n * @param url url to request\n * @param options fetch request init (optional)\n * @returns state of loading with payload\n */\nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({});\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case \"loading\":\n        return { ...initialState };\n      case \"fetched\":\n        return { ...initialState, data: action.payload };\n      case \"error\":\n        return { ...initialState, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url || url.includes(\"undefined\")) return;\n\n    cancelRequest.current = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"loading\" });\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\n        return;\n      }\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const data = (await response.json()) as T;\n        cache.current[url] = data;\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"fetched\", payload: data });\n      } catch (error) {\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"error\", payload: error as Error });\n      }\n    };\n\n    void fetchData();\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nfunction useApi<T = unknown>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"\"\n): State<T> {\n  const { host, version } = useApiContext();\n  return useFetch<T>(\n    url\n      ? `${`https://api.${host}/v${version}`.replace(\n          `${version}`,\n          apiV || version\n        )}${url}`\n      : url,\n    options\n  );\n}\n\nfunction useApiLazy<T extends { result: Array<unknown> }>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"2.31\",\n  inRequest = 50\n): T {\n  const [result, setResult] = useState<T>({ result: [] } as unknown as T);\n  const [offs, setOffs] = useState(0);\n  const { data } = useApi<T>(\n    url + `?count=${inRequest}&offset=${offs}`,\n    options,\n    apiV\n  );\n\n  useEffect(() => {\n    if (!data) return;\n    setResult((prev) => ({\n      ...prev,\n      ...data,\n      result: [...prev.result, ...data.result],\n    }));\n    if (data.result.length >= inRequest) {\n      let timeout = setTimeout(() => setOffs((prev) => prev + inRequest), 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [data, inRequest]);\n\n  return result;\n}\n\nfunction useApiProxy<T = unknown>(\n  url?: string,\n  options?: RequestInit\n): State<T> {\n  const { proxy } = useApiContext();\n  return useFetch<T>(`${proxy}${url}`, options);\n}\n\nexport { useApi, useApiLazy, useApiProxy };\nexport default useFetch;\n","import { useMemo, useState, useEffect } from \"react\";\nimport type { Osnova } from \"types/osnova\";\nimport { calcLikers } from \"utils/rating\";\n\nconst timeoutTime = 400;\n\nexport type UseLikersIdSource =\n  | { result: { id: number | string }[] }\n  | undefined;\n\nexport type UseLikersNext = (id: string | number) => void;\n\nexport type UseLikersData = Osnova.Comment.LikersResponse | undefined;\n\nfunction useLikers(\n  idSource: UseLikersIdSource,\n  data: UseLikersData,\n  next: UseLikersNext\n) {\n  const worker = useMemo(\n    () =>\n      Worker &&\n      new Worker(new URL(\"workers/likers.worker.js\", import.meta.url)),\n    []\n  );\n  const [rawLikers, setRawLikers] = useState<Osnova.Comment.LikersResponse[]>(\n    []\n  );\n  const [likers, setLikers] = useState<Osnova.Likers.Likers>({});\n  const [index, setIndex] = useState(0);\n\n  const stats = useMemo(() => {\n    const result = {\n      plus: { ...(likers[0] || { plus: 0 }), id: \"0\" },\n      minus: { ...(likers[0] || { minus: 0 }), id: \"0\" },\n      total: { ...(likers[0] || { plus: 0, minus: 0 }), id: \"0\" },\n    };\n\n    for (const [id, cmt] of Object.entries(likers)) {\n      if (cmt.minus > result.minus.minus) {\n        result.minus = { ...cmt, id };\n      }\n      if (cmt.plus > result.plus.plus) {\n        result.plus = { ...cmt, id };\n      }\n      if (cmt.plus + cmt.minus > result.total.plus + result.total.minus) {\n        result.total = { ...cmt, id };\n      }\n    }\n    return result;\n  }, [likers]);\n\n  useEffect(() => {\n    next((idSource?.result || [])[index]?.id);\n  }, [next, idSource, index]);\n\n  useEffect(() => {\n    if (!data) return;\n    setRawLikers((prev) => [...prev, data]);\n    let timeout = setTimeout(() => setIndex((prev) => prev + 1), timeoutTime);\n    return () => clearTimeout(timeout);\n  }, [data]);\n\n  useEffect(() => {\n    if (!worker) return;\n    worker.onmessage = (ev) => setLikers(ev.data);\n  }, [worker]);\n\n  useEffect(() => {\n    if ((idSource?.result || [])[index]) return;\n    if (worker) {\n      worker.postMessage(rawLikers);\n    } else {\n      setLikers(calcLikers(rawLikers));\n    }\n  }, [rawLikers, index, idSource, worker]);\n\n  return {\n    size: idSource?.result?.length || 0,\n    stats,\n    loading: (idSource?.result?.length || 0) > index,\n    timeoutTime,\n    loaded: index,\n    data: likers || {},\n  };\n}\n\nexport default useLikers;\n","import type { ChartData } from \"chart.js\";\nimport { Osnova } from \"types/osnova\";\nimport { Common } from \"types/utils\";\nimport { getMonths } from \"./common\";\nimport { getRating } from \"./rating\";\n\ntype ActivityChartData = {\n  years: ChartData<\"bar\", number[], string>;\n  months: ChartData<\"bar\", number[], string>;\n  days: ChartData<\"bar\", number[], string>;\n  hours: ChartData<\"radar\", number[], string>;\n  ratingByEntity: ChartData<\"line\", number[], string>;\n};\n\nfunction getStats<\n  T extends {\n    result?: Array<\n      Common<\n        Osnova.Entry.EntriesResponse[\"result\"][0],\n        Osnova.Comment.CommentsResponse[\"result\"][0]\n      >\n    >;\n  }\n>(target: T, dsOpts = {}) {\n  const d = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0 };\n  const dd = { ...d, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0 };\n  const stats: {\n    years: Record<string, number>;\n    months: Record<string, number>;\n    days: Record<string, number>;\n    hours: Record<string, number>;\n    ratingByEntity: Record<string, { minus: number; plus: number }>;\n  } = {\n    years: {},\n    months: {\n      ...dd,\n    },\n    days: { ...d },\n    hours: {\n      ...d,\n      12: 0,\n      13: 0,\n      14: 0,\n      15: 0,\n      16: 0,\n      17: 0,\n      18: 0,\n      19: 0,\n      20: 0,\n      21: 0,\n      22: 0,\n      23: 0,\n    },\n    ratingByEntity: {},\n  };\n  for (const el of target?.result || []) {\n    const dt = new Date(el.date * 1000);\n    const year = dt.getUTCFullYear();\n    const month = dt.getUTCMonth();\n    const day = dt.getUTCDay();\n    const hour = dt.getUTCHours();\n    stats.years[year] = (stats.years[year] || 0) + 1;\n    stats.months[month] = (stats.months[month] || 0) + 1;\n    stats.days[day] = (stats.days[day] || 0) + 1;\n    stats.hours[hour] = (stats.hours[hour] || 0) + 1;\n    stats.ratingByEntity[el.id] = getRating(el.likes);\n  }\n  const ratingByEntity = [...Object.values(stats.ratingByEntity)];\n  return {\n    years: {\n      datasets: [\n        {\n          data: [...Object.values(stats.years)],\n          ...dsOpts,\n        },\n      ],\n      labels: [...Object.keys(stats.years)],\n    },\n    months: {\n      datasets: [{ data: [...Object.values(stats.months)], ...dsOpts }],\n      labels: [...getMonths()],\n    },\n    days: {\n      datasets: [{ data: [...Object.values(stats.days)], ...dsOpts }],\n      labels: [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\n    },\n    hours: {\n      datasets: [{ data: [...Object.values(stats.hours)], ...dsOpts }],\n      labels: [...Object.keys(stats.hours)],\n    },\n    ratingByEntity: {\n      datasets: [\n        {\n          data: [...ratingByEntity.map(({ minus }) => minus)],\n          label: \"Отрицательные\",\n          backgroundColor: \"rgba(229,62,62, 0.2)\",\n          borderColor: \"rgb(229,62,62)\",\n          borderWidth: 1,\n        },\n        {\n          data: [...ratingByEntity.map(({ plus }) => plus)],\n          label: \"Положительные\",\n          backgroundColor: \"rgba(72,187,120, 0.2)\",\n          borderColor: \"rgb(72,187,120)\",\n          borderWidth: 1,\n        },\n      ],\n      labels: [...Object.keys(stats.ratingByEntity)],\n    },\n  } as ActivityChartData;\n}\n\nexport { getStats, type ActivityChartData };\n","import { HStack, Avatar, Text } from \"@chakra-ui/react\";\nimport { useApiContext } from \"contexts/Api\";\nimport { PropsWithChildren } from \"react\";\n\ninterface UserProps {\n  name: string;\n  avatar_url: string;\n  id: number | string;\n  size?: \"sm\" | \"md\";\n}\n\nconst sizes = {\n  md: {\n    fontSize: \"18px\",\n    maxW: \"180px\",\n  },\n  sm: {\n    fontSize: \"13px\",\n    maxW: \"140px\",\n  },\n};\n\nfunction User({\n  name,\n  avatar_url,\n  id,\n  children,\n  size = \"md\",\n}: PropsWithChildren<UserProps>) {\n  const { host } = useApiContext();\n  return (\n    <HStack as=\"a\" href={`https://${host}/u/${id}`} target=\"_blank\">\n      <Avatar size={{ base: \"sm\", md: size }} name={name} src={avatar_url} />\n      <Text\n        fontSize={{ base: \"14px\", md: sizes[size].fontSize }}\n        lineHeight={1.1}\n        as=\"b\"\n        maxW={{ base: \"100px\", md: sizes[size].maxW }}\n        textOverflow={\"ellipsis\"}\n        overflow=\"hidden\"\n        align=\"initial\"\n      >\n        {name}\n      </Text>\n      {children}\n    </HStack>\n  );\n}\n\nexport default User;\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  HStack,\n  Text,\n} from \"@chakra-ui/react\";\nimport User from \"components/User\";\nimport { type ReactNode } from \"react\";\nimport type { Osnova } from \"types/osnova\";\n\ntype Rating = Pick<Osnova.Likers.Liker, \"plus\" | \"minus\">;\n\ninterface ShowRatingProps extends Rating {}\n\nfunction ShowRating({ plus, minus }: ShowRatingProps) {\n  return (\n    <HStack spacing={2}>\n      <Text fontSize=\"16px\" as=\"span\" color=\"green.300\">\n        {plus}\n      </Text>\n      <Text fontSize=\"16px\" as=\"span\" color=\"red.300\">\n        {minus}\n      </Text>\n      <Text fontSize=\"16px\" as=\"span\" color=\"gray.500\">\n        {plus + minus ?? \"N/A\"}\n      </Text>\n    </HStack>\n  );\n}\n\nexport interface RatingByUserProps extends Rating {\n  label: ReactNode;\n  name: string;\n  avatar_url: string;\n  id: string;\n}\n\nfunction RatingByUser({\n  label,\n  name,\n  avatar_url,\n  id,\n  ...rating\n}: RatingByUserProps) {\n  return (\n    <Stat>\n      <StatLabel>{label}</StatLabel>\n      <StatNumber>\n        <User name={name} avatar_url={avatar_url} id={id} />\n      </StatNumber>\n      <StatHelpText pl=\"14\">\n        <ShowRating {...rating} />\n      </StatHelpText>\n    </Stat>\n  );\n}\n\nexport default RatingByUser;\n","import {\n  Table,\n  TableCaption,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  chakra,\n  Flex,\n  Text,\n  IconButton,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Select,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport User from \"components/User\";\nimport type { Osnova } from \"types/osnova\";\nimport { useTable, useSortBy, usePagination, Column } from \"react-table\";\nimport {\n  TriangleDownIcon,\n  TriangleUpIcon,\n  ArrowLeftIcon,\n  ChevronLeftIcon,\n  ArrowRightIcon,\n  ChevronRightIcon,\n} from \"@chakra-ui/icons\";\nimport { useMemo } from \"react\";\n\nconst columns: Column<Osnova.Likers.Liker>[] = [\n  {\n    Header: \"Пользователь\",\n    accessor: (d) => d,\n    Cell: ({\n      value: { name, avatar_url, id },\n    }: {\n      value: Osnova.Likers.Liker;\n    }) => <User name={name} avatar_url={avatar_url} id={id} />,\n  },\n  {\n    Header: \"+\",\n    accessor: \"plus\",\n    isNumeric: true,\n  },\n  {\n    Header: \"-\",\n    accessor: \"minus\",\n    isNumeric: true,\n  },\n  {\n    Header: \"Всего\",\n    accessor: \"total\",\n    isNumeric: true,\n  },\n];\n\nfunction TotalTable({ likers }: { likers: Osnova.Likers.Likers }) {\n  const data = useMemo(() => [...Object.values(likers)], [likers]);\n  // https://codesandbox.io/s/fxx0v?file=/src/App.js:968-998\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable({ columns, data }, useSortBy, usePagination);\n\n  return (\n    <>\n      <Table size=\"sm\" {...getTableProps()}>\n        <TableCaption>Статистика оценок по пользователям</TableCaption>\n        <Thead>\n          {headerGroups.map((headerGroup) => (\n            <Tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <Th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  isNumeric={column.isNumeric}\n                >\n                  {column.render(\"Header\")}\n                  <chakra.span pl=\"4\">\n                    {column.isSorted ? (\n                      column.isSortedDesc ? (\n                        <TriangleDownIcon aria-label=\"sorted descending\" />\n                      ) : (\n                        <TriangleUpIcon aria-label=\"sorted ascending\" />\n                      )\n                    ) : null}\n                  </chakra.span>\n                </Th>\n              ))}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <Tr {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <Td\n                    {...cell.getCellProps()}\n                    isNumeric={cell.column.isNumeric}\n                  >\n                    {cell.render(\"Cell\")}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n\n      <Flex justifyContent=\"space-between\" mt={4} alignItems=\"center\" w=\"100%\">\n        <Flex>\n          <Tooltip label=\"First Page\">\n            <IconButton\n              onClick={() => gotoPage(0)}\n              isDisabled={!canPreviousPage}\n              icon={<ArrowLeftIcon h={3} w={3} />}\n              mr={2}\n              aria-label=\"First Page\"\n            />\n          </Tooltip>\n          <Tooltip label=\"Previous Page\">\n            <IconButton\n              onClick={previousPage}\n              isDisabled={!canPreviousPage}\n              icon={<ChevronLeftIcon h={6} w={6} />}\n              aria-label=\"Previous Page\"\n            />\n          </Tooltip>\n        </Flex>\n\n        <Flex alignItems=\"center\">\n          <Text flexShrink=\"0\" mr={2}>\n            <Text fontWeight=\"bold\" as=\"span\">\n              {pageIndex + 1}\n            </Text>{\" \"}\n            of{\" \"}\n            <Text fontWeight=\"bold\" as=\"span\">\n              {pageOptions.length}\n            </Text>\n          </Text>\n          <NumberInput\n            ml={2}\n            mr={2}\n            w={16}\n            min={1}\n            max={pageOptions.length}\n            onChange={(value) => {\n              const page = value ? +value - 1 : 0;\n              gotoPage(page);\n            }}\n            display={{ base: \"none\", md: \"inline-block\" }}\n            defaultValue={pageIndex + 1}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n          <Select\n            w={32}\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </Select>\n        </Flex>\n\n        <Flex>\n          <Tooltip label=\"Next Page\">\n            <IconButton\n              onClick={nextPage}\n              isDisabled={!canNextPage}\n              icon={<ChevronRightIcon h={6} w={6} />}\n              aria-label=\"Next Page\"\n            />\n          </Tooltip>\n          <Tooltip label=\"Last Page\">\n            <IconButton\n              onClick={() => gotoPage(pageCount - 1)}\n              isDisabled={!canNextPage}\n              icon={<ArrowRightIcon h={3} w={3} />}\n              ml={2}\n              aria-label=\"Last page\"\n            />\n          </Tooltip>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n\nexport default TotalTable;\n","import { chakra, HStack, Text } from \"@chakra-ui/react\";\nimport { useMemo, useRef } from \"react\";\nimport type { Osnova } from \"types/osnova\";\n\nimport { useVirtualizer } from \"@tanstack/react-virtual\";\nimport User from \"components/User\";\n\ninterface TotalGridProps {\n  likers: Osnova.Likers.Likers;\n}\n\ninterface ListProps extends TotalGridProps {\n  target: keyof Osnova.Likers.Liker;\n  color: string;\n}\n\nfunction List({ likers, target, color }: ListProps) {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const arrLikers = useMemo(\n    () =>\n      [...Object.values(likers)]\n        .filter((l) => l[target])\n        .sort((a, b) => (b[target] as number) - (a[target] as number)),\n    [likers, target]\n  );\n\n  const rowVirtualizer = useVirtualizer({\n    count: arrLikers.length,\n    getScrollElement: () => ref.current,\n    getItemKey: (i) => arrLikers[i].id,\n    estimateSize: () => 50,\n    overscan: 20,\n  });\n\n  return (\n    <chakra.div\n      shadow=\"md\"\n      rounded=\"md\"\n      borderWidth=\"1px\"\n      borderColor=\"gray.300\"\n      ref={ref}\n      overflow=\"auto\"\n      h=\"80vh\"\n      w=\"100%\"\n      p=\"2\"\n    >\n      <chakra.div\n        w=\"100%\"\n        position=\"relative\"\n        height={`${rowVirtualizer.getTotalSize()}px`}\n      >\n        {rowVirtualizer.getVirtualItems().map((virtualRow) => (\n          <div\n            key={virtualRow.index}\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              width: \"100%\",\n              height: `${virtualRow.size}px`,\n              transform: `translateY(${virtualRow.start}px)`,\n            }}\n          >\n            <HStack justifyContent=\"space-between\">\n              <User\n                avatar_url={arrLikers[virtualRow.index].avatar_url}\n                id={arrLikers[virtualRow.index].id}\n                name={arrLikers[virtualRow.index].name}\n                size=\"sm\"\n              />\n              <Text color={color}>{arrLikers[virtualRow.index][target]}</Text>\n            </HStack>\n          </div>\n        ))}\n      </chakra.div>\n    </chakra.div>\n  );\n}\n\nfunction TotalGrid({ likers }: TotalGridProps) {\n  return (\n    <HStack spacing={2}>\n      <List likers={likers} target=\"plus\" color=\"green.300\" />\n      <List likers={likers} target=\"minus\" color=\"red.300\" />\n    </HStack>\n  );\n}\n\nexport default TotalGrid;\n","import {\n  Icon,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n} from \"@chakra-ui/react\";\nimport type { Osnova } from \"types/osnova\";\nimport Table from \"./Table\";\nimport Grid from \"./Grid\";\n\ninterface Props {\n  likers: Osnova.Likers.Likers;\n}\n\nfunction HIcon({ d }: { d: string }) {\n  return (\n    <Icon\n      viewBox=\"0 0 24 24\"\n      strokeWidth={2}\n      stroke=\"currentColor\"\n      fill=\"none\"\n      color=\"currentColor\"\n    >\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d={d} />\n    </Icon>\n  );\n}\n\nfunction Likers({ likers }: Props) {\n  return (\n    <Tabs align=\"end\" variant=\"unstyled\" w=\"100%\">\n      <TabList>\n        <Tab _selected={{ color: \"green.300\" }} color=\"gray.300\">\n          <HIcon d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n        </Tab>\n\n        <Tab _selected={{ color: \"green.300\" }} color=\"gray.300\">\n          <HIcon d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n        </Tab>\n      </TabList>\n\n      <TabPanels maxW=\"100vw\" overflow={\"auto\"}>\n        <TabPanel px={0}>\n          <Table likers={likers} />\n        </TabPanel>\n        <TabPanel px={0}>\n          <Grid likers={likers} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nexport default Likers;\n","import {\n  VStack,\n  Progress,\n  SimpleGrid,\n  Text,\n  Stat,\n  StatLabel,\n  StatNumber,\n  HStack,\n} from \"@chakra-ui/react\";\nimport RatingByUser from \"components/scope/Stat/RatingByUser\";\nimport Likers from \"components/scope/likers/Likers\";\nimport { addMilliseconds, formatDistance } from \"date-fns\";\nimport type useLikers from \"hooks/useLikers\";\n\ninterface RatingProps extends ReturnType<typeof useLikers> {}\n\nfunction Rating({\n  loading,\n  loaded,\n  size,\n  data,\n  stats,\n  timeoutTime,\n}: RatingProps) {\n  return (\n    <VStack position=\"relative\" w=\"100%\">\n      {loading && (\n        <VStack w=\"100%\" align=\"flex-end\">\n          <Progress\n            size=\"lg\"\n            value={(loaded / size || 1) * 100}\n            w=\"100%\"\n            rounded=\"md\"\n          />\n          <HStack spacing={2}>\n            <Text>Осталось:</Text>\n            <Text>\n              {formatDistance(\n                new Date(),\n                addMilliseconds(new Date(), timeoutTime * (size - loaded)),\n                { includeSeconds: true }\n              )}\n            </Text>\n          </HStack>\n        </VStack>\n      )}\n\n      {!loading && (\n        <>\n          <SimpleGrid\n            columns={{ md: 2, base: 1 }}\n            spacing={5}\n            justifyContent=\"space-between\"\n            minW=\"100%\"\n          >\n            {!![...Object.entries(data)].length && (\n              <Stat>\n                <StatLabel>Уникальных пользователей</StatLabel>\n                <StatNumber>{[...Object.entries(data)].length}</StatNumber>\n              </Stat>\n            )}\n            {!!+stats.plus.id && (\n              <RatingByUser {...stats.plus} label=\"Больше всего плюсов\" />\n            )}\n            {!!+stats.minus.id && (\n              <RatingByUser {...stats.minus} label=\"Больше всего минусов\" />\n            )}\n            {!!+stats.total.id && (\n              <RatingByUser {...stats.total} label=\"Больше всего оценок\" />\n            )}\n          </SimpleGrid>\n          <Likers likers={data} />\n        </>\n      )}\n    </VStack>\n  );\n}\n\nexport default Rating;\n","import {\n  SimpleGrid,\n  Stat,\n  StatLabel,\n  StatNumber,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  useConst,\n  VStack,\n} from \"@chakra-ui/react\";\nimport ActivityCharts from \"components/chart/Activity\";\nimport EntryCard from \"components/scope/EntryCard\";\nimport RatingView from \"components/scope/RatingView\";\nimport StatCat from \"components/scope/StatCat\";\nimport { useApiProxy } from \"hooks/useFetch\";\nimport useLikers, { UseLikersData } from \"hooks/useLikers\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport type { Osnova } from \"types/osnova\";\nimport { getStats } from \"utils/charts\";\nimport { getRating } from \"utils/rating\";\nimport Rating from \"./Rating\";\n\nfunction useEntriesLikers(source: Osnova.Entry.EntriesResponse | undefined) {\n  const [currentId, setCurrentId] = useState<string | number | undefined>(\n    undefined\n  );\n  const [cLikers, setCLikers] = useState<UseLikersData>(undefined);\n  const { data } = useApiProxy<Osnova.Entry.LikersResponse>(\n    `/entry/likers?id=${currentId}`\n  );\n  const likers = useLikers(source, cLikers, setCurrentId);\n\n  useEffect(() => {\n    if (!data) return;\n    const result: UseLikersData = { result: {} };\n    for (const [id, val] of Object.entries(data.data.likers)) {\n      const v = val as Osnova.Entry.Liker;\n      result.result[id] = {\n        avatar_url: v.avatar_url,\n        name: v.user_name,\n        sign: v.sign,\n      };\n    }\n    console.log(result, data);\n    setCLikers(result);\n  }, [data]);\n\n  return likers;\n}\n\nfunction Entries({ data }: { data: Osnova.Entry.EntriesResponse | undefined }) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingPlus: 0,\n      ratingMinus: 0,\n      comments: 0,\n      reposts: 0,\n      hits: 0,\n      mostHits: (data?.result || [])[0],\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      const { minus, plus } = getRating(entry.likes);\n      result.rating += plus - minus;\n      result.ratingPlus += plus;\n      result.ratingMinus += minus;\n      result.comments += entry.commentsCount;\n      result.reposts += Number(entry.isRepost);\n      result.hits += entry.hitsCount;\n      const { plus: pPlus } = getRating(result.mostLiked.likes);\n      const { minus: pMinus } = getRating(result.mostDisliked.likes);\n      if (entry.hitsCount > result.mostHits.hitsCount) {\n        result.mostHits = entry;\n      }\n      if (plus > pPlus) {\n        result.mostLiked = entry;\n      }\n      if (minus > pMinus) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  const likers = useEntriesLikers(data);\n\n  const options = useConst({ plugins: { legend: { display: false } } });\n  const entryDatasetOptions = useConst({\n    borderColor: \"rgb(237,137,54)\",\n    backgroundColor: \"rgba(237,137,54,0.4)\",\n    borderWidth: 1,\n  });\n\n  const charts = getStats(data || {}, entryDatasetOptions);\n\n  return (\n    <Tabs\n      variant={\"soft-rounded\"}\n      size={{ base: \"sm\", md: \"md\" }}\n      maxW=\"100%\"\n      w=\"100%\"\n      colorScheme=\"orange\"\n    >\n      <TabList\n        minW=\"0\"\n        maxW=\"100%\"\n        overflowX=\"auto\"\n        sx={{\n          scrollbarWidth: \"none\",\n          \"::-webkit-scrollbar\": { display: \"none\" },\n          WebkitOverflowScrolling: \"touch\",\n        }}\n        px=\"1\"\n      >\n        <Tab>Статистика</Tab>\n        <Tab>Активность</Tab>\n        <Tab>Оценки</Tab>\n      </TabList>\n      <TabPanels w=\"100%\">\n        <TabPanel>\n          <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n            <SimpleGrid\n              columns={{ base: 2, md: 3 }}\n              spacing={1}\n              justifyContent=\"space-between\"\n              minW=\"100%\"\n            >\n              <RatingView>{stats.rating}</RatingView>\n              <RatingView label=\"Оценок [+]\">{stats.ratingPlus}</RatingView>\n              <RatingView label=\"Оценки [-]\">{stats.ratingMinus}</RatingView>\n              <Stat>\n                <StatLabel>Комментариев</StatLabel>\n                <StatNumber>{stats.comments}</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Просмотров</StatLabel>\n                <StatNumber>{stats.hits}</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Репостов</StatLabel>\n                <StatNumber>{stats.reposts}</StatNumber>\n              </Stat>\n            </SimpleGrid>\n            {stats.mostHits && (\n              <StatCat label=\"Наиболее просматриваемый\">\n                <EntryCard entry={stats.mostHits} />\n              </StatCat>\n            )}\n\n            {stats.mostLiked && (\n              <StatCat label=\"Наибольшее количество плюсов\">\n                <EntryCard entry={stats.mostLiked} />\n              </StatCat>\n            )}\n\n            {stats.mostDisliked && (\n              <StatCat label=\"Наибольшее количество минусов\">\n                <EntryCard entry={stats.mostDisliked} />\n              </StatCat>\n            )}\n          </VStack>\n        </TabPanel>\n        <TabPanel>\n          <ActivityCharts data={charts} options={options} />\n        </TabPanel>\n        <TabPanel>\n          <Rating {...likers} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nexport default Entries;\n","import { Avatar, Heading, HStack, VStack, Text } from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\nimport { getRating } from \"utils/rating\";\n\ninterface CommentCardProps {\n  comment: Osnova.Comment.Comment;\n}\n\nfunction CommentCard({\n  comment: {\n    author: { avatar_url, name },\n    date,\n    likes: { count, summ },\n    id,\n    entry: { url },\n    html,\n  },\n}: CommentCardProps) {\n  const { minus, plus } = getRating({ count, summ });\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url + `?comment=${id}`}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        <Text dangerouslySetInnerHTML={{ __html: html }} />\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <span />\n        <HStack>\n          <Text color=\"red.300\">{minus}</Text>\n          <Text color=\"green.300\">{plus}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default CommentCard;\n","import {\n  useConst,\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n  VStack,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport ActivityCharts from \"components/chart/Activity\";\nimport CommentCard from \"components/scope/CommentCard\";\nimport RatingView from \"components/scope/RatingView\";\nimport StatCat from \"components/scope/StatCat\";\nimport { useApi } from \"hooks/useFetch\";\nimport useLikers, { UseLikersData } from \"hooks/useLikers\";\nimport { useMemo, useState } from \"react\";\nimport type { Osnova } from \"types/osnova\";\nimport { getStats } from \"utils/charts\";\nimport { getRating } from \"utils/rating\";\nimport Rating from \"./Rating\";\n\nfunction Comments({\n  data,\n}: {\n  data: Osnova.Comment.CommentsResponse | undefined;\n}) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingPlus: 0,\n      ratingMinus: 0,\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      const { plus, minus } = getRating(entry.likes);\n      result.rating += plus - minus;\n      result.ratingPlus += plus;\n      result.ratingMinus += minus;\n      const { plus: pPlus } = getRating(result.mostLiked.likes);\n      const { minus: pMinus } = getRating(result.mostDisliked.likes);\n      if (plus > pPlus) {\n        result.mostLiked = entry;\n      }\n      if (minus > pMinus) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  const [currentId, setCurrentId] = useState<string | number | undefined>(\n    undefined\n  );\n  const { data: cLikers } = useApi<UseLikersData>(\n    `/comment/likers/${currentId}`,\n    undefined,\n    \"1.9\"\n  );\n  const likers = useLikers(data, cLikers, setCurrentId);\n\n  const options = useConst({ plugins: { legend: { display: false } } });\n  const commentDatasetOptions = useConst({\n    borderColor: \"rgb(49,130,206)\",\n    backgroundColor: \"rgba(49,130,206,0.4)\",\n    borderWidth: 1,\n  });\n\n  const charts = getStats(data || {}, commentDatasetOptions);\n\n  return (\n    <Tabs\n      variant={\"soft-rounded\"}\n      size={{ base: \"sm\", md: \"md\" }}\n      maxW=\"100%\"\n      w=\"100%\"\n      colorScheme=\"teal\"\n    >\n      <TabList\n        minW=\"0\"\n        maxW=\"100%\"\n        overflowX=\"auto\"\n        sx={{\n          scrollbarWidth: \"none\",\n          \"::-webkit-scrollbar\": { display: \"none\" },\n          WebkitOverflowScrolling: \"touch\",\n        }}\n        px=\"1\"\n      >\n        <Tab>Статистика</Tab>\n        <Tab>Активность</Tab>\n        <Tab>Оценки</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n            <SimpleGrid\n              columns={3}\n              spacing={1}\n              justifyContent=\"space-between\"\n              minW=\"100%\"\n            >\n              <RatingView>{stats.rating}</RatingView>\n              <RatingView label=\"Оценок [+]\">{stats.ratingPlus}</RatingView>\n              <RatingView label=\"Оценки [-]\">{stats.ratingMinus}</RatingView>\n            </SimpleGrid>\n\n            {stats.mostLiked && (\n              <StatCat label=\"Наибольшее количество плюсов\">\n                <CommentCard comment={stats.mostLiked} />\n              </StatCat>\n            )}\n\n            {stats.mostDisliked && (\n              <StatCat label=\"Наибольшее количество минусов\">\n                <CommentCard comment={stats.mostDisliked} />\n              </StatCat>\n            )}\n          </VStack>\n        </TabPanel>\n        <TabPanel>\n          <ActivityCharts data={charts} options={options} />\n        </TabPanel>\n        <TabPanel>\n          <Rating {...likers} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nexport default Comments;\n","function BooleanText({ value }: { value?: boolean }) {\n  return <>{value ? \"Да\" : \"Нет\"}</>;\n}\n\nexport default BooleanText;\n","import {\n  VStack,\n  StackDivider,\n  SimpleGrid,\n  Stat,\n  StatLabel,\n  StatNumber,\n} from \"@chakra-ui/react\";\nimport BooleanText from \"components/atoms/BooleanText\";\nimport type { Osnova } from \"types/osnova\";\n\nfunction Overview({\n  subsite,\n  entries,\n  comments,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  entries?: number;\n  comments?: number;\n}) {\n  return (\n    <VStack divider={<StackDivider />}>\n      <SimpleGrid\n        columns={{ base: 2, sm: 4 }}\n        spacing={3}\n        justifyContent=\"space-between\"\n        w=\"100%\"\n      >\n        <Stat>\n          <StatLabel>Постов</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.entries ?? entries ?? \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Комментариев</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.comments ?? comments ?? \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписок</StatLabel>\n          <StatNumber>{subsite?.counters?.subscriptions ?? \"N/A\"}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписчиков</StatLabel>\n          <StatNumber>{subsite?.counters?.subscribers ?? \"N/A\"}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n\n      <SimpleGrid\n        columns={2}\n        spacing={3}\n        justifyContent=\"space-between\"\n        w=\"100%\"\n      >\n        <Stat>\n          <StatLabel>Plus</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isPlus} />}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подтвержден</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isVerified} />}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n    </VStack>\n  );\n}\n\nexport default Overview;\n","import {\n  HStack,\n  Avatar,\n  VStack,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n} from \"@chakra-ui/react\";\nimport { isValid, format } from \"date-fns\";\nimport type { Osnova } from \"types/osnova\";\nimport RatingView from \"../RatingView\";\n\nfunction Header({\n  subsite,\n  avatar_url,\n  rating,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  avatar_url?: string;\n  rating?: number;\n}) {\n  return (\n    <HStack\n      spacing={{ base: 5, sm: 8, md: 10 }}\n      position=\"sticky\"\n      top=\"0\"\n      bg=\"white\"\n      zIndex=\"1000\"\n      pt=\"5\"\n      pb=\"2\"\n      px={{ base: 2, sm: 3, md: 4 }}\n      w=\"100%\"\n      justifyContent=\"center\"\n    >\n      <Avatar\n        name={subsite.name}\n        size={{ base: \"xl\", md: \"2xl\" }}\n        src={\n          subsite?.avatar?.data?.uuid\n            ? `https://leonardo.osnova.io/${subsite?.avatar?.data?.uuid}/-/scale_crop/300x300/-/format/webp/`\n            : avatar_url\n        }\n      />\n      <VStack>\n        <Heading size={{ base: \"md\", sm: \"lg\" }}>{subsite.name}</Heading>\n        <HStack justifyContent={\"space-between\"} minW=\"100%\">\n          <RatingView>{subsite.rating ?? rating ?? \"N/A\"}</RatingView>\n          <Stat>\n            <StatLabel>Создан</StatLabel>\n            <StatNumber>\n              {isValid(subsite.created)\n                ? format(subsite.created * 1000, \"dd.LL.yy\")\n                : \"N/A\"}\n            </StatNumber>\n          </Stat>\n        </HStack>\n      </VStack>\n    </HStack>\n  );\n}\n\nexport default Header;\n","import type { Osnova } from \"types/osnova\";\nimport { useApi, useApiLazy } from \"./useFetch\";\n\n/**\n * Fetchs subsite info, entries and comments for form base representation of subsite\n * @param id identifier of subsite needed to load\n * @returns loaded data for provided subsite\n */\nfunction useScope(id: number) {\n  const { data, error: subsiteError } = useApi<Osnova.Subsite.SubsiteResponse>(\n    `/subsite?id=${id}`\n  );\n  const entries = useApiLazy<Osnova.Entry.EntriesResponse>(\n    `/user/${id}/entries`,\n    undefined,\n    \"1.9\"\n  );\n  const comments = useApiLazy<Osnova.Comment.CommentsResponse>(\n    `/user/${id}/comments`,\n    undefined,\n    \"1.9\"\n  );\n\n  const {\n    result: { subsite },\n  } = data || {\n    result: {\n      subsite: {\n        name:\n          comments?.result?.at(0)?.author?.name ||\n          entries?.result?.at(0)?.author?.name,\n      } as any,\n    },\n  };\n\n  return {\n    subsite: subsite as Osnova.Subsite.SubsiteResponse[\"result\"][\"subsite\"],\n    subsiteError,\n    entries,\n    comments,\n  };\n}\n\nexport default useScope;\n","import {\n  Heading,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getTargetId } from \"utils/common\";\nimport Entries from \"modules/Entries\";\nimport Comments from \"modules/Comments\";\nimport Overview from \"modules/Overview\";\nimport Header from \"components/scope/parts/Header\";\nimport useScope from \"hooks/useScope\";\n\nfunction Scope() {\n  const [searchParams] = useSearchParams();\n  const id = getTargetId(searchParams.get(\"id\") || \"\");\n\n  const { subsite, subsiteError, entries, comments } = useScope(id);\n\n  const entriesRating = useMemo(\n    () => entries?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [entries]\n  );\n  const commentsRating = useMemo(\n    () => comments?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [comments]\n  );\n\n  return (\n    <VStack>\n      {subsiteError && (\n        <VStack align=\"start\">\n          <Heading>\n            Вероятно профиль закрыт{\" \"}\n            {!(comments?.result?.length || entries?.result?.length) && (\n              <>или не существует</>\n            )}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"gray.500\">\n            Некоторые данные могут быть менее точны и потребуется дополнительное\n            время для подсчета\n          </Text>\n        </VStack>\n      )}\n      <Header\n        subsite={subsite}\n        avatar_url={\n          subsite?.avatar?.data?.url ||\n          comments?.result?.at(0)?.author?.avatar_url ||\n          entries?.result?.at(0)?.author?.avatar_url\n        }\n        rating={entriesRating + commentsRating}\n      />\n\n      <Tabs\n        variant={\"soft-rounded\"}\n        size={{ base: \"sm\", md: \"md\" }}\n        maxW=\"100%\"\n        w=\"100%\"\n        colorScheme=\"cyan\"\n      >\n        <TabList\n          minW=\"0\"\n          maxW=\"100%\"\n          overflowX=\"auto\"\n          sx={{\n            scrollbarWidth: \"none\",\n            \"::-webkit-scrollbar\": { display: \"none\" },\n            WebkitOverflowScrolling: \"touch\",\n          }}\n          px=\"1\"\n        >\n          <Tab>Обзор</Tab>\n          <Tab>Посты</Tab>\n          <Tab>Комментарии</Tab>\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <Overview\n              subsite={subsite}\n              entries={entries?.result?.length}\n              comments={comments?.result?.length}\n            />\n          </TabPanel>\n          <TabPanel>\n            <Entries data={entries} />\n          </TabPanel>\n          <TabPanel px={0}>\n            <Comments data={comments} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </VStack>\n  );\n}\n\nexport default Scope;\n","const getTargetId = (target: string) =>\n  +(/(?:u\\/)?(\\d+)/.exec(target || \"\") || [])[1] || 0;\n\nconst getMonths = () => [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport { getTargetId, getMonths };\n"],"names":["data","years","months","days","hours","ratingByEntity","options","w","size","getRating","count","summ","plus","Math","abs","minus","Tweet","markdown","p","rounded","borderColor","borderWidth","entry","url","hitsCount","intro","date","likes","cover","subsite","avatar_url","name","title","blocks","align","as","href","rel","target","shadow","minW","spacing","justifyContent","src","color","format","pl","thumbnailUrl","alt","objectFit","pointerEvents","type","label","children","api","host","version","proxy","ApiContext","createContext","useApiContext","useContext","useFetch","cache","useRef","cancelRequest","initialState","error","undefined","useReducer","state","action","payload","dispatch","useEffect","includes","current","fetchData","fetch","response","ok","Error","statusText","json","useApi","apiV","replace","useApiLazy","inRequest","useState","result","setResult","offs","setOffs","prev","length","timeout","setTimeout","clearTimeout","idSource","next","worker","useMemo","Worker","URL","rawLikers","setRawLikers","likers","setLikers","index","setIndex","stats","id","total","Object","entries","cmt","onmessage","ev","postMessage","source","val","Reflect","has","Number","sign","calcLikers","loading","timeoutTime","loaded","getStats","dsOpts","d","dd","el","dt","Date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDay","hour","getUTCHours","values","datasets","labels","keys","getMonths","map","backgroundColor","sizes","md","fontSize","maxW","sm","base","lineHeight","textOverflow","overflow","ShowRating","rating","columns","Header","accessor","Cell","value","isNumeric","useTable","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageIndex","pageSize","headerGroup","Tr","getHeaderGroupProps","headers","column","Th","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","Td","getCellProps","mt","alignItems","onClick","isDisabled","icon","h","mr","flexShrink","fontWeight","ml","min","max","onChange","display","defaultValue","e","List","ref","arrLikers","filter","l","sort","a","b","rowVirtualizer","useVirtualizer","getScrollElement","getItemKey","i","estimateSize","overscan","position","height","getTotalSize","getVirtualItems","virtualRow","style","top","left","width","transform","start","HIcon","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","variant","_selected","px","Table","Grid","formatDistance","addMilliseconds","includeSeconds","useEntriesLikers","currentId","setCurrentId","cLikers","setCLikers","useApiProxy","useLikers","v","user_name","console","log","ratingPlus","ratingMinus","comments","reposts","hits","mostHits","mostLiked","mostDisliked","commentsCount","isRepost","pPlus","pMinus","useConst","plugins","legend","entryDatasetOptions","charts","colorScheme","overflowX","sx","scrollbarWidth","WebkitOverflowScrolling","Activity","comment","author","html","dangerouslySetInnerHTML","__html","commentDatasetOptions","divider","counters","subscriptions","subscribers","isPlus","isVerified","bg","zIndex","pt","pb","avatar","uuid","isValid","created","subsiteError","at","useSearchParams","searchParams","getTargetId","get","useScope","entriesRating","reduce","c","commentsRating","exec"],"sourceRoot":""}