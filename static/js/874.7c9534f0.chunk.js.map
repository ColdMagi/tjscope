{"version":3,"file":"static/js/874.7c9534f0.chunk.js","mappings":"+QAIA,MAJA,YAAsD,IAA/BA,EAA8B,EAA9BA,MACrB,OAAO,8BAAGA,EAAQ,eAAO,sBAC1B,E,UCAKC,EAAY,YAGR,IAFRC,EAEO,EAFPA,MACAC,EACO,EADPA,KAEIC,EAAOD,EACPE,EAAQH,EAAQE,EAOpB,OALID,EAAO,IAETE,GADAD,EAAOE,KAAKC,IAAIL,GAASA,EAAQC,GAAQ,KAClB,EAARA,GAGV,CAAEE,MAAAA,EAAOD,KAAAA,EACjB,EC0CD,MAhDA,YASsB,IAAD,IARnBI,QAQmB,IAPjBC,OAAUC,EAOO,EAPPA,WAAYC,EAOL,EAPKA,KACtBC,EAMiB,EANjBA,KAMiB,IALjBC,MAASX,EAKQ,EALRA,MAAOC,EAKC,EALDA,KAChBW,EAIiB,EAJjBA,GACSC,EAGQ,EAHjBC,MAASD,IACTE,EAEiB,EAFjBA,KAGF,EAAwBhB,EAAU,CAAEC,MAAAA,EAAOC,KAAAA,IAAnCE,EAAR,EAAQA,MAAOD,EAAf,EAAeA,KACf,OACE,UAAC,KAAD,CACEc,MAAO,aACPC,GAAG,IACHC,KAAML,EAAG,mBAAeD,GACxBO,IAAI,+BACJC,OAAO,SACPC,EAAE,IACFC,OAAO,KACPC,YAAY,MACZC,QAAQ,KACRC,KAAK,OACLC,QAAS,EAXX,WAaE,UAAC,KAAD,CAAQC,eAAgB,gBAAiBF,KAAK,OAA9C,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAQG,KAAK,KAAKC,IAAKrB,EAAYC,KAAMA,KACzC,SAAC,KAAD,CAASmB,KAAK,KAAd,SAAoBnB,QAEtB,SAAC,KAAD,CAAMqB,MAAM,WAAWb,GAAG,OAA1B,UACGc,EAAAA,EAAAA,GAAc,IAAPrB,EAAa,kBAGzB,SAAC,KAAD,CAAQsB,GAAG,IAAX,UACE,SAAC,KAAD,CAAMC,wBAAyB,CAAEC,OAAQnB,QAE3C,UAAC,KAAD,CAAQY,eAAe,gBAAgBF,KAAK,OAA5C,WACE,qBACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAMK,MAAM,UAAZ,SAAuB3B,KACvB,SAAC,KAAD,CAAM2B,MAAM,YAAZ,SAAyB5B,YAKlC,E,oGCtCD,SAASiC,EAAT,GAA4D,IAAnCC,EAAkC,EAA1CC,KAAQD,SACvB,OACE,SAAC,KAAD,CAAKf,EAAE,IAAIG,QAAQ,KAAKc,YAAY,WAAWf,YAAY,MAA3D,SACGa,GAGN,CAqED,MAnEA,YAaoB,IAAD,IAZjBtB,MACED,EAWe,EAXfA,IACA0B,EAUe,EAVfA,UACAC,EASe,EATfA,MACA9B,EAQe,EARfA,KAQe,IAPfC,MAASX,EAOM,EAPNA,MAAOC,EAOD,EAPCA,KAChBwC,EAMe,EANfA,MAMe,IALfC,QAAWlC,EAKI,EALJA,WAAYC,EAKR,EALQA,KACvBkC,EAIe,EAJfA,MACAC,EAGe,EAHfA,OACG9B,GAEY,YACjB,EAAwBf,EAAU,CAAEC,MAAAA,EAAOC,KAAAA,IAAnCE,EAAR,EAAQA,MAAOD,EAAf,EAAeA,KAEf,OADA2C,QAAQC,IAAI,CAAEhC,MAAAA,KAEZ,UAAC,KAAD,CACEE,MAAO,aACPC,GAAG,IACHC,KAAML,EACNM,IAAI,+BACJC,OAAO,SACPC,EAAE,IACFC,OAAO,KACPC,YAAY,MACZC,QAAQ,KACRC,KAAK,OACLC,QAAS,EAXX,WAaE,UAAC,KAAD,CAAQC,eAAgB,gBAAiBF,KAAK,OAA9C,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAQG,KAAK,KAAKC,IAAKrB,EAAYC,KAAMA,KACzC,SAAC,KAAD,CAASmB,KAAK,KAAd,SAAoBnB,QAEtB,SAAC,KAAD,CAAMqB,MAAM,WAAWb,GAAG,OAA1B,UACGc,EAAAA,EAAAA,GAAc,IAAPrB,EAAa,kBAGzB,UAAC,KAAD,CAAQsB,GAAG,IAAX,UACGW,IAAS,SAAC,KAAD,CAASf,KAAK,KAAd,SAAoBe,KAC9B,SAAC,KAAD,UAAOH,IACNC,IACC,SAAC,KAAD,CACEZ,IAAKY,EAAMM,aACXC,IAAI,GACJC,UAAW,UACXC,cAAe,SAGlBN,GAAUA,EAAO,IAAyB,UAAnBA,EAAO,GAAGO,OAChC,SAAChB,GAAD,UAAWS,EAAO,SAGtB,UAAC,KAAD,CAAQjB,eAAe,gBAAgBF,KAAK,OAA5C,WACE,UAAC,KAAD,CAAMO,GAAG,IAAIF,MAAM,WAAnB,UACGS,EADH,oEAGA,UAAC,KAAD,YACE,SAAC,KAAD,CAAMT,MAAM,UAAZ,SAAuB3B,KACvB,SAAC,KAAD,CAAM2B,MAAM,YAAZ,SAAyB5B,YAKlC,EC3ED,MAZA,YAG2C,IAAD,IAFxCkD,MAAAA,OAEwC,MAFhC,6CAEgC,EADxCC,EACwC,EADxCA,SAEA,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAYD,KACZ,SAAC,KAAD,CAAYtB,MAAM,WAAlB,SAA8BuB,MAGnC,E,uCCVKC,EAAM,gCACNC,GAAaC,EAAAA,EAAAA,eAAcF,GAC3BG,EAAgB,kBAAMC,EAAAA,EAAAA,YAAWH,EAAjB,ECoBtB,SAASI,EAAsB9C,EAAc+C,GAC3C,IAAMC,GAAQC,EAAAA,EAAAA,QAAiB,CAAC,GAG1BC,GAAgBD,EAAAA,EAAAA,SAAgB,GAEhCE,EAAyB,CAC7BC,WAAOC,EACP7B,UAAM6B,GAiBR,GAA0BC,EAAAA,EAAAA,aAbL,SAACC,EAAiBC,GACrC,OAAQA,EAAOlB,MACb,IAAK,UACH,OAAO,UAAKa,GACd,IAAK,UACH,OAAO,kBAAKA,GAAZ,IAA0B3B,KAAMgC,EAAOC,UACzC,IAAK,QACH,OAAO,kBAAKN,GAAZ,IAA0BC,MAAOI,EAAOC,UAC1C,QACE,OAAOF,EAEZ,GAEkDJ,GAAnD,eAAOI,EAAP,KAAcG,EAAd,KA6CA,OA3CAC,EAAAA,EAAAA,YAAU,WAER,GAAK3D,IAAOA,EAAI4D,SAAS,aAAzB,CAEAV,EAAcW,SAAU,EAExB,IAAMC,EAAS,yCAAG,8FAChBJ,EAAS,CAAEpB,KAAM,aAGbU,EAAMa,QAAQ7D,GAJF,uBAKd0D,EAAS,CAAEpB,KAAM,UAAWmB,QAAST,EAAMa,QAAQ7D,KALrC,mDAUS+D,MAAM/D,EAAK+C,GAVpB,WAURiB,EAVQ,QAWAC,GAXA,uBAYN,IAAIC,MAAMF,EAASG,YAZb,yBAeMH,EAASI,OAff,WAeR5C,EAfQ,OAgBdwB,EAAMa,QAAQ7D,GAAOwB,GACjB0B,EAAcW,QAjBJ,mDAmBdH,EAAS,CAAEpB,KAAM,UAAWmB,QAASjC,IAnBvB,sDAqBV0B,EAAcW,QArBJ,mDAuBdH,EAAS,CAAEpB,KAAM,QAASmB,QAAQ,EAAD,KAvBnB,0DAAH,qDA+Bf,OAJKK,IAIE,WACLZ,EAAcW,SAAU,CACzB,CArC4C,CAuC9C,GAAE,CAAC7D,IAEGuD,CACR,CAED,SAASc,EACPrE,EACA+C,GAEW,IADXuB,EACU,uDADH,OAED7B,EAAMG,IACZ,OAAOE,EAAY9C,EAAG,UAAMyC,EAAI8B,QAAQ,OAAQD,IAA1B,OAAkCtE,GAAQA,EAAK+C,EACtE,CAED,SAASyB,EACPxE,EACA+C,GAGI,IAFJuB,EAEG,uDAFI,OACPG,EACG,uDADS,GAEZ,GAA4BC,EAAAA,EAAAA,UAAY,CAAEC,OAAQ,KAAlD,eAAOA,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,EAAiBT,EACfrE,EAAG,iBAAayE,EAAb,mBAAiCI,GACpC9B,EACAuB,GAHM9C,EAAR,EAAQA,KAmBR,OAbAmC,EAAAA,EAAAA,YAAU,WACR,GAAKnC,IACLoD,GAAU,SAACG,GAAD,eAAC,kBACNA,GACAvD,GAFK,IAGRmD,OAAO,GAAD,eAAMI,EAAKJ,SAAX,OAAsBnD,EAAKmD,UAHzB,IAKNnD,EAAKmD,OAAOK,QAAUP,GAAW,CACnC,IAAIQ,EAAUC,YAAW,kBAAMJ,GAAQ,SAACC,GAAD,OAAUA,EAAON,CAAjB,GAAd,GAA2C,KACpE,OAAO,kBAAMU,aAAaF,EAAnB,CACR,CACF,GAAE,CAACzD,EAAMiD,IAEHE,CACR,CAGD,I,wCC5HA,SAASS,EASP7E,GAAyB,IAAD,EAAb8E,EAAa,uDAAJ,CAAC,EACfC,EAAI,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7CC,GAAE,kBAAQD,GAAR,IAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAC1CE,EAMF,CACFC,MAAO,CAAC,EACRC,QAAO,UACFH,GAELI,MAAK,UAAML,GACXM,OAAM,kBACDN,GADA,IAEH,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,IAENO,eAAgB,CAAC,GA9BK,WAgCD,OAANtF,QAAM,IAANA,OAAA,EAAAA,EAAQoE,SAAU,IAhCX,IAgCxB,2BAAuC,CAAC,IAA7BmB,EAA4B,QAC/BC,EAAK,IAAIC,KAAe,IAAVF,EAAGjG,MACjBoG,EAAOF,EAAGG,iBACVC,EAAQJ,EAAGK,cACXC,EAAMN,EAAGO,YACTC,EAAOR,EAAGS,cAChBhB,EAAMC,MAAMQ,IAAST,EAAMC,MAAMQ,IAAS,GAAK,EAC/CT,EAAME,OAAOS,IAAUX,EAAME,OAAOS,IAAU,GAAK,EACnDX,EAAMG,KAAKU,IAAQb,EAAMG,KAAKU,IAAQ,GAAK,EAC3Cb,EAAMI,MAAMW,IAASf,EAAMI,MAAMW,IAAS,GAAK,EAC/Cf,EAAMK,eAAeC,EAAG/F,IAAMb,EAAU4G,EAAGhG,MAC5C,CA3CuB,+BA4CxB,IAAM+F,GAAc,OAAOY,OAAOC,OAAOlB,EAAMK,iBAC/C,MAAO,CACLJ,MAAO,CACLkB,SAAU,EAAC,QAEPnF,MAAK,OAAKiF,OAAOC,OAAOlB,EAAMC,SAC3BJ,IAGPuB,QAAO,OAAKH,OAAOI,KAAKrB,EAAMC,SAEhCC,OAAQ,CACNiB,SAAU,EAAC,QAAEnF,MAAK,OAAKiF,OAAOC,OAAOlB,EAAME,UAAaL,IACxDuB,QAAO,QAAKE,EAAAA,EAAAA,OAEdnB,KAAM,CACJgB,SAAU,EAAC,QAAEnF,MAAK,OAAKiF,OAAOC,OAAOlB,EAAMG,QAAWN,IACtDuB,OAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAE/ChB,MAAO,CACLe,SAAU,EAAC,QAAEnF,MAAK,OAAKiF,OAAOC,OAAOlB,EAAMI,SAAYP,IACvDuB,QAAO,OAAKH,OAAOI,KAAKrB,EAAMI,SAEhCC,eAAgB,CACdc,SAAU,CACR,CACEnF,MAAK,OAAKqE,EAAekB,KAAI,qBAAGzH,KAAH,KAC7BiD,MAAO,iFACPyE,gBAAiB,uBACjBvF,YAAa,iBACbf,YAAa,GAEf,CACEc,MAAK,OAAKqE,EAAekB,KAAI,qBAAG1H,IAAH,KAC7BkD,MAAO,iFACPyE,gBAAiB,wBACjBvF,YAAa,kBACbf,YAAa,IAGjBkG,QAAO,OAAKH,OAAOI,KAAKrB,EAAMK,kBAGnC,CCvCD,SAASoB,EAAT,GAQI,IAAD,oBAPDpF,EAOC,EAPDA,QACAqF,EAMC,EANDA,QACAC,EAKC,EALDA,SAMA,OACE,UAAC,KAAD,CAAQC,SAAS,SAAC,KAAD,IAAjB,WACE,UAAC,KAAD,CACEC,QAAS,CAAEC,KAAM,EAAGC,GAAI,GACxB1G,QAAS,EACTC,eAAe,gBACf0G,EAAE,OAJJ,WAME,UAAC,KAAD,YACE,SAAC,KAAD,oDACA,SAAC,KAAD,qCACG3F,QADH,IACGA,GADH,UACGA,EAAS4F,gBADZ,aACG,EAAmBP,eADtB,QACiCA,SADjC,QAC4C,YAG9C,UAAC,KAAD,YACE,SAAC,KAAD,wFACA,SAAC,KAAD,qCACGrF,QADH,IACGA,GADH,UACGA,EAAS4F,gBADZ,aACG,EAAmBN,gBADtB,QACkCA,SADlC,QAC8C,YAGhD,UAAC,KAAD,YACE,SAAC,KAAD,gEACA,SAAC,KAAD,2BAAatF,QAAb,IAAaA,GAAb,UAAaA,EAAS4F,gBAAtB,aAAa,EAAmBC,qBAAhC,QAAiD,YAEnD,UAAC,KAAD,YACE,SAAC,KAAD,kFACA,SAAC,KAAD,2BAAa7F,QAAb,IAAaA,GAAb,UAAaA,EAAS4F,gBAAtB,aAAa,EAAmBE,mBAAhC,QAA+C,eAInD,UAAC,KAAD,CACEN,QAAS,EACTxG,QAAS,EACTC,eAAe,gBACf0G,EAAE,OAJJ,WAME,UAAC,KAAD,YACE,SAAC,KAAD,oBACA,SAAC,KAAD,WAAa,SAAC,EAAD,CAAavI,MAAK,OAAE4C,QAAF,IAAEA,OAAF,EAAEA,EAAS+F,eAE5C,UAAC,KAAD,YACE,SAAC,KAAD,kFACA,SAAC,KAAD,WAAa,SAAC,EAAD,CAAa3I,MAAK,OAAE4C,QAAF,IAAEA,OAAF,EAAEA,EAASgG,uBAKnD,CAED,SAASC,EAAT,GAA6E,IAA1DvF,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,SACxB,OACE,UAAC,KAAD,CAAQrC,MAAM,aAAaS,KAAK,OAAhC,WACE,SAAC,KAAD,CAASG,KAAK,KAAd,SAAoBwB,IACnBC,IAGN,CAED,SAASuF,EAAT,GAAgF,IAA7DvG,EAA4D,EAA5DA,KACXgE,GAAQwC,EAAAA,EAAAA,UAAQ,WACpB,IAD0B,EACpBrD,EAAS,CACbsD,OAAQ,EACRC,WAAY,EACZC,YAAa,EACbhB,SAAU,EACViB,QAAS,EACTC,KAAM,EACNC,WAAe,OAAJ9G,QAAI,IAAJA,OAAA,EAAAA,EAAMmD,SAAU,IAAI,GAC/B4D,YAAgB,OAAJ/G,QAAI,IAAJA,OAAA,EAAAA,EAAMmD,SAAU,IAAI,GAChC6D,eAAmB,OAAJhH,QAAI,IAAJA,OAAA,EAAAA,EAAMmD,SAAU,IAAI,IAVX,WAYF,OAAJnD,QAAI,IAAJA,OAAA,EAAAA,EAAMmD,SAAU,IAZV,IAY1B,2BAAwC,CAAC,IAA9B1E,EAA6B,QACtC,EAAwBf,EAAUe,EAAMH,OAAhCR,EAAR,EAAQA,MAAOD,EAAf,EAAeA,KACfsF,EAAOsD,QAAU5I,EAAOC,EACxBqF,EAAOuD,YAAc7I,EACrBsF,EAAOwD,aAAe7I,EACtBqF,EAAOwC,UAAYlH,EAAMwI,cACzB9D,EAAOyD,SAAWM,OAAOzI,EAAM0I,UAC/BhE,EAAO0D,MAAQpI,EAAMyB,UACrB,IAAckH,EAAU1J,EAAUyF,EAAO4D,UAAUzI,OAA3CT,KACOwJ,EAAW3J,EAAUyF,EAAO6D,aAAa1I,OAAhDR,MACJW,EAAMyB,UAAYiD,EAAO2D,SAAS5G,YACpCiD,EAAO2D,SAAWrI,GAEhBZ,EAAOuJ,IACTjE,EAAO4D,UAAYtI,GAEjBX,EAAQuJ,IACVlE,EAAO6D,aAAevI,EAEzB,CA/ByB,+BAgC1B,OAAO0E,CACR,GAAE,CAACnD,IAEEuB,GAAU+F,EAAAA,EAAAA,IAAS,CAAEC,QAAS,CAAEC,OAAQ,CAAEC,SAAS,MACnDC,GAAsBJ,EAAAA,EAAAA,IAAS,CACnCrH,YAAa,kBACbuF,gBAAiB,uBACjBtG,YAAa,IAGTyI,EAAS/D,EAAS5D,GAAQ,CAAC,EAAG0H,GAEpC,OACE,UAAC,KAAD,CAAME,QAAS,WAAYC,UAAQ,EAAC7B,EAAE,OAAtC,WACE,UAAC,KAAD,CAASA,EAAE,OAAX,WACE,SAAC,KAAD,4EACA,SAAC,KAAD,+EAEF,UAAC,KAAD,CAAWA,EAAE,OAAb,WACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAQrH,MAAM,aAAaqH,EAAE,OAAOrG,GAAG,IAAIN,QAAS,EAApD,WACE,UAAC,KAAD,CACEwG,QAAS,CAAEC,KAAM,EAAGgC,GAAI,GACxBzI,QAAS,EACTC,eAAe,gBACfF,KAAK,OAJP,WAME,SAAC,EAAD,UAAa4E,EAAMyC,UACnB,SAAC,EAAD,CAAY1F,MAAM,2CAAlB,SAAgCiD,EAAM0C,cACtC,SAAC,EAAD,CAAY3F,MAAM,2CAAlB,SAAgCiD,EAAM2C,eACtC,UAAC,KAAD,YACE,SAAC,KAAD,wFACA,SAAC,KAAD,UAAa3C,EAAM2B,eAErB,UAAC,KAAD,YACE,SAAC,KAAD,4EACA,SAAC,KAAD,UAAa3B,EAAM6C,WAErB,UAAC,KAAD,YACE,SAAC,KAAD,gEACA,SAAC,KAAD,UAAa7C,EAAM4C,gBAGtB5C,EAAM8C,WACL,SAACR,EAAD,CAASvF,MAAM,8IAAf,UACE,SAAC,EAAD,CAAWtC,MAAOuF,EAAM8C,aAI3B9C,EAAM+C,YACL,SAACT,EAAD,CAASvF,MAAM,iKAAf,UACE,SAAC,EAAD,CAAWtC,MAAOuF,EAAM+C,cAI3B/C,EAAMgD,eACL,SAACV,EAAD,CAASvF,MAAM,uKAAf,UACE,SAAC,EAAD,CAAWtC,MAAOuF,EAAMgD,uBAKhC,SAAC,KAAD,WACE,SAACe,EAAD,CAAgB/H,KAAM2H,EAAQpG,QAASA,WAKhD,CAED,SAASyG,EAAT,GAII,IAHFhI,EAGC,EAHDA,KAIMgE,GAAQwC,EAAAA,EAAAA,UAAQ,WACpB,IAD0B,EACpBrD,EAAS,CACbsD,OAAQ,EACRC,WAAY,EACZC,YAAa,EACbI,YAAgB,OAAJ/G,QAAI,IAAJA,OAAA,EAAAA,EAAMmD,SAAU,IAAI,GAChC6D,eAAmB,OAAJhH,QAAI,IAAJA,OAAA,EAAAA,EAAMmD,SAAU,IAAI,IANX,WAQF,OAAJnD,QAAI,IAAJA,OAAA,EAAAA,EAAMmD,SAAU,IARV,IAQ1B,2BAAwC,CAAC,IAA9B1E,EAA6B,QACtC,EAAwBf,EAAUe,EAAMH,OAAhCT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdqF,EAAOsD,QAAU5I,EAAOC,EACxBqF,EAAOuD,YAAc7I,EACrBsF,EAAOwD,aAAe7I,EACtB,IAAcsJ,EAAU1J,EAAUyF,EAAO4D,UAAUzI,OAA3CT,KACOwJ,EAAW3J,EAAUyF,EAAO6D,aAAa1I,OAAhDR,MACJD,EAAOuJ,IACTjE,EAAO4D,UAAYtI,GAEjBX,EAAQuJ,IACVlE,EAAO6D,aAAevI,EAEzB,CArByB,+BAsB1B,OAAO0E,CACR,GAAE,CAACnD,IAEEuB,GAAU+F,EAAAA,EAAAA,IAAS,CAAEC,QAAS,CAAEC,OAAQ,CAAEC,SAAS,MACnDQ,GAAwBX,EAAAA,EAAAA,IAAS,CACrCrH,YAAa,kBACbuF,gBAAiB,uBACjBtG,YAAa,IAGTyI,EAAS/D,EAAS5D,GAAQ,CAAC,EAAGiI,GAEpC,OACE,UAAC,KAAD,CAAML,QAAS,WAAYC,UAAQ,EAAC7B,EAAE,OAAtC,WACE,UAAC,KAAD,YACE,SAAC,KAAD,4EACA,SAAC,KAAD,+EAEF,UAAC,KAAD,YACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAQrH,MAAM,aAAaqH,EAAE,OAAOrG,GAAG,IAAIN,QAAS,EAApD,WACE,UAAC,KAAD,CACEwG,QAAS,EACTxG,QAAS,EACTC,eAAe,gBACfF,KAAK,OAJP,WAME,SAAC,EAAD,UAAa4E,EAAMyC,UACnB,SAAC,EAAD,CAAY1F,MAAM,2CAAlB,SAAgCiD,EAAM0C,cACtC,SAAC,EAAD,CAAY3F,MAAM,2CAAlB,SAAgCiD,EAAM2C,iBAGvC3C,EAAM+C,YACL,SAACT,EAAD,CAASvF,MAAM,iKAAf,UACE,SAAC,EAAD,CAAa9C,QAAS+F,EAAM+C,cAI/B/C,EAAMgD,eACL,SAACV,EAAD,CAASvF,MAAM,uKAAf,UACE,SAAC,EAAD,CAAa9C,QAAS+F,EAAMgD,uBAKpC,SAAC,KAAD,WACE,SAACe,EAAD,CAAgB/H,KAAM2H,EAAQpG,QAASA,WAKhD,CASD,SAASwG,EAAT,GAGyB,IAAD,IAFtB/H,KAAQiE,EAEc,EAFdA,MAAOC,EAEO,EAFPA,OAAQC,EAED,EAFCA,KAAMC,EAEP,EAFOA,MAAOC,EAEd,EAFcA,eACpC9C,EACsB,EADtBA,QAEA,OACE,iCACE,UAAC,KAAD,CAAQyE,EAAE,OAAV,WACE,SAAC,KAAD,CAASzG,KAAK,KAAd,0DACA,SAAC,KAAD,CAAKS,KAAMiE,EAAO1C,QAASA,QAE7B,UAAC,KAAD,CAAQyE,EAAE,OAAV,WACE,SAAC,KAAD,CAASzG,KAAK,KAAd,sEACA,SAAC,KAAD,CAAKS,KAAMkE,EAAQ3C,QAASA,QAE9B,UAAC,KAAD,CAAQyE,EAAE,OAAV,WACE,SAAC,KAAD,CAASzG,KAAK,KAAd,oDACA,SAAC,KAAD,CAAKS,KAAMmE,EAAM5C,QAASA,QAE5B,UAAC,KAAD,CAAQyE,EAAE,OAAV,WACE,SAAC,KAAD,CAASzG,KAAK,KAAd,0DACA,SAAC,KAAD,CAAOS,KAAMoE,EAAO7C,QAASA,QAE/B,UAAC,KAAD,CAAQyE,EAAE,OAAV,WACE,SAAC,KAAD,CAASzG,KAAK,KAAd,mDACA,SAAC,KAAD,CAAMS,KAAMqE,SAInB,CAUD,SAAS6D,EAAT,GAII,IAAD,MAHDC,OAAUtK,EAGT,EAHSA,KAAMC,EAGf,EAHeA,MAIhB,OACE,UAAC,KAAD,CAAQuB,QAAS,EAAjB,WACE,SAAC,KAAD,CAAM+I,SAAS,OAAOxJ,GAAG,OAAOa,MAAM,YAAtC,SACG5B,KAEH,SAAC,KAAD,CAAMuK,SAAS,OAAOxJ,GAAG,OAAOa,MAAM,UAAtC,SACG3B,KAEH,SAAC,KAAD,CAAMsK,SAAS,OAAOxJ,GAAG,OAAOa,MAAM,WAAtC,mBACG5B,EAAOC,SADV,QACmB,UAIxB,CASD,SAASuK,EAAT,GAMkC,IALhCjK,EAK+B,EAL/BA,KACAD,EAI+B,EAJ/BA,WACAI,EAG+B,EAH/BA,GACAyC,EAE+B,EAF/BA,SAE+B,IAD/BzB,KAAAA,OAC+B,MADxB,KACwB,EAC/B,OACE,UAAC,KAAD,CAAQX,GAAG,IAAIC,KAAI,gCAA2BN,GAAMQ,OAAO,SAA3D,WACE,SAAC,KAAD,CAAQQ,KAAMA,EAAMnB,KAAMA,EAAMoB,IAAKrB,KACrC,SAAC,KAAD,CACEiK,SAAmB,OAAT7I,EAAgB,OAAS,OACnCX,GAAG,IACH0J,KAAM,CAAExC,KAAM,QAASgC,GAAI,QAASS,GAAI,SACxCC,aAAc,WACdC,SAAS,SALX,SAOGrK,IAEF4C,IAGN,CAKD,SAAS0H,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,OACpB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAOf,QAAQ,SAASrI,KAAM,CAAEuG,KAAM,KAAMgC,GAAI,KAAMS,GAAI,MAA1D,WACE,SAAC,KAAD,6MACA,SAAC,KAAD,WACE,UAAC,EAAAK,GAAD,YACE,SAAC,EAAAC,GAAD,wFACA,SAAC,EAAAA,GAAD,CAAIC,WAAS,EAACrJ,MAAM,YAApB,gBAGA,SAAC,EAAAoJ,GAAD,CAAIC,WAAS,EAACrJ,MAAM,UAApB,gBAGA,SAAC,EAAAoJ,GAAD,CAAIC,WAAS,EAAb,kDAGJ,SAAC,KAAD,WACG,OAAI7D,OAAOS,QAAQiD,IACjBI,MAAK,iCAAKC,GAAL,0BAAcC,GAAd,kBAAqBA,EAAEpL,KAAOoL,EAAEnL,OAASkL,EAAEnL,KAAOmL,EAAElL,MAApD,IACLyH,KAAI,+BAAEhH,EAAF,YAAQH,EAAR,EAAQA,KAAMD,EAAd,EAAcA,WAAYL,EAA1B,EAA0BA,MAAOD,EAAjC,EAAiCA,KAAjC,OACH,UAAC,EAAA+K,GAAD,YACE,SAAC,EAAAM,GAAD,WACE,SAACb,EAAD,CAAMjK,KAAMA,EAAMD,WAAYA,EAAYI,GAAIA,OAEhD,SAAC,EAAA2K,GAAD,UAAKrL,KACL,SAAC,EAAAqL,GAAD,UAAKpL,KACL,SAAC,EAAAoL,GAAD,UAAKpL,EAAQD,MANNU,EADN,UAchB,CAED,SAAS4K,EAAT,GAA0C,IAAD,MAAxBxD,EAAwB,EAAxBA,SACf,GAA4CzC,EAAAA,EAAAA,UAAiB,CAAC,GAA9D,eAAOkG,EAAP,KAAuBC,EAAvB,KACA,GAAwCnG,EAAAA,EAAAA,UAAS,GAAjD,eAAOoG,EAAP,KAAqBC,EAArB,KACQvJ,EAAS6C,EAAM,sCACO,OAAR8C,QAAQ,IAARA,OAAA,EAAAA,EAAUxC,SAAU,IAAImG,UADvB,aACF,EAAwC/K,SAC3DsD,EACA,OAHM7B,KAMFwJ,GAAehD,EAAAA,EAAAA,UAAQ,WAO3B,IANA,IAAMrD,EAAS,CACbtF,MAAK,kBAAOuL,EAAe,IAAM,CAAEvL,KAAM,IAArC,IAA2CU,GAAI,MACnDT,OAAM,kBAAOsL,EAAe,IAAM,CAAEtL,MAAO,IAAtC,IAA4CS,GAAI,MACrDkL,OAAM,kBAAOL,EAAe,IAAM,CAAEvL,KAAM,EAAGC,MAAO,IAA/C,IAAqDS,GAAI,OAGhE,MAAwB0G,OAAOS,QAAQ0D,GAAvC,eAAwD,CAAnD,sBAAO7K,EAAP,KAAWmL,EAAX,KACCA,EAAI5L,MAAQqF,EAAOrF,MAAMA,QAC3BqF,EAAOrF,OAAP,kBAAoB4L,GAApB,IAAyBnL,GAAAA,KAEvBmL,EAAI7L,KAAOsF,EAAOtF,KAAKA,OACzBsF,EAAOtF,MAAP,kBAAmB6L,GAAnB,IAAwBnL,GAAAA,KAEtBmL,EAAI7L,KAAO6L,EAAI5L,MAAQqF,EAAOsG,MAAM5L,KAAOsF,EAAOsG,MAAM3L,QAC1DqF,EAAOsG,OAAP,kBAAoBC,GAApB,IAAyBnL,GAAAA,IAE5B,CACD,OAAO4E,CACR,GAAE,CAACiG,IA2BJ,OAzBAjH,EAAAA,EAAAA,YAAU,WACR,GAAKnC,EAAL,CACAqJ,GAAkB,SAAC9F,GAEjB,IADA,IAAMJ,GAAM,UAAQI,GACpB,MAAwB0B,OAAOS,QAAQ1F,EAAKmD,QAA5C,eAAqD,CAAhD,sBAAO5E,EAAP,KAAWoL,EAAX,KACEC,QAAQC,IAAI1G,EAAQ5E,KACvB4E,EAAO5E,GAAM,CACXT,MAAO,EACPD,KAAM,EACNM,WAAY,GACZC,KAAM,KAGV+E,EAAO5E,GAAIT,OAASoJ,OAAOyC,EAAIG,KAAO,GACtC3G,EAAO5E,GAAIV,MAAQqJ,OAAOyC,EAAIG,KAAO,GAErC3G,EAAO5E,GAAIJ,WAAawL,EAAIxL,WAC5BgF,EAAO5E,GAAIH,KAAOuL,EAAIvL,IACvB,CACD,OAAO+E,CACR,IACD,IAAIM,EAAUC,YAAW,kBAAM6F,GAAgB,SAAChG,GAAD,OAAUA,EAAO,CAAjB,GAAtB,GAA2C,KACpE,OAAO,kBAAMI,aAAaF,EAAnB,CArBU,CAsBlB,GAAE,CAACzD,KAGF,UAAC,KAAD,CAAQ+J,SAAS,WAAjB,WACW,OAARpE,QAAQ,IAARA,GAAA,UAAAA,EAAUxC,cAAV,eAAkBK,QAAS8F,IAC1B,SAAC,KAAD,CAAU/J,KAAK,KAAKyK,iBAAe,EAAChE,EAAE,UAGxC,UAAC,KAAD,CACEH,QAAS,CAAEiC,GAAI,EAAGhC,KAAM,GACxBzG,QAAS,EACTC,eAAe,gBACfF,KAAK,OAJP,aAMMoK,EAAa3L,KAAKU,KACpB,UAAC,KAAD,YACE,SAAC,KAAD,wHACA,SAAC,KAAD,WACE,SAAC8J,EAAD,CACEjK,KAAMoL,EAAa3L,KAAKO,KACxBD,WAAYqL,EAAa3L,KAAKM,WAC9BI,GAAIiL,EAAa3L,KAAKU,QAG1B,SAAC,KAAD,CAAcoB,GAAG,KAAjB,UACE,SAACuI,EAAD,CAAqBC,OAAQqB,EAAa3L,eAI5C2L,EAAa1L,MAAMS,KACrB,UAAC,KAAD,YACE,SAAC,KAAD,8HACA,SAAC,KAAD,WACE,SAAC8J,EAAD,CACEjK,KAAMoL,EAAa1L,MAAMM,KACzBD,WAAYqL,EAAa1L,MAAMK,WAC/BI,GAAIiL,EAAa1L,MAAMS,QAG3B,SAAC,KAAD,CAAcoB,GAAG,KAAjB,UACE,SAACuI,EAAD,CAAqBC,OAAQqB,EAAa1L,gBAI5C0L,EAAaC,MAAMlL,KACrB,UAAC,KAAD,YACE,SAAC,KAAD,wHACA,SAAC,KAAD,WACE,SAAC8J,EAAD,CACEjK,KAAMoL,EAAaC,MAAMrL,KACzBD,WAAYqL,EAAaC,MAAMtL,WAC/BI,GAAIiL,EAAaC,MAAMlL,QAG3B,SAAC,KAAD,CAAcoB,GAAG,KAAjB,UACE,SAACuI,EAAD,CAAqBC,OAAQqB,EAAaC,iBAMzC,OAAR9D,QAAQ,IAARA,GAAA,UAAAA,EAAUxC,cAAV,eAAkBK,SAAU8F,IAC3B,SAACZ,EAAD,CAAYC,OAAQS,MAI3B,CAID,SAASa,EAAT,GAQI,IAAD,YAPD5J,EAOC,EAPDA,QACAlC,EAMC,EANDA,WACAsI,EAKC,EALDA,OAMA,OACE,UAAC,KAAD,CACEpH,QAAS,CAAEyG,KAAM,EAAGC,GAAI,EAAG+B,GAAI,IAC/BiC,SAAS,SACTG,IAAI,IACJC,GAAG,QACHC,OAAO,OACPC,GAAG,IACHC,GAAG,IACHC,GAAI,CAAEzE,KAAM,EAAGC,GAAI,EAAG+B,GAAI,GAC1B9B,EAAE,OACF1G,eAAe,SAVjB,WAYE,SAAC,KAAD,CACElB,KAAMiC,EAAQjC,KACdmB,KAAM,CAAEuG,KAAM,KAAMgC,GAAI,OACxBtI,IACS,OAAPa,QAAO,IAAPA,GAAA,UAAAA,EAASmK,cAAT,mBAAiBxK,YAAjB,SAAuByK,KAAvB,4CACkCpK,QADlC,IACkCA,GADlC,UACkCA,EAASmK,cAD3C,iBACkC,EAAiBxK,YADnD,aACkC,EAAuByK,KADzD,wCAEItM,KAGR,UAAC,KAAD,YACE,SAAC,KAAD,CAASoB,KAAM,CAAEuG,KAAM,KAAMC,GAAI,MAAjC,SAA0C1F,EAAQjC,QAClD,UAAC,KAAD,CAAQkB,eAAgB,gBAAiBF,KAAK,OAA9C,WACE,SAAC,EAAD,8BAAaiB,EAAQoG,cAArB,QAA+BA,SAA/B,QAAyC,SACzC,UAAC,KAAD,YACE,SAAC,KAAD,oDACA,SAAC,KAAD,WACGiE,EAAAA,EAAAA,GAAQrK,EAAQsK,UACbjL,EAAAA,EAAAA,GAAyB,IAAlBW,EAAQsK,QAAgB,YAC/B,mBAOjB,CAxjBDC,EAAAA,GAAAA,SACEC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,IAiqBF,MAjHA,WAAkB,IAAD,gCACf,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMjN,GAAKkN,EAAAA,EAAAA,GAAYD,EAAaE,IAAI,OAAS,IAEjD,EAAwB7I,EAAM,sBACbtE,IADTyB,EAAR,EAAQA,KAAM4B,EAAd,EAAcA,MAGR8D,EAAU1C,EAAU,gBACfzE,EADe,iBAExBsD,EACA,OAEI8D,EAAW3C,EAAU,gBAChBzE,EADgB,kBAEzBsD,EACA,OAGI8J,GAAgBnF,EAAAA,EAAAA,UACpB,+BAAMd,QAAN,IAAMA,GAAN,UAAMA,EAASvC,cAAf,aAAM,EAAiByI,QAAO,SAAC5M,EAAG6M,GAAJ,OAAU7M,EAAI6M,EAAEvN,MAAMV,IAAtB,GAA4B,EAA1D,GACA,CAAC8H,IAEGoG,GAAiBtF,EAAAA,EAAAA,UACrB,+BAAMb,QAAN,IAAMA,GAAN,UAAMA,EAAUxC,cAAhB,aAAM,EAAkByI,QAAO,SAAC5M,EAAG6M,GAAJ,OAAU7M,EAAI6M,EAAEvN,MAAMV,IAAtB,GAA4B,EAA3D,GACA,CAAC+H,IAIStF,GACRL,GAAQ,CACVmD,OAAQ,CACN9C,QAAS,CACPjC,MACU,OAARuH,QAAQ,IAARA,GAAA,UAAAA,EAAUxC,cAAV,mBAAkB4I,GAAG,UAArB,mBAAyB7N,cAAzB,eAAiCE,QAAjC,OACAsH,QADA,IACAA,GADA,UACAA,EAASvC,cADT,iBACA,EAAiB4I,GAAG,UADpB,iBACA,EAAwB7N,cADxB,aACA,EAAgCE,UANtC+E,OAAU9C,QAWZ,OACE,UAAC,KAAD,WACGuB,IACC,UAAC,KAAD,CAAQjD,MAAM,QAAd,WACE,UAAC,KAAD,8IAC0B,MACb,OAARgH,QAAQ,IAARA,GAAA,UAAAA,EAAUxC,cAAV,SAAkBK,QAAlB,OAA4BkC,QAA5B,IAA4BA,GAA5B,UAA4BA,EAASvC,cAArC,OAA4B,EAAiBK,UAC9C,mIAGJ,SAAC,KAAD,CAAM4E,SAAS,OAAO3I,MAAM,WAA5B,qeAMJ,SAACwK,EAAD,CACE5J,QAASA,EACTlC,YACU,OAARwH,QAAQ,IAARA,GAAA,UAAAA,EAAUxC,cAAV,mBAAkB4I,GAAG,UAArB,mBAAyB7N,cAAzB,eAAiCC,cAAjC,OACAuH,QADA,IACAA,GADA,UACAA,EAASvC,cADT,iBACA,EAAiB4I,GAAG,UADpB,iBACA,EAAwB7N,cADxB,aACA,EAAgCC,YAElCsI,OAAQkF,EAAgBG,KAG1B,UAAC,KAAD,CACElE,QAAS,eACTrI,KAAM,CAAEuG,KAAM,KAAMgC,GAAI,MACxBQ,KAAK,OACLtC,EAAE,OAJJ,WAME,UAAC,KAAD,CACE5G,KAAK,IACLkJ,KAAK,OACL0D,UAAU,OACVC,GAAI,CACFC,eAAgB,OAChB,sBAAuB,CAAEzE,QAAS,QAClC0E,wBAAyB,SAE3B5B,GAAG,IATL,WAWE,SAAC,KAAD,8CACA,SAAC,KAAD,8CACA,SAAC,KAAD,kFACA,SAAC,KAAD,2CAEF,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC9E,EAAD,CACEpF,QAASA,EACTqF,QAAO,OAAEA,QAAF,IAAEA,GAAF,UAAEA,EAASvC,cAAX,aAAE,EAAiBK,OAC1BmC,SAAQ,OAAEA,QAAF,IAAEA,GAAF,UAAEA,EAAUxC,cAAZ,aAAE,EAAkBK,YAGhC,SAAC,KAAD,WACE,SAAC,KAAD,CAAQ7E,MAAM,aAAaiH,SAAS,SAAC,KAAD,IAApC,UACE,SAACW,EAAD,CAASvG,KAAM0F,SAGnB,SAAC,KAAD,WACE,SAAC,KAAD,CAAQ/G,MAAM,aAAaiH,SAAS,SAAC,KAAD,IAApC,UACE,SAACoC,EAAD,CAAUhI,KAAM2F,SAGpB,SAAC,KAAD,WACE,SAACwD,EAAD,CAAOxD,SAAUA,cAM5B,C,8ECnuBD,IAAM8F,EAAc,SAAC1M,GAAD,QAChB,gBAAgBqN,KAAKrN,GAAU,KAAO,IAAI,IAAM,CADhC,EAGduG,EAAY,iBAAM,CACtB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,WAZgB,C","sources":["components/atoms/BooleanText.tsx","utils/rating.ts","components/scope/CommentCard.tsx","components/scope/EntryCard.tsx","components/scope/RatingView.tsx","contexts/Api.tsx","hooks/useFetch.ts","utils/charts.ts","pages/Scope.tsx","utils/common.ts"],"sourcesContent":["function BooleanText({ value }: { value?: boolean }) {\n  return <>{value ? \"Да\" : \"Нет\"}</>;\n}\n\nexport default BooleanText;\n","import { Osnova } from \"types/osnova\";\n\nconst getRating = <T extends Pick<Osnova.Entry.Likes, \"count\" | \"summ\">>({\n  count,\n  summ,\n}: T) => {\n  let plus = summ;\n  let minus = count - plus;\n\n  if (summ < 0) {\n    plus = Math.abs(count - (count - summ) / 2);\n    minus = plus + summ * -1;\n  }\n\n  return { minus, plus };\n};\n\nexport { getRating };\n","import { Avatar, Heading, HStack, VStack, Text } from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\nimport { getRating } from \"utils/rating\";\n\ninterface CommentCardProps {\n  comment: Osnova.Comment.Comment;\n}\n\nfunction CommentCard({\n  comment: {\n    author: { avatar_url, name },\n    date,\n    likes: { count, summ },\n    id,\n    entry: { url },\n    html,\n  },\n}: CommentCardProps) {\n  const { minus, plus } = getRating({ count, summ });\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url + `?comment=${id}`}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        <Text dangerouslySetInnerHTML={{ __html: html }} />\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <span />\n        <HStack>\n          <Text color=\"red.300\">{minus}</Text>\n          <Text color=\"green.300\">{plus}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default CommentCard;\n","import {\n  Avatar,\n  Box,\n  Heading,\n  HStack,\n  Image,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { Osnova } from \"types/osnova\";\nimport { getRating } from \"utils/rating\";\n\ninterface EntryCardProps {\n  entry: Osnova.Entry.Entry;\n}\n\nfunction Tweet({ data: { markdown } }: Osnova.Entry.Block) {\n  return (\n    <Box p=\"3\" rounded=\"lg\" borderColor=\"gray.300\" borderWidth=\"1px\">\n      {markdown}\n    </Box>\n  );\n}\n\nfunction EntryCard({\n  entry: {\n    url,\n    hitsCount,\n    intro,\n    date,\n    likes: { count, summ },\n    cover,\n    subsite: { avatar_url, name },\n    title,\n    blocks,\n    ...entry\n  },\n}: EntryCardProps) {\n  const { minus, plus } = getRating({ count, summ });\n  console.log({ entry });\n  return (\n    <VStack\n      align={\"flex-start\"}\n      as=\"a\"\n      href={url}\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n      p=\"3\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      minW=\"100%\"\n      spacing={3}\n    >\n      <HStack justifyContent={\"space-between\"} minW=\"100%\">\n        <HStack>\n          <Avatar size=\"xs\" src={avatar_url} name={name} />\n          <Heading size=\"sm\">{name}</Heading>\n        </HStack>\n        <Text color=\"gray.400\" as=\"time\">\n          {format(date * 1000, \"dd.LL.yy\")}\n        </Text>\n      </HStack>\n      <VStack pl=\"8\">\n        {title && <Heading size=\"sm\">{title}</Heading>}\n        <Text>{intro}</Text>\n        {cover && (\n          <Image\n            src={cover.thumbnailUrl}\n            alt=\"\"\n            objectFit={\"contain\"}\n            pointerEvents={\"none\"}\n          />\n        )}\n        {blocks && blocks[0] && blocks[0].type === \"tweet\" && (\n          <Tweet {...blocks[0]} />\n        )}\n      </VStack>\n      <HStack justifyContent=\"space-between\" minW=\"100%\">\n        <Text pl=\"8\" color=\"gray.400\">\n          {hitsCount} просмотров\n        </Text>\n        <HStack>\n          <Text color=\"red.300\">{minus}</Text>\n          <Text color=\"green.300\">{plus}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default EntryCard;\n","import { Stat, StatLabel, StatNumber } from \"@chakra-ui/react\";\nimport { PropsWithChildren } from \"react\";\n\nfunction RatingView({\n  label = \"Рейтинг\",\n  children,\n}: PropsWithChildren<{ label?: string }>) {\n  return (\n    <Stat>\n      <StatLabel>{label}</StatLabel>\n      <StatNumber color=\"gray.500\">{children}</StatNumber>\n    </Stat>\n  );\n}\n\nexport default RatingView;\n","import { useContext } from \"react\";\nimport { createContext, PropsWithChildren } from \"react\";\n\nconst api = \"https://api.tjournal.ru/v2.31\";\nconst ApiContext = createContext(api);\nconst useApiContext = () => useContext(ApiContext);\n\nfunction ApiProvider({ children }: PropsWithChildren) {\n  return <ApiContext.Provider value={api}>{children}</ApiContext.Provider>;\n}\n\nexport { useApiContext };\nexport default ApiProvider;\n","import { useApiContext } from \"contexts/Api\";\nimport { useEffect, useReducer, useRef, useState } from \"react\";\n\ninterface State<T> {\n  data?: T;\n  error?: Error;\n}\n\ntype Cache<T> = { [url: string]: T };\n\n// discriminated union type\ntype Action<T> =\n  | { type: \"loading\" }\n  | { type: \"fetched\"; payload: T }\n  | { type: \"error\"; payload: Error };\n\n/**\n * Fetches data by provided url\n *\n * https://usehooks-ts.com/react-hook/use-fetch\n *\n * @param url url to request\n * @param options fetch request init (optional)\n * @returns state of loading with payload\n */\nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({});\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case \"loading\":\n        return { ...initialState };\n      case \"fetched\":\n        return { ...initialState, data: action.payload };\n      case \"error\":\n        return { ...initialState, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url || url.includes(\"undefined\")) return;\n\n    cancelRequest.current = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"loading\" });\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\n        return;\n      }\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const data = (await response.json()) as T;\n        cache.current[url] = data;\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"fetched\", payload: data });\n      } catch (error) {\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"error\", payload: error as Error });\n      }\n    };\n\n    void fetchData();\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nfunction useApi<T = unknown>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"2.31\"\n): State<T> {\n  const api = useApiContext();\n  return useFetch<T>(url ? `${api.replace(\"2.31\", apiV)}${url}` : url, options);\n}\n\nfunction useApiLazy<T extends { result: Array<unknown> }>(\n  url?: string,\n  options?: RequestInit,\n  apiV = \"2.31\",\n  inRequest = 50\n): T {\n  const [result, setResult] = useState<T>({ result: [] } as unknown as T);\n  const [offs, setOffs] = useState(0);\n  const { data } = useApi<T>(\n    url + `?count=${inRequest}&offset=${offs}`,\n    options,\n    apiV\n  );\n\n  useEffect(() => {\n    if (!data) return;\n    setResult((prev) => ({\n      ...prev,\n      ...data,\n      result: [...prev.result, ...data.result],\n    }));\n    if (data.result.length >= inRequest) {\n      let timeout = setTimeout(() => setOffs((prev) => prev + inRequest), 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [data, inRequest]);\n\n  return result;\n}\n\nexport { useApi, useApiLazy };\nexport default useFetch;\n","import type { ChartData } from \"chart.js\";\nimport { Osnova } from \"types/osnova\";\nimport { Common } from \"types/utils\";\nimport { getMonths } from \"./common\";\nimport { getRating } from \"./rating\";\n\ntype ActivityChartData = {\n  years: ChartData<\"bar\", number[], string>;\n  months: ChartData<\"bar\", number[], string>;\n  days: ChartData<\"bar\", number[], string>;\n  hours: ChartData<\"radar\", number[], string>;\n  ratingByEntity: ChartData<\"line\", number[], string>;\n};\n\nfunction getStats<\n  T extends {\n    result?: Array<\n      Common<\n        Osnova.Entry.EntriesResponse[\"result\"][0],\n        Osnova.Comment.CommentsResponse[\"result\"][0]\n      >\n    >;\n  }\n>(target: T, dsOpts = {}) {\n  const d = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0 };\n  const dd = { ...d, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0 };\n  const stats: {\n    years: Record<string, number>;\n    months: Record<string, number>;\n    days: Record<string, number>;\n    hours: Record<string, number>;\n    ratingByEntity: Record<string, { minus: number; plus: number }>;\n  } = {\n    years: {},\n    months: {\n      ...dd,\n    },\n    days: { ...d },\n    hours: {\n      ...d,\n      12: 0,\n      13: 0,\n      14: 0,\n      15: 0,\n      16: 0,\n      17: 0,\n      18: 0,\n      19: 0,\n      20: 0,\n      21: 0,\n      22: 0,\n      23: 0,\n    },\n    ratingByEntity: {},\n  };\n  for (const el of target?.result || []) {\n    const dt = new Date(el.date * 1000);\n    const year = dt.getUTCFullYear();\n    const month = dt.getUTCMonth();\n    const day = dt.getUTCDay();\n    const hour = dt.getUTCHours();\n    stats.years[year] = (stats.years[year] || 0) + 1;\n    stats.months[month] = (stats.months[month] || 0) + 1;\n    stats.days[day] = (stats.days[day] || 0) + 1;\n    stats.hours[hour] = (stats.hours[hour] || 0) + 1;\n    stats.ratingByEntity[el.id] = getRating(el.likes);\n  }\n  const ratingByEntity = [...Object.values(stats.ratingByEntity)];\n  return {\n    years: {\n      datasets: [\n        {\n          data: [...Object.values(stats.years)],\n          ...dsOpts,\n        },\n      ],\n      labels: [...Object.keys(stats.years)],\n    },\n    months: {\n      datasets: [{ data: [...Object.values(stats.months)], ...dsOpts }],\n      labels: [...getMonths()],\n    },\n    days: {\n      datasets: [{ data: [...Object.values(stats.days)], ...dsOpts }],\n      labels: [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\n    },\n    hours: {\n      datasets: [{ data: [...Object.values(stats.hours)], ...dsOpts }],\n      labels: [...Object.keys(stats.hours)],\n    },\n    ratingByEntity: {\n      datasets: [\n        {\n          data: [...ratingByEntity.map(({ minus }) => minus)],\n          label: \"Отрицательные\",\n          backgroundColor: \"rgba(229,62,62, 0.2)\",\n          borderColor: \"rgb(229,62,62)\",\n          borderWidth: 1,\n        },\n        {\n          data: [...ratingByEntity.map(({ plus }) => plus)],\n          label: \"Положительные\",\n          backgroundColor: \"rgba(72,187,120, 0.2)\",\n          borderColor: \"rgb(72,187,120)\",\n          borderWidth: 1,\n        },\n      ],\n      labels: [...Object.keys(stats.ratingByEntity)],\n    },\n  } as ActivityChartData;\n}\n\nexport { getStats, type ActivityChartData };\n","import {\n  Avatar,\n  Heading,\n  HStack,\n  Progress,\n  SimpleGrid,\n  StackDivider,\n  Stat,\n  StatHelpText,\n  StatLabel,\n  StatNumber,\n  Tab,\n  Table,\n  TableCaption,\n  TableContainer,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useConst,\n  VStack,\n} from \"@chakra-ui/react\";\nimport BooleanText from \"components/atoms/BooleanText\";\nimport CommentCard from \"components/scope/CommentCard\";\nimport EntryCard from \"components/scope/EntryCard\";\nimport RatingView from \"components/scope/RatingView\";\nimport { format, isValid } from \"date-fns\";\nimport { useApi, useApiLazy } from \"hooks/useFetch\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { PropsWithChildren, useMemo } from \"react\";\nimport { Bar, Line, Radar } from \"react-chartjs-2\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Osnova } from \"types/osnova\";\nimport { getTargetId } from \"utils/common\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  BarElement,\n  LineElement,\n  Filler,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { ActivityChartData, getStats } from \"utils/charts\";\nimport { getRating } from \"utils/rating\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Filler,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction Overview({\n  subsite,\n  entries,\n  comments,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  entries?: number;\n  comments?: number;\n}) {\n  return (\n    <VStack divider={<StackDivider />}>\n      <SimpleGrid\n        columns={{ base: 2, sm: 4 }}\n        spacing={3}\n        justifyContent=\"space-between\"\n        w=\"100%\"\n      >\n        <Stat>\n          <StatLabel>Постов</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.entries ?? entries ?? \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Комментариев</StatLabel>\n          <StatNumber>\n            {subsite?.counters?.comments ?? comments ?? \"N/A\"}\n          </StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписок</StatLabel>\n          <StatNumber>{subsite?.counters?.subscriptions ?? \"N/A\"}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подписчиков</StatLabel>\n          <StatNumber>{subsite?.counters?.subscribers ?? \"N/A\"}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n\n      <SimpleGrid\n        columns={2}\n        spacing={3}\n        justifyContent=\"space-between\"\n        w=\"100%\"\n      >\n        <Stat>\n          <StatLabel>Plus</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isPlus} />}</StatNumber>\n        </Stat>\n        <Stat>\n          <StatLabel>Подтвержден</StatLabel>\n          <StatNumber>{<BooleanText value={subsite?.isVerified} />}</StatNumber>\n        </Stat>\n      </SimpleGrid>\n    </VStack>\n  );\n}\n\nfunction StatCat({ label, children }: PropsWithChildren<{ label: string }>) {\n  return (\n    <VStack align=\"flex-start\" minW=\"100%\">\n      <Heading size=\"md\">{label}</Heading>\n      {children}\n    </VStack>\n  );\n}\n\nfunction Entries({ data }: { data: Osnova.Entry.EntriesResponse | undefined }) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingPlus: 0,\n      ratingMinus: 0,\n      comments: 0,\n      reposts: 0,\n      hits: 0,\n      mostHits: (data?.result || [])[0],\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      const { minus, plus } = getRating(entry.likes);\n      result.rating += plus - minus;\n      result.ratingPlus += plus;\n      result.ratingMinus += minus;\n      result.comments += entry.commentsCount;\n      result.reposts += Number(entry.isRepost);\n      result.hits += entry.hitsCount;\n      const { plus: pPlus } = getRating(result.mostLiked.likes);\n      const { minus: pMinus } = getRating(result.mostDisliked.likes);\n      if (entry.hitsCount > result.mostHits.hitsCount) {\n        result.mostHits = entry;\n      }\n      if (plus > pPlus) {\n        result.mostLiked = entry;\n      }\n      if (minus > pMinus) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  const options = useConst({ plugins: { legend: { display: false } } });\n  const entryDatasetOptions = useConst({\n    borderColor: \"rgb(237,137,54)\",\n    backgroundColor: \"rgba(237,137,54,0.4)\",\n    borderWidth: 1,\n  });\n\n  const charts = getStats(data || {}, entryDatasetOptions);\n\n  return (\n    <Tabs variant={\"enclosed\"} isFitted w=\"100%\">\n      <TabList w=\"100%\">\n        <Tab>Статистика</Tab>\n        <Tab>Активность</Tab>\n      </TabList>\n      <TabPanels w=\"100%\">\n        <TabPanel>\n          <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n            <SimpleGrid\n              columns={{ base: 2, md: 3 }}\n              spacing={1}\n              justifyContent=\"space-between\"\n              minW=\"100%\"\n            >\n              <RatingView>{stats.rating}</RatingView>\n              <RatingView label=\"Оценок [+]\">{stats.ratingPlus}</RatingView>\n              <RatingView label=\"Оценки [-]\">{stats.ratingMinus}</RatingView>\n              <Stat>\n                <StatLabel>Комментариев</StatLabel>\n                <StatNumber>{stats.comments}</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Просмотров</StatLabel>\n                <StatNumber>{stats.hits}</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Репостов</StatLabel>\n                <StatNumber>{stats.reposts}</StatNumber>\n              </Stat>\n            </SimpleGrid>\n            {stats.mostHits && (\n              <StatCat label=\"Наиболее просматриваемый\">\n                <EntryCard entry={stats.mostHits} />\n              </StatCat>\n            )}\n\n            {stats.mostLiked && (\n              <StatCat label=\"Наибольшее количество плюсов\">\n                <EntryCard entry={stats.mostLiked} />\n              </StatCat>\n            )}\n\n            {stats.mostDisliked && (\n              <StatCat label=\"Наибольшее количество минусов\">\n                <EntryCard entry={stats.mostDisliked} />\n              </StatCat>\n            )}\n          </VStack>\n        </TabPanel>\n        <TabPanel>\n          <ActivityCharts data={charts} options={options} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nfunction Comments({\n  data,\n}: {\n  data: Osnova.Comment.CommentsResponse | undefined;\n}) {\n  const stats = useMemo(() => {\n    const result = {\n      rating: 0,\n      ratingPlus: 0,\n      ratingMinus: 0,\n      mostLiked: (data?.result || [])[0],\n      mostDisliked: (data?.result || [])[0],\n    };\n    for (const entry of data?.result || []) {\n      const { plus, minus } = getRating(entry.likes);\n      result.rating += plus - minus;\n      result.ratingPlus += plus;\n      result.ratingMinus += minus;\n      const { plus: pPlus } = getRating(result.mostLiked.likes);\n      const { minus: pMinus } = getRating(result.mostDisliked.likes);\n      if (plus > pPlus) {\n        result.mostLiked = entry;\n      }\n      if (minus > pMinus) {\n        result.mostDisliked = entry;\n      }\n    }\n    return result;\n  }, [data]);\n\n  const options = useConst({ plugins: { legend: { display: false } } });\n  const commentDatasetOptions = useConst({\n    borderColor: \"rgb(49,130,206)\",\n    backgroundColor: \"rgba(49,130,206,0.4)\",\n    borderWidth: 1,\n  });\n\n  const charts = getStats(data || {}, commentDatasetOptions);\n\n  return (\n    <Tabs variant={\"enclosed\"} isFitted w=\"100%\">\n      <TabList>\n        <Tab>Статистика</Tab>\n        <Tab>Активность</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <VStack align=\"flex-start\" w=\"100%\" pl=\"2\" spacing={4}>\n            <SimpleGrid\n              columns={3}\n              spacing={1}\n              justifyContent=\"space-between\"\n              minW=\"100%\"\n            >\n              <RatingView>{stats.rating}</RatingView>\n              <RatingView label=\"Оценок [+]\">{stats.ratingPlus}</RatingView>\n              <RatingView label=\"Оценки [-]\">{stats.ratingMinus}</RatingView>\n            </SimpleGrid>\n\n            {stats.mostLiked && (\n              <StatCat label=\"Наибольшее количество плюсов\">\n                <CommentCard comment={stats.mostLiked} />\n              </StatCat>\n            )}\n\n            {stats.mostDisliked && (\n              <StatCat label=\"Наибольшее количество минусов\">\n                <CommentCard comment={stats.mostDisliked} />\n              </StatCat>\n            )}\n          </VStack>\n        </TabPanel>\n        <TabPanel>\n          <ActivityCharts data={charts} options={options} />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\n//#region Activity\n\ninterface ActivityChartsProps {\n  data: ActivityChartData;\n  options?: Object;\n}\n\nfunction ActivityCharts({\n  data: { years, months, days, hours, ratingByEntity },\n  options,\n}: ActivityChartsProps) {\n  return (\n    <>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По годам</Heading>\n        <Bar data={years} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По месяцам</Heading>\n        <Bar data={months} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По дням</Heading>\n        <Bar data={days} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">По часам</Heading>\n        <Radar data={hours} options={options} />\n      </VStack>\n      <VStack w=\"100%\">\n        <Heading size=\"md\">Оценки</Heading>\n        <Line data={ratingByEntity} />\n      </VStack>\n    </>\n  );\n}\n\n//#endregion\n\n//#region Total\n\ninterface TotalProps {\n  comments: Osnova.Comment.CommentsResponse;\n}\n\nfunction ShowRatingPlusMinus({\n  source: { plus, minus },\n}: {\n  source: { plus: number; minus: number };\n}) {\n  return (\n    <HStack spacing={2}>\n      <Text fontSize=\"16px\" as=\"span\" color=\"green.300\">\n        {plus}\n      </Text>\n      <Text fontSize=\"16px\" as=\"span\" color=\"red.300\">\n        {minus}\n      </Text>\n      <Text fontSize=\"16px\" as=\"span\" color=\"gray.500\">\n        {plus + minus ?? \"N/A\"}\n      </Text>\n    </HStack>\n  );\n}\n\ninterface UserProps {\n  name: string;\n  avatar_url: string;\n  id: number | string;\n  size?: \"sm\" | \"md\";\n}\n\nfunction User({\n  name,\n  avatar_url,\n  id,\n  children,\n  size = \"md\",\n}: PropsWithChildren<UserProps>) {\n  return (\n    <HStack as=\"a\" href={`https://tjournal.ru/u/${id}`} target=\"_blank\">\n      <Avatar size={size} name={name} src={avatar_url} />\n      <Text\n        fontSize={size === \"md\" ? \"18px\" : \"14px\"}\n        as=\"b\"\n        maxW={{ base: \"150px\", md: \"180px\", lg: \"200px\" }}\n        textOverflow={\"ellipsis\"}\n        overflow=\"hidden\"\n      >\n        {name}\n      </Text>\n      {children}\n    </HStack>\n  );\n}\n\ntype Liker = { minus: number; plus: number; name: string; avatar_url: string };\ntype Likers = Record<string, Liker>;\n\nfunction TotalTable({ likers }: { likers: Likers }) {\n  return (\n    <TableContainer>\n      <Table variant=\"simple\" size={{ base: \"sm\", md: \"md\", lg: \"lg\" }}>\n        <TableCaption>Статистика оценок по пользователям</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Пользователь</Th>\n            <Th isNumeric color=\"green.300\">\n              +\n            </Th>\n            <Th isNumeric color=\"red.300\">\n              -\n            </Th>\n            <Th isNumeric>Всего</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {[...Object.entries(likers)]\n            .sort(([_, a], [_0, b]) => b.plus + b.minus - (a.plus + a.minus))\n            .map(([id, { name, avatar_url, minus, plus }]) => (\n              <Tr key={id}>\n                <Td>\n                  <User name={name} avatar_url={avatar_url} id={id} />\n                </Td>\n                <Td>{plus}</Td>\n                <Td>{minus}</Td>\n                <Td>{minus + plus}</Td>\n              </Tr>\n            ))}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction Total({ comments }: TotalProps) {\n  const [commentsLikers, setCommentsLikers] = useState<Likers>({});\n  const [commentIndex, setCommentIndex] = useState(0);\n  const { data } = useApi<Osnova.Comment.LikersResponse>(\n    `/comment/likers/${(comments?.result || [])[commentIndex]?.id}`,\n    undefined,\n    \"1.9\"\n  );\n\n  const commentStats = useMemo(() => {\n    const result = {\n      plus: { ...(commentsLikers[0] || { plus: 0 }), id: \"0\" },\n      minus: { ...(commentsLikers[0] || { minus: 0 }), id: \"0\" },\n      total: { ...(commentsLikers[0] || { plus: 0, minus: 0 }), id: \"0\" },\n    };\n\n    for (const [id, cmt] of Object.entries(commentsLikers)) {\n      if (cmt.minus > result.minus.minus) {\n        result.minus = { ...cmt, id };\n      }\n      if (cmt.plus > result.plus.plus) {\n        result.plus = { ...cmt, id };\n      }\n      if (cmt.plus + cmt.minus > result.total.plus + result.total.minus) {\n        result.total = { ...cmt, id };\n      }\n    }\n    return result;\n  }, [commentsLikers]);\n\n  useEffect(() => {\n    if (!data) return;\n    setCommentsLikers((prev) => {\n      const result = { ...prev };\n      for (const [id, val] of Object.entries(data.result)) {\n        if (!Reflect.has(result, id)) {\n          result[id] = {\n            minus: 0,\n            plus: 0,\n            avatar_url: \"\",\n            name: \"\",\n          };\n        }\n        result[id].minus += Number(val.sign < 0);\n        result[id].plus += Number(val.sign > 0);\n\n        result[id].avatar_url = val.avatar_url;\n        result[id].name = val.name;\n      }\n      return result;\n    });\n    let timeout = setTimeout(() => setCommentIndex((prev) => prev + 1), 2000);\n    return () => clearTimeout(timeout);\n  }, [data]);\n\n  return (\n    <VStack position=\"relative\">\n      {comments?.result?.length > commentIndex && (\n        <Progress size=\"xs\" isIndeterminate w=\"100%\" />\n      )}\n\n      <SimpleGrid\n        columns={{ md: 2, base: 1 }}\n        spacing={5}\n        justifyContent=\"space-between\"\n        minW=\"100%\"\n      >\n        {!!+commentStats.plus.id && (\n          <Stat>\n            <StatLabel>Больше всего плюсов</StatLabel>\n            <StatNumber>\n              <User\n                name={commentStats.plus.name}\n                avatar_url={commentStats.plus.avatar_url}\n                id={commentStats.plus.id}\n              />\n            </StatNumber>\n            <StatHelpText pl=\"14\">\n              <ShowRatingPlusMinus source={commentStats.plus} />\n            </StatHelpText>\n          </Stat>\n        )}\n        {!!+commentStats.minus.id && (\n          <Stat>\n            <StatLabel>Больше всего минусов</StatLabel>\n            <StatNumber>\n              <User\n                name={commentStats.minus.name}\n                avatar_url={commentStats.minus.avatar_url}\n                id={commentStats.minus.id}\n              />\n            </StatNumber>\n            <StatHelpText pl=\"14\">\n              <ShowRatingPlusMinus source={commentStats.minus} />\n            </StatHelpText>\n          </Stat>\n        )}\n        {!!+commentStats.total.id && (\n          <Stat>\n            <StatLabel>Больше всего оценок</StatLabel>\n            <StatNumber>\n              <User\n                name={commentStats.total.name}\n                avatar_url={commentStats.total.avatar_url}\n                id={commentStats.total.id}\n              />\n            </StatNumber>\n            <StatHelpText pl=\"14\">\n              <ShowRatingPlusMinus source={commentStats.total} />\n            </StatHelpText>\n          </Stat>\n        )}\n      </SimpleGrid>\n\n      {comments?.result?.length <= commentIndex && (\n        <TotalTable likers={commentsLikers} />\n      )}\n    </VStack>\n  );\n}\n\n//#endregion\n\nfunction Header({\n  subsite,\n  avatar_url,\n  rating,\n}: {\n  subsite: Osnova.Subsite.Subsite;\n  avatar_url?: string;\n  rating?: number;\n}) {\n  return (\n    <HStack\n      spacing={{ base: 5, sm: 8, md: 10 }}\n      position=\"sticky\"\n      top=\"0\"\n      bg=\"white\"\n      zIndex=\"1000\"\n      pt=\"5\"\n      pb=\"2\"\n      px={{ base: 2, sm: 3, md: 4 }}\n      w=\"100%\"\n      justifyContent=\"center\"\n    >\n      <Avatar\n        name={subsite.name}\n        size={{ base: \"xl\", md: \"2xl\" }}\n        src={\n          subsite?.avatar?.data?.uuid\n            ? `https://leonardo.osnova.io/${subsite?.avatar?.data?.uuid}/-/scale_crop/300x300/-/format/webp/`\n            : avatar_url\n        }\n      />\n      <VStack>\n        <Heading size={{ base: \"md\", sm: \"lg\" }}>{subsite.name}</Heading>\n        <HStack justifyContent={\"space-between\"} minW=\"100%\">\n          <RatingView>{subsite.rating ?? rating ?? \"N/A\"}</RatingView>\n          <Stat>\n            <StatLabel>Создан</StatLabel>\n            <StatNumber>\n              {isValid(subsite.created)\n                ? format(subsite.created * 1000, \"dd.LL.yy\")\n                : \"N/A\"}\n            </StatNumber>\n          </Stat>\n        </HStack>\n      </VStack>\n    </HStack>\n  );\n}\n\nfunction Scope() {\n  const [searchParams] = useSearchParams();\n  const id = getTargetId(searchParams.get(\"id\") || \"\");\n\n  const { data, error } = useApi<Osnova.Subsite.SubsiteResponse>(\n    `/subsite?id=${id}`\n  );\n  const entries = useApiLazy<Osnova.Entry.EntriesResponse>(\n    `/user/${id}/entries`,\n    undefined,\n    \"1.9\"\n  );\n  const comments = useApiLazy<Osnova.Comment.CommentsResponse>(\n    `/user/${id}/comments`,\n    undefined,\n    \"1.9\"\n  );\n\n  const entriesRating = useMemo(\n    () => entries?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [entries]\n  );\n  const commentsRating = useMemo(\n    () => comments?.result?.reduce((p, c) => p + c.likes.summ, 0),\n    [comments]\n  );\n\n  const {\n    result: { subsite },\n  } = data || {\n    result: {\n      subsite: {\n        name:\n          comments?.result?.at(0)?.author?.name ||\n          entries?.result?.at(0)?.author?.name,\n      } as any,\n    },\n  };\n\n  return (\n    <VStack>\n      {error && (\n        <VStack align=\"start\">\n          <Heading>\n            Вероятно профиль закрыт{\" \"}\n            {!(comments?.result?.length || entries?.result?.length) && (\n              <>или не существует</>\n            )}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"gray.500\">\n            Некоторые данные могут быть менее точны и потребуется дополнительное\n            время для подсчета\n          </Text>\n        </VStack>\n      )}\n      <Header\n        subsite={subsite}\n        avatar_url={\n          comments?.result?.at(0)?.author?.avatar_url ||\n          entries?.result?.at(0)?.author?.avatar_url\n        }\n        rating={entriesRating + commentsRating}\n      />\n\n      <Tabs\n        variant={\"soft-rounded\"}\n        size={{ base: \"sm\", md: \"md\" }}\n        maxW=\"100%\"\n        w=\"100%\"\n      >\n        <TabList\n          minW=\"0\"\n          maxW=\"100%\"\n          overflowX=\"auto\"\n          sx={{\n            scrollbarWidth: \"none\",\n            \"::-webkit-scrollbar\": { display: \"none\" },\n            WebkitOverflowScrolling: \"touch\",\n          }}\n          px=\"1\"\n        >\n          <Tab>Обзор</Tab>\n          <Tab>Посты</Tab>\n          <Tab>Комментарии</Tab>\n          <Tab>Итог</Tab>\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <Overview\n              subsite={subsite}\n              entries={entries?.result?.length}\n              comments={comments?.result?.length}\n            />\n          </TabPanel>\n          <TabPanel>\n            <VStack align=\"flex-start\" divider={<StackDivider />}>\n              <Entries data={entries} />\n            </VStack>\n          </TabPanel>\n          <TabPanel>\n            <VStack align=\"flex-start\" divider={<StackDivider />}>\n              <Comments data={comments} />\n            </VStack>\n          </TabPanel>\n          <TabPanel>\n            <Total comments={comments} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </VStack>\n  );\n}\n\nexport default Scope;\n","const getTargetId = (target: string) =>\n  +(/(?:u\\/)?(\\d+)/.exec(target || \"\") || [])[1] || 0;\n\nconst getMonths = () => [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport { getTargetId, getMonths };\n"],"names":["value","getRating","count","summ","plus","minus","Math","abs","comment","author","avatar_url","name","date","likes","id","url","entry","html","align","as","href","rel","target","p","shadow","borderWidth","rounded","minW","spacing","justifyContent","size","src","color","format","pl","dangerouslySetInnerHTML","__html","Tweet","markdown","data","borderColor","hitsCount","intro","cover","subsite","title","blocks","console","log","thumbnailUrl","alt","objectFit","pointerEvents","type","label","children","api","ApiContext","createContext","useApiContext","useContext","useFetch","options","cache","useRef","cancelRequest","initialState","error","undefined","useReducer","state","action","payload","dispatch","useEffect","includes","current","fetchData","fetch","response","ok","Error","statusText","json","useApi","apiV","replace","useApiLazy","inRequest","useState","result","setResult","offs","setOffs","prev","length","timeout","setTimeout","clearTimeout","getStats","dsOpts","d","dd","stats","years","months","days","hours","ratingByEntity","el","dt","Date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDay","hour","getUTCHours","Object","values","datasets","labels","keys","getMonths","map","backgroundColor","Overview","entries","comments","divider","columns","base","sm","w","counters","subscriptions","subscribers","isPlus","isVerified","StatCat","Entries","useMemo","rating","ratingPlus","ratingMinus","reposts","hits","mostHits","mostLiked","mostDisliked","commentsCount","Number","isRepost","pPlus","pMinus","useConst","plugins","legend","display","entryDatasetOptions","charts","variant","isFitted","md","ActivityCharts","Comments","commentDatasetOptions","ShowRatingPlusMinus","source","fontSize","User","maxW","lg","textOverflow","overflow","TotalTable","likers","Tr","Th","isNumeric","sort","a","b","Td","Total","commentsLikers","setCommentsLikers","commentIndex","setCommentIndex","commentStats","total","cmt","val","Reflect","has","sign","position","isIndeterminate","Header","top","bg","zIndex","pt","pb","px","avatar","uuid","isValid","created","ChartJS","CategoryScale","LinearScale","RadialLinearScale","BarElement","PointElement","LineElement","Filler","Title","Tooltip","Legend","useSearchParams","searchParams","getTargetId","get","entriesRating","reduce","c","commentsRating","at","overflowX","sx","scrollbarWidth","WebkitOverflowScrolling","exec"],"sourceRoot":""}